#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"


// One sixth of the full cycle duration, in millisecond
// The larger this value the slower the walk animation
// #define WALK_PERIOD 100


piece	flare;

// static-var fire_count, firing, open, maxreloadtime, restore_delay, wpn1_lasthead, animSpeed, maxSpeed, animFramesPerKeyframe, bMoving;

#define SIG_AIM 2
//#define SIG_FIRE1 4
//#define SIG_WALK 8
//#define SMOKEPIECE1 body


#define BASEPIECE flare
//#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 4
//#define MAXTILT 100

Emitsmoke()
{
	while( TRUE )
	{
		emit-sfx 1024 + 0 from flare;
		sleep 500;
	}
	sleep 50;
	start-script Emitsmoke();
}

Create()
{
	hide flare;
	dont-shade flare;
	dont-cache flare;
	set ARMORED to 0;
	//emit-sfx 1024 + 0 from flare;
	sleep 500;
	//show flare;
	start-script Emitsmoke();
}

QueryPrimary(piecenum)
{
	piecenum=flare;
}

AimPrimary()
{
	return (1);
}

FirePrimary()
{
	emit-sfx 1024 + 0 from flare;
	return(1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode flare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode flare type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode flare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
