#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, rflare, lflare, pelvis, lleg, rleg, rthigh, lthigh,
       lturret, lbarrel, rbarrel, rturret, lexhaust, rexhaust, lfoot, rfoot, aimx1, aimy1;

static-var  bMoving, Static_Var_2, Static_Var_3, gun_3, restore_delay,
            statechg_DesiredState, statechg_StateChanging,
            moveSpeed, currentSpeed, wpn2_lasthead;

// Signal definitions
#define SIG_AIM_3			2
// Generated for N:\animations\armjeth_anim_walk.blend
// Using https://github.com/Beherith/Skeletor_S3O 
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
static-var animSpeed, maxSpeed, animFramesPerKeyframe;
#define SIG_WALK 4
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\armjeth_anim_walk.blend 
	// (c) CC BY NC ND Beherith mysterme@gmail.com
	set-signal-mask SIG_WALK;
	if (bMoving) { //Frame:3
			turn lfoot to x-axis <41.977052> speed <1239.793115> / animSpeed; //delta=-41.33 
			turn lfoot to z-axis <-0.000352> speed <300.031170> / animSpeed; //delta=10.00 
			turn lfoot to y-axis <0.002027> speed <3.337727> / animSpeed; //delta=0.11 
			turn lleg to x-axis <-6.980175> speed <214.255448> / animSpeed; //delta=7.14 
			turn lthigh to x-axis <-37.815264> speed <1105.721302> / animSpeed; //delta=36.86 
			turn lthigh to z-axis <-2.973716> speed <157.515564> / animSpeed; //delta=-5.25 
			turn lthigh to y-axis <0.671051> speed <133.498330> / animSpeed; //delta=-4.45 
			turn lturret to x-axis <-2.778373> speed <83.351185> / animSpeed; //delta=2.78 
			turn lturret to z-axis <-2.403454> speed <72.103611> / animSpeed; //delta=2.40 
			turn pelvis to z-axis <-3.000000> speed <90.000003> / animSpeed; //delta=3.00 
			turn pelvis to y-axis <-5.000000> speed <149.999996> / animSpeed; //delta=-5.00 
			turn rfoot to x-axis <-10.272441> speed <334.127939> / animSpeed; //delta=11.14 
			turn rfoot to z-axis <-0.000522> speed <171.004482> / animSpeed; //delta=-5.70 
			turn rleg to x-axis <-28.732775> speed <863.480322> / animSpeed; //delta=28.78 
			turn rthigh to x-axis <47.495517> speed <1456.593404> / animSpeed; //delta=-48.55 
			turn rthigh to z-axis <3.880425> speed <121.429459> / animSpeed; //delta=4.05 
			turn rthigh to y-axis <-4.196932> speed <21.732719> / animSpeed; //delta=0.72 
			turn rturret to x-axis <-2.809555> speed <84.286637> / animSpeed; //delta=2.81 
			turn rturret to z-axis <2.273035> speed <68.191059> / animSpeed; //delta=-2.27 
			turn torso to x-axis <-1.000000> speed <30.000000> / animSpeed; //delta=1.00 
			turn torso to y-axis <3.000000> speed <90.000003> / animSpeed; //delta=3.00 
		sleep ((33*animSpeed) -1);
	}
	while(bMoving) {
		if (bMoving) { //Frame:6
			turn lfoot to x-axis <30.208800> speed <353.047560> / animSpeed; //delta=11.77 
			turn lleg to x-axis <-23.988393> speed <510.246546> / animSpeed; //delta=17.01 
			turn lthigh to x-axis <-51.922640> speed <423.221300> / animSpeed; //delta=14.11 
			turn lthigh to z-axis <-6.246727> speed <98.190313> / animSpeed; //delta=3.27 
			turn lthigh to y-axis <2.739573> speed <62.055681> / animSpeed; //delta=2.07 
			turn lturret to x-axis <-3.371164> speed <17.783732> / animSpeed; //delta=0.59 
			turn lturret to z-axis <-4.806907> speed <72.103611> / animSpeed; //delta=2.40 
			move pelvis to y-axis [-1.000000] speed [30.000000] / animSpeed; //delta=-1.00 
			turn pelvis to z-axis <-5.000000> speed <59.999993> / animSpeed; //delta=2.00 
			turn pelvis to y-axis <-7.000000> speed <60.000006> / animSpeed; //delta=-2.00 
			turn rfoot to x-axis <-18.997758> speed <261.759495> / animSpeed; //delta=8.73 
			turn rleg to x-axis <-18.236926> speed <314.875477> / animSpeed; //delta=-10.50 
			turn rthigh to x-axis <69.063362> speed <647.035363> / animSpeed; //delta=-21.57 
			turn rthigh to z-axis <25.473464> speed <647.791158> / animSpeed; //delta=-21.59 
			turn rthigh to y-axis <-25.704218> speed <645.218593> / animSpeed; //delta=-21.51 
			turn rturret to x-axis <-3.412739> speed <18.095540> / animSpeed; //delta=0.60 
			turn rturret to z-axis <4.546071> speed <68.191059> / animSpeed; //delta=-2.27 
			turn torso to x-axis <-3.000000> speed <60.000003> / animSpeed; //delta=2.00 
			turn torso to y-axis <5.000000> speed <59.999993> / animSpeed; //delta=2.00 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:9
			turn lfoot to x-axis <48.863600> speed <559.644015> / animSpeed; //delta=-18.65 
			turn lleg to x-axis <-26.496565> speed <75.245155> / animSpeed; //delta=2.51 
			turn lthigh to x-axis <-23.765858> speed <844.703462> / animSpeed; //delta=-28.16 
			turn lthigh to z-axis <-1.769893> speed <134.305015> / animSpeed; //delta=-4.48 
			turn lthigh to y-axis <1.672492> speed <32.012452> / animSpeed; //delta=-1.07 
			turn lturret to x-axis <1.371164> speed <142.269830> / animSpeed; //delta=-4.74 
			turn lturret to z-axis <4.806907> speed <288.414445> / animSpeed; //delta=-9.61 
			move pelvis to y-axis [-0.500000] speed [15.000000] / animSpeed; //delta=0.50 
			turn pelvis to z-axis <-3.000000> speed <59.999993> / animSpeed; //delta=-2.00 
			turn pelvis to y-axis <-5.000000> speed <60.000006> / animSpeed; //delta=2.00 
			turn rfoot to x-axis <-45.379118> speed <820.049724> / animSpeed; //delta=27.33 
			turn rleg to x-axis <4.886519> speed <762.667900> / animSpeed; //delta=-25.42 
			turn rthigh to x-axis <42.587285> speed <816.212558> / animSpeed; //delta=27.21 
			turn rthigh to z-axis <4.052396> speed <673.067579> / animSpeed; //delta=22.44 
			turn rthigh to y-axis <-3.373145> speed <703.459176> / animSpeed; //delta=23.45 
			turn rturret to x-axis <1.412739> speed <144.764355> / animSpeed; //delta=-4.83 
			turn rturret to z-axis <-4.546071> speed <272.764236> / animSpeed; //delta=9.09 
			turn torso to x-axis <10.000000> speed <389.999994> / animSpeed; //delta=-13.00 
			turn torso to y-axis <3.000000> speed <59.999993> / animSpeed; //delta=-2.00 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:12
			turn lfoot to x-axis <-4.731012> speed <1607.838368> / animSpeed; //delta=53.59 
			turn lleg to x-axis <8.171767> speed <1040.049955> / animSpeed; //delta=-34.67 
			turn lthigh to x-axis <-3.387288> speed <611.357117> / animSpeed; //delta=-20.38 
			turn lthigh to z-axis <-0.000000> speed <53.096785> / animSpeed; //delta=-1.77 
			turn lthigh to y-axis <-0.000000> speed <50.174747> / animSpeed; //delta=-1.67 
			turn lturret to x-axis <-1.592791> speed <88.918642> / animSpeed; //delta=2.96 
			turn lturret to z-axis <-0.000000> speed <144.207223> / animSpeed; //delta=4.81 
			move pelvis to y-axis [-0.250000] speed [7.500000] / animSpeed; //delta=0.25 
			turn pelvis to z-axis <-0.000000> speed <90.000003> / animSpeed; //delta=-3.00 
			turn pelvis to y-axis <0.000000> speed <149.999996> / animSpeed; //delta=5.00 
			turn rfoot to x-axis <-32.213887> speed <394.956918> / animSpeed; //delta=-13.17 
			turn rleg to x-axis <52.890174> speed <1440.109652> / animSpeed; //delta=-48.00 
			turn rthigh to x-axis <-18.153523> speed <1822.224222> / animSpeed; //delta=60.74 
			turn rthigh to z-axis <0.000000> speed <121.571895> / animSpeed; //delta=4.05 
			turn rthigh to y-axis <0.000000> speed <101.194345> / animSpeed; //delta=3.37 
			turn rturret to x-axis <-1.603185> speed <90.477721> / animSpeed; //delta=3.02 
			turn rturret to z-axis <-0.000000> speed <136.382118> / animSpeed; //delta=-4.55 
			turn torso to x-axis <4.000000> speed <179.999992> / animSpeed; //delta=6.00 
			turn torso to y-axis <0.000000> speed <90.000003> / animSpeed; //delta=-3.00 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:15
			turn lfoot to x-axis <-10.265597> speed <166.037540> / animSpeed; //delta=5.53 
			turn lleg to x-axis <-28.774542> speed <1108.389276> / animSpeed; //delta=36.95 
			turn lthigh to x-axis <47.561370> speed <1528.459735> / animSpeed; //delta=-50.95 
			turn lthigh to z-axis <-3.883839> speed <116.515155> / animSpeed; //delta=3.88 
			turn lthigh to y-axis <4.202580> speed <126.077386> / animSpeed; //delta=4.20 
			turn lturret to x-axis <-2.778373> speed <35.567457> / animSpeed; //delta=1.19 
			turn lturret to z-axis <-2.403454> speed <72.103611> / animSpeed; //delta=2.40 
			move pelvis to y-axis [0.000000] speed [7.500000] / animSpeed; //delta=0.25 
			turn pelvis to z-axis <3.000000> speed <90.000003> / animSpeed; //delta=-3.00 
			turn pelvis to y-axis <5.000000> speed <149.999996> / animSpeed; //delta=5.00 
			turn rfoot to x-axis <41.967462> speed <2225.440478> / animSpeed; //delta=-74.18 
			turn rleg to x-axis <-8.854586> speed <1852.342795> / animSpeed; //delta=61.74 
			turn rthigh to x-axis <-36.647151> speed <554.808856> / animSpeed; //delta=18.49 
			turn rthigh to z-axis <3.063662> speed <91.909871> / animSpeed; //delta=-3.06 
			turn rthigh to y-axis <-0.592506> speed <17.775194> / animSpeed; //delta=-0.59 
			turn rturret to x-axis <-2.809555> speed <36.191093> / animSpeed; //delta=1.21 
			turn rturret to z-axis <2.273035> speed <68.191059> / animSpeed; //delta=-2.27 
			turn torso to x-axis <-1.000000> speed <149.999999> / animSpeed; //delta=5.00 
			turn torso to y-axis <-3.000000> speed <90.000003> / animSpeed; //delta=-3.00 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:18
			turn lfoot to x-axis <-18.974819> speed <261.276661> / animSpeed; //delta=8.71 
			turn lleg to x-axis <-18.287331> speed <314.616323> / animSpeed; //delta=-10.49 
			turn lthigh to x-axis <69.201154> speed <649.193532> / animSpeed; //delta=-21.64 
			turn lthigh to z-axis <-25.679075> speed <653.857083> / animSpeed; //delta=21.80 
			turn lthigh to y-axis <25.918288> speed <651.471264> / animSpeed; //delta=21.72 
			turn lturret to x-axis <-3.371164> speed <17.783732> / animSpeed; //delta=0.59 
			turn lturret to z-axis <-4.806907> speed <72.103611> / animSpeed; //delta=2.40 
			move pelvis to y-axis [-1.000000] speed [30.000000] / animSpeed; //delta=-1.00 
			turn pelvis to z-axis <5.000000> speed <59.999993> / animSpeed; //delta=-2.00 
			turn pelvis to y-axis <7.000000> speed <60.000006> / animSpeed; //delta=2.00 
			turn rfoot to x-axis <30.854164> speed <333.398950> / animSpeed; //delta=11.11 
			turn rleg to x-axis <-26.425333> speed <527.122411> / animSpeed; //delta=17.57 
			turn rthigh to x-axis <-50.628535> speed <419.441507> / animSpeed; //delta=13.98 
			turn rthigh to z-axis <6.451995> speed <101.649972> / animSpeed; //delta=-3.39 
			turn rthigh to y-axis <-2.643937> speed <61.542928> / animSpeed; //delta=-2.05 
			turn rturret to x-axis <-3.412739> speed <18.095540> / animSpeed; //delta=0.60 
			turn rturret to z-axis <4.546071> speed <68.191059> / animSpeed; //delta=-2.27 
			turn torso to x-axis <-3.000000> speed <59.999996> / animSpeed; //delta=2.00 
			turn torso to y-axis <-5.000000> speed <59.999993> / animSpeed; //delta=-2.00 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:21
			turn lfoot to x-axis <-45.399397> speed <792.737334> / animSpeed; //delta=26.42 
			turn lleg to x-axis <4.756469> speed <691.314020> / animSpeed; //delta=-23.04 
			turn lthigh to x-axis <42.759078> speed <793.262302> / animSpeed; //delta=26.44 
			turn lthigh to z-axis <-4.071625> speed <648.223496> / animSpeed; //delta=-21.61 
			turn lthigh to y-axis <3.468518> speed <673.493098> / animSpeed; //delta=-22.45 
			turn lturret to x-axis <1.371164> speed <142.269830> / animSpeed; //delta=-4.74 
			turn lturret to z-axis <4.806907> speed <288.414445> / animSpeed; //delta=-9.61 
			move pelvis to y-axis [-0.500000] speed [15.000000] / animSpeed; //delta=0.50 
			turn pelvis to z-axis <3.000000> speed <59.999993> / animSpeed; //delta=2.00 
			turn pelvis to y-axis <5.000000> speed <60.000006> / animSpeed; //delta=-2.00 
			turn rfoot to x-axis <49.613797> speed <562.789009> / animSpeed; //delta=-18.76 
			turn rleg to x-axis <-29.056543> speed <78.936325> / animSpeed; //delta=2.63 
			turn rthigh to x-axis <-22.408017> speed <846.615540> / animSpeed; //delta=-28.22 
			turn rthigh to z-axis <1.776516> speed <140.264373> / animSpeed; //delta=4.68 
			turn rthigh to y-axis <-1.683389> speed <28.816465> / animSpeed; //delta=0.96 
			turn rturret to x-axis <1.412739> speed <144.764355> / animSpeed; //delta=-4.83 
			turn rturret to z-axis <-4.546071> speed <272.764236> / animSpeed; //delta=9.09 
			turn torso to x-axis <10.000000> speed <389.999987> / animSpeed; //delta=-13.00 
			turn torso to y-axis <-3.000000> speed <59.999993> / animSpeed; //delta=2.00 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:24
			turn lfoot to x-axis <-32.214526> speed <395.546124> / animSpeed; //delta=-13.18 
			turn lleg to x-axis <49.366002> speed <1338.285964> / animSpeed; //delta=-44.61 
			turn lthigh to x-axis <-16.864502> speed <1788.707391> / animSpeed; //delta=59.62 
			turn lthigh to z-axis <0.000000> speed <122.148742> / animSpeed; //delta=-4.07 
			turn lthigh to y-axis <0.000000> speed <104.055552> / animSpeed; //delta=-3.47 
			turn lturret to x-axis <-1.592791> speed <88.918642> / animSpeed; //delta=2.96 
			turn lturret to z-axis <-0.000000> speed <144.207223> / animSpeed; //delta=4.81 
			move pelvis to y-axis [-0.250000] speed [7.500000] / animSpeed; //delta=0.25 
			turn pelvis to z-axis <-0.000000> speed <90.000003> / animSpeed; //delta=3.00 
			turn pelvis to y-axis <0.000000> speed <149.999996> / animSpeed; //delta=-5.00 
			turn rfoot to x-axis <-4.597207> speed <1626.330145> / animSpeed; //delta=54.21 
			turn rleg to x-axis <7.582778> speed <1099.179637> / animSpeed; //delta=-36.64 
			turn rthigh to x-axis <-3.156404> speed <577.548391> / animSpeed; //delta=-19.25 
			turn rthigh to z-axis <-0.000000> speed <53.295470> / animSpeed; //delta=1.78 
			turn rthigh to y-axis <-0.000000> speed <50.501658> / animSpeed; //delta=1.68 
			turn rturret to x-axis <-1.603185> speed <90.477721> / animSpeed; //delta=3.02 
			turn rturret to z-axis <-0.000000> speed <136.382118> / animSpeed; //delta=-4.55 
			turn torso to x-axis <4.000000> speed <179.999992> / animSpeed; //delta=6.00 
			turn torso to y-axis <0.000000> speed <90.000003> / animSpeed; //delta=3.00 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:27
			turn lfoot to x-axis <41.977052> speed <2225.747324> / animSpeed; //delta=-74.19 
			turn lleg to x-axis <-6.980175> speed <1690.385285> / animSpeed; //delta=56.35 
			turn lthigh to x-axis <-37.815264> speed <628.522853> / animSpeed; //delta=20.95 
			turn lthigh to z-axis <-2.973716> speed <89.211487> / animSpeed; //delta=2.97 
			turn lthigh to y-axis <0.671051> speed <20.131518> / animSpeed; //delta=0.67 
			turn lturret to x-axis <-2.778373> speed <35.567457> / animSpeed; //delta=1.19 
			turn lturret to z-axis <-2.403454> speed <72.103611> / animSpeed; //delta=2.40 
			move pelvis to y-axis [0.000000] speed [7.500000] / animSpeed; //delta=0.25 
			turn pelvis to z-axis <-3.000000> speed <90.000003> / animSpeed; //delta=3.00 
			turn pelvis to y-axis <-5.000000> speed <149.999996> / animSpeed; //delta=-5.00 
			turn rfoot to x-axis <-8.912775> speed <129.467038> / animSpeed; //delta=4.32 
			turn rleg to x-axis <-31.601267> speed <1175.521344> / animSpeed; //delta=39.18 
			turn rthigh to x-axis <48.626722> speed <1553.493785> / animSpeed; //delta=-51.78 
			turn rthigh to z-axis <3.967067> speed <119.012008> / animSpeed; //delta=-3.97 
			turn rthigh to y-axis <-4.274485> speed <128.234556> / animSpeed; //delta=-4.27 
			turn rturret to x-axis <-2.809555> speed <36.191093> / animSpeed; //delta=1.21 
			turn rturret to z-axis <2.273035> speed <68.191059> / animSpeed; //delta=-2.27 
			turn torso to x-axis <-1.000000> speed <149.999999> / animSpeed; //delta=5.00 
			turn torso to y-axis <3.000000> speed <90.000003> / animSpeed; //delta=3.00 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from MotionControl()!
StopWalking() {
	move pelvis to y-axis [0.000000] speed [10.000000];
	turn lfoot to x-axis <0.650615> speed <741.915775>;
	turn lfoot to y-axis <-0.109231> speed <1.112576>;
	turn lfoot to z-axis <10.000687> speed <100.010390>;
	turn lleg to x-axis <0.161674> speed <563.461762>;
	turn lthigh to x-axis <-0.957887> speed <596.235797>;
	turn lthigh to y-axis <5.120995> speed <224.497699>;
	turn lthigh to z-axis <-8.224235> speed <217.952361>;
	turn lturret to x-axis <0.000000> speed <47.423277>;
	turn lturret to z-axis <0.000000> speed <96.138148>;
	turn pelvis to y-axis <0.000000> speed <49.999999>;
	turn pelvis to z-axis <0.000000> speed <30.000001>;
	turn rfoot to x-axis <0.865157> speed <738.589814>;
	turn rfoot to z-axis <-5.700671> speed <57.001494>;
	turn rleg to x-axis <0.000000> speed <563.807224>;
	turn rthigh to x-axis <-1.057597> speed <595.559830>;
	turn rthigh to y-axis <-4.921356> speed <222.542195>;
	turn rthigh to z-axis <7.928074> speed <215.930386>;
	turn rturret to x-axis <0.000000> speed <48.254785>;
	turn rturret to z-axis <0.000000> speed <90.921412>;
	turn torso to x-axis <0.000000> speed <129.999998>;
	turn torso to y-axis <0.000000> speed <30.000001>;
}
// REMEMBER TO animspeed = 3 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 3; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 3) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<1) animSpeed=1;
		if (animspeed>6) animSpeed = 6;
		sleep 98;
	}
}
StartMoving(){
	signal SIG_WALK;
	bMoving=TRUE;
  set-signal-mask SIG_WALK;
	start-script UnitSpeed();
  start-script Walk();
}
StopMoving(){
	signal SIG_WALK;
	bMoving=FALSE;
  call-script StopWalking();
}



#define BASEPIECE pelvis
#define HITSPEED <65.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"

Go()
{
	Static_Var_2 = 1;
	if( !Static_Var_3 )
	{
		turn lturret to z-axis <0.000000> now;
		turn lturret to z-axis <-45> speed <360>;
		turn rturret to z-axis <0.000000> now;
		turn rturret to z-axis <45> speed <360>;
		sleep 250;
		Static_Var_3 = 1;
	}
}

Stop()
{
	if( Static_Var_3 )
	{
		Static_Var_3 = 0;
		turn rturret to z-axis <0> speed <360>;
		turn lturret to z-axis <0> speed <360>;
		sleep 250;
	}
	Static_Var_2 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
		else
		{
			call-script Go();
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}


Create()
{
	hide rflare;
	hide rexhaust;
	hide lexhaust;
	hide lflare;
	hide aimx1;
	hide aimy1;
	hide rflare;
	hide lflare;
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 0;
	gun_3 = torso;
	restore_delay = 3000;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	animSpeed = 3;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 5;
}


SweetSpot(piecenum)
{
	piecenum = torso;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn aimy1 to y-axis <0.000000> speed <90.000000>;
	wpn2_lasthead = 1000000;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	set-signal-mask SIG_AIM_3;
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = rflare + gun_3;;
}

AimSecondary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM_3;
	while( !Static_Var_3 )
	{
		return(0);
	}
	turn aimy1 to y-axis heading speed <275.000000>;
	if (((get ABS(wpn2_lasthead - heading)) > 65536) OR(((get ABS(wpn2_lasthead - heading)) > 5000) AND ((get ABS(wpn2_lasthead - heading)) < 60536)))
	{
		wpn2_lasthead = 1000000;
		wait-for-turn aimy1 around y-axis;
	}
	wpn2_lasthead = heading;
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
	if( gun_3 )
	{
		move lbarrel to z-axis [-2] speed [35.000000];
		wait-for-move lbarrel along z-axis;
		emit-sfx 1024 from rexhaust;
		move lbarrel to z-axis [0.000000] speed [4.000000];
	}
	else
	{
		move rbarrel to z-axis [-2] speed [35.000000];
		wait-for-move rbarrel along z-axis;
		emit-sfx 1024 from lexhaust;
		move rbarrel to z-axis [0.000000] speed [4.000000];
	}
	gun_3 = !gun_3;
}

AimFromSecondary(piecenum)
{
	piecenum = torso;
}

QuerySecondary(piecenum)
{
	piecenum = rflare + gun_3;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type BITMAPONLY | NOHEATCLOUD;
		explode rleg type BITMAPONLY | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lthigh type BITMAPONLY | NOHEATCLOUD;
		//explode lleg type BITMAPONLY | NOHEATCLOUD;
		explode lfoot type BITMAPONLY | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		//explode lturret type BITMAPONLY | NOHEATCLOUD;
		//explode lbarrel type BITMAPONLY | NOHEATCLOUD;
		//explode lflare type BITMAPONLY | NOHEATCLOUD;
		//explode lexhaust type BITMAPONLY | NOHEATCLOUD;
		//explode rturret type BITMAPONLY | NOHEATCLOUD;
		//explode rbarrel type BITMAPONLY | NOHEATCLOUD;
		//explode rflare type BITMAPONLY | NOHEATCLOUD;
		//explode rexhaust type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type FALL | NOHEATCLOUD;
		explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type FALL | NOHEATCLOUD;
		//explode lthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lturret type FALL | NOHEATCLOUD;
		//explode lbarrel type FALL | NOHEATCLOUD;
		//explode lflare type FALL | NOHEATCLOUD;
		//explode lexhaust type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rturret type FALL | NOHEATCLOUD;
		//explode rbarrel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rflare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rexhaust type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode lthigh type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode lturret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lbarrel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lflare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lexhaust type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rturret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rbarrel type SMOKE | FALL | NOHEATCLOUD;
		//explode rflare type SMOKE | FALL | NOHEATCLOUD;
		//explode rexhaust type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lthigh type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lturret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode lbarrel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode lflare type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode lexhaust type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rturret type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode rbarrel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode rflare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rexhaust type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
