#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece base, collar1, ball1, collar2, ball2;

static-var  statechg_DesiredState, statechg_StateChanging;
static-var  Stunned;

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	return (0);
}

#define SMOKEPIECE base
#include "smokeunit_thread_nohit.h"

Go()
{
	set ARMORED to 1;
	spin ball1 around y-axis speed <-30.00000>;
	spin ball2 around y-axis speed <-30.00000>;
	spin collar1 around y-axis speed <60.00000>;
	spin collar2 around y-axis speed <60.00000>;
	return (0);
}
Stop()
{
	set ARMORED to 0;
	spin ball1 around y-axis speed <0.000000>;
	spin ball2 around y-axis speed <0.000000>;
	spin collar1 around y-axis speed <0.000000>;
	spin collar2 around y-axis speed <0.000000>;
	return (0);
}
Create()
{
	call-script InitState();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	call-script Go();
	return (0);
}

SetStunned(State)
{
    Stunned = State;
	if (Stunned) {
	    call-script Stop();
	} else {
	    call-script Go();
	}
}


RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
            call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
	return (0);
}

Activate()
{
	start-script RequestState(0);
	return (0);
}

Deactivate()
{
	start-script RequestState(1);
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode collar1 type BITMAPONLY | NOHEATCLOUD;
		explode ball1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode collar2 type BITMAPONLY | NOHEATCLOUD;
		explode ball2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode collar1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode ball1 type FALL | NOHEATCLOUD;
		explode collar2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode ball2 type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode collar1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode ball1 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode collar2 type SMOKE | FALL | NOHEATCLOUD;
		explode ball2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode collar1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode ball1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode collar2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode ball2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
