#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SIG_BUILD		4	
#define SIG_WALK		2	

piece  torso, pelvis, lthigh, rthigh, rleg, lleg, beamhinge,
       rfoot, lfoot, beamcase, nano, aimy1;

static-var  notBuilding, bMoving, statechg_DesiredState, statechg_StateChanging;

static-var animSpeed, maxSpeed, animFramesPerKeyframe;
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\corck_anim_walk.blend 
	set-signal-mask SIG_WALK;
	if (bMoving) { //Frame:4
			turn lfoot to x-axis <-29.399999> speed <948.439919> / animSpeed; 
			turn lfoot to y-axis <0.000000> speed <19.876628> / animSpeed; 
			turn lleg to x-axis <9.399998> speed <281.999950> / animSpeed; 
			turn lthigh to x-axis <21.300000> speed <638.999987> / animSpeed; 
			turn rfoot to x-axis <26.099995> speed <782.999858> / animSpeed; 
			turn rleg to x-axis <-4.600003> speed <138.000105> / animSpeed; 
			turn rthigh to x-axis <-42.499998> speed <1274.999950> / animSpeed; 
		sleep 131;
	}
	while(bMoving) {
		if (bMoving) { //Frame:8
			turn lfoot to x-axis <-48.099999> speed <560.999978> / animSpeed; 
			turn lleg to x-axis <39.499995> speed <902.999895> / animSpeed; 
			turn lthigh to x-axis <22.456250> speed <34.687508> / animSpeed; 
			move pelvis to y-axis [-0.695775] speed [20.873240] / animSpeed; 
			turn pelvis to y-axis <5.000000> speed <149.999996> / animSpeed; 
			turn rfoot to x-axis <-11.900001> speed <1139.999895> / animSpeed; 
			turn rleg to x-axis <41.299996> speed <1376.999972> / animSpeed; 
			move rthigh to y-axis [-0.695775] speed [20.873240] / animSpeed; 
			turn rthigh to x-axis <-76.899993> speed <1031.999851> / animSpeed; 
			turn rthigh to y-axis <-5.000000> speed <149.999996> / animSpeed; 
			turn torso to x-axis <2.666667> speed <80.000004> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:12
			turn lfoot to x-axis <-28.600000> speed <584.999965> / animSpeed; 
			turn lleg to x-axis <-37.499999> speed <2309.999825> / animSpeed; 
			turn lthigh to x-axis <60.999996> speed <1156.312385> / animSpeed; 
			move pelvis to y-axis [-0.995989] speed [9.006422] / animSpeed; 
			turn pelvis to y-axis <8.000000> speed <90.000003> / animSpeed; 
			turn rfoot to x-axis <10.399998> speed <668.999971> / animSpeed; 
			turn rleg to x-axis <-1.600002> speed <1286.999931> / animSpeed; 
			move rthigh to y-axis [-0.995989] speed [9.006422] / animSpeed; 
			turn rthigh to x-axis <-12.499999> speed <1931.999825> / animSpeed; 
			turn rthigh to y-axis <-8.000000> speed <90.000003> / animSpeed; 
			turn torso to x-axis <8.999999> speed <189.999978> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:16
			turn lfoot to x-axis <-0.300002> speed <848.999925> / animSpeed; 
			turn lleg to x-axis <-36.800001> speed <20.999963> / animSpeed; 
			turn lthigh to x-axis <26.599998> speed <1031.999954> / animSpeed; 
			move pelvis to y-axis [-0.696218] speed [8.993125] / animSpeed; 
			turn pelvis to y-axis <5.000000> speed <90.000003> / animSpeed; 
			turn rfoot to x-axis <-0.000000> speed <311.999934> / animSpeed; 
			turn rleg to x-axis <-0.000000> speed <48.000064> / animSpeed; 
			move rthigh to y-axis [-0.696218] speed [8.993125] / animSpeed; 
			turn rthigh to x-axis <-0.000000> speed <374.999976> / animSpeed; 
			turn rthigh to y-axis <0.000000> speed <239.999998> / animSpeed; 
			turn torso to x-axis <5.000000> speed <119.999986> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:20
			turn lfoot to x-axis <26.099995> speed <791.999930> / animSpeed; 
			turn lleg to x-axis <-4.600003> speed <965.999912> / animSpeed; 
			turn lthigh to x-axis <-42.499998> speed <2072.999877> / animSpeed; 
			move pelvis to y-axis [0.000000] speed [20.886537] / animSpeed; 
			turn pelvis to y-axis <-0.000000> speed <149.999996> / animSpeed; 
			turn rfoot to x-axis <-29.399999> speed <881.999984> / animSpeed; 
			turn rleg to x-axis <9.399998> speed <281.999950> / animSpeed; 
			move rthigh to y-axis [0.000000] speed [20.886537] / animSpeed; 
			turn rthigh to x-axis <21.300000> speed <638.999987> / animSpeed; 
			turn torso to x-axis <-0.000000> speed <149.999996> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:24
			turn lfoot to x-axis <-11.900001> speed <1139.999895> / animSpeed; 
			turn lleg to x-axis <41.299996> speed <1376.999972> / animSpeed; 
			turn lthigh to x-axis <-76.899993> speed <1031.999851> / animSpeed; 
			move pelvis to y-axis [-0.695775] speed [20.873240] / animSpeed; 
			turn pelvis to y-axis <-5.000000> speed <149.999996> / animSpeed; 
			turn rfoot to x-axis <-48.099999> speed <560.999978> / animSpeed; 
			turn rleg to x-axis <39.499995> speed <902.999895> / animSpeed; 
			move rthigh to y-axis [-0.695775] speed [20.873240] / animSpeed; 
			turn rthigh to x-axis <22.456250> speed <34.687508> / animSpeed; 
			turn rthigh to y-axis <5.000000> speed <149.999996> / animSpeed; 
			turn torso to x-axis <2.666667> speed <80.000004> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:28
			turn lfoot to x-axis <10.399998> speed <668.999971> / animSpeed; 
			turn lleg to x-axis <-1.600002> speed <1286.999931> / animSpeed; 
			turn lthigh to x-axis <-12.499999> speed <1931.999825> / animSpeed; 
			move pelvis to y-axis [-0.995989] speed [9.006422] / animSpeed; 
			turn pelvis to y-axis <-8.000000> speed <90.000003> / animSpeed; 
			turn rfoot to x-axis <-28.600000> speed <584.999965> / animSpeed; 
			turn rleg to x-axis <-37.499999> speed <2309.999825> / animSpeed; 
			move rthigh to y-axis [-0.995989] speed [9.006422] / animSpeed; 
			turn rthigh to x-axis <60.999996> speed <1156.312385> / animSpeed; 
			turn rthigh to y-axis <8.000000> speed <90.000003> / animSpeed; 
			turn torso to x-axis <8.999999> speed <189.999978> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:32
			turn lfoot to x-axis <-0.000000> speed <311.999934> / animSpeed; 
			turn lleg to x-axis <-0.000000> speed <48.000064> / animSpeed; 
			turn lthigh to x-axis <-0.000000> speed <374.999976> / animSpeed; 
			move pelvis to y-axis [-0.696218] speed [8.993125] / animSpeed; 
			turn pelvis to y-axis <-5.000000> speed <90.000003> / animSpeed; 
			turn rfoot to x-axis <-0.300002> speed <848.999925> / animSpeed; 
			turn rleg to x-axis <-36.800001> speed <20.999963> / animSpeed; 
			move rthigh to y-axis [-0.696218] speed [8.993125] / animSpeed; 
			turn rthigh to x-axis <26.599998> speed <1031.999954> / animSpeed; 
			turn rthigh to y-axis <5.000000> speed <90.000003> / animSpeed; 
			turn torso to x-axis <5.000000> speed <119.999986> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:36
			turn lfoot to x-axis <-29.399999> speed <881.999984> / animSpeed; 
			turn lleg to x-axis <9.399998> speed <281.999950> / animSpeed; 
			turn lthigh to x-axis <21.300000> speed <638.999987> / animSpeed; 
			move pelvis to y-axis [0.000000] speed [20.886537] / animSpeed; 
			turn pelvis to y-axis <-0.000000> speed <149.999996> / animSpeed; 
			turn rfoot to x-axis <26.099995> speed <791.999930> / animSpeed; 
			turn rleg to x-axis <-4.600003> speed <965.999912> / animSpeed; 
			move rthigh to y-axis [0.000000] speed [20.886537] / animSpeed; 
			turn rthigh to x-axis <-42.499998> speed <2072.999877> / animSpeed; 
			turn rthigh to y-axis <-0.000000> speed <149.999996> / animSpeed; 
			turn torso to x-axis <-0.000000> speed <149.999996> / animSpeed; 
		sleep ((33*animSpeed) -1);
		}

	}
}
// Call this from MotionControl()!
StopWalking() {
	move pelvis to y-axis [0.000000] speed [5.221634];
	move rthigh to y-axis [0.000000] speed [5.221634];
	turn lfoot to x-axis <2.214665> speed <284.999974>;
	turn lfoot to y-axis <0.662554> speed <4.969157>;
	turn lleg to x-axis <0.000000> speed <577.499956>;
	turn lthigh to x-axis <0.000000> speed <518.249969>;
	turn pelvis to y-axis <0.000000> speed <37.499999>;
	turn rfoot to x-axis <0.000000> speed <284.999974>;
	turn rleg to x-axis <0.000000> speed <577.499956>;
	turn rthigh to x-axis <0.000000> speed <518.249969>;
	turn rthigh to y-axis <0.000000> speed <60.000000>;
	turn torso to x-axis <0.000000> speed <47.499995>;
}
UnitSpeed(){
 maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
 animFramesPerKeyframe = 4; //we need to calc the frames per keyframe value, from the known animtime
 maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
 while(TRUE){
  animSpeed = (get CURRENT_SPEED);
  if (animSpeed<1) animSpeed=1;
  animSpeed = (maxSpeed * 4) / animSpeed; 
  //get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed);
  if (animSpeed<2) animSpeed=2;
  if (animspeed>8) animSpeed = 8;
  sleep 131;
 }
}

#define BASEPIECE pelvis
#define HITSPEED <65.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"

Go()
{
	turn beamcase to z-axis <-90> speed <180>;
	wait-for-turn beamcase around z-axis;
	
	turn beamhinge to x-axis <90> speed <360>;
	wait-for-turn beamhinge around x-axis;
}

Stop()
{
	set INBUILDSTANCE to 0;
	
	turn beamhinge to x-axis <0> speed <360>;
	wait-for-turn beamhinge around x-axis;	

	turn beamcase to z-axis <0> speed <180>;
	wait-for-turn beamcase around z-axis;
	

	
	turn aimy1 to y-axis <0.000000> speed <160.000000>;
	wait-for-turn aimy1 around y-axis;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide lthigh;
	hide rthigh;
	hide nano;
	hide aimy1;
	bMoving = FALSE;
	notBuilding = 1;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	animSpeed = 4;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(heading, pitch)
{
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	turn aimy1 to y-axis heading speed <600.000000>;
	wait-for-turn aimy1 around y-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	sleep 6000;
	set-signal-mask 0;
	signal SIG_BUILD;	
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
	signal SIG_WALK;
	set-signal-mask SIG_WALK;
	start-script UnitSpeed();
	start-script Walk();
}

StopMoving()
{
	bMoving = FALSE;
	signal SIG_WALK;
	call-script StopWalking();
}

QueryNanoPiece(piecenum)
{
	piecenum = nano;
}

/*
TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}
*/

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type BITMAPONLY | NOHEATCLOUD;
		explode rleg type BITMAPONLY | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type BITMAPONLY | NOHEATCLOUD;
		//explode lleg type BITMAPONLY | NOHEATCLOUD;
		//explode lfoot type BITMAPONLY | NOHEATCLOUD;
		//explode torso type BITMAPONLY | NOHEATCLOUD;
		//explode beamhinge type BITMAPONLY | NOHEATCLOUD;
		//explode beamcase type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode nano type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lleg type FALL | NOHEATCLOUD;
		//explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode torso type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode beamhinge type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode beamcase type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode nano type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lleg type SMOKE | FALL | NOHEATCLOUD;
		//explode lfoot type SMOKE | FALL | NOHEATCLOUD;
		//explode torso type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode beamhinge type SMOKE | FALL | NOHEATCLOUD;
		//explode beamcase type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode nano type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lthigh type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode lleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lfoot type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode torso type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode beamhinge type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode beamcase type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode nano type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
