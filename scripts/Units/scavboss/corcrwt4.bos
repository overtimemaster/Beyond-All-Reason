#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turretl, sleevel, barrell, flarel, turretr, sleever, barrelr, flarer, 
       turretf, sleevef, barrelf, flaref, thrustrr, thrustrl, thrustfr, thrustfl, 
       thrustrra, thrustrla, thrustfra, thrustfla;
       

static-var  restore_delay, v1;

// Signal definitions
#define SIG_AIM				4
#define SIG_AIM_2			8
#define SIG_AIM_3			16


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( (healthpercent < 66) AND (healthpercent > 0 ))
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide thrustfla;
	hide flaref;
	hide thrustrla;
	hide thrustfra;
	hide flarel;
	hide thrustrra;
	hide flarer;
	turn thrustfla to x-axis <-90> now;
	turn thrustfra to x-axis <-90> now;
	turn thrustrra to x-axis <-90> now;
	turn thrustrla to x-axis <-90> now;
	start-script SmokeUnit();
	sleep 1500;
}

Activate()
{
	show thrustfla;
	show thrustrla;
	show thrustfra;
	show thrustrra;
}

Deactivate()
{
	hide thrustfla;
	hide thrustrla;
	hide thrustfra;
	hide thrustrra;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryPrimary(piecenum)
{
	piecenum = flaref;
}

QuerySecondary(piecenum)
{
	piecenum = flarel;
}

QueryTertiary(piecenum)
{
	piecenum = flarer;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	turn base to y-axis <0.000000> speed <250.000000>;
	turn base to x-axis <0.000000> speed <250.000000>;
	turn turretf to z-axis <0> speed <250>;
	turn sleevef to x-axis <0> speed <250>;
	
	turn turretl to x-axis <0> speed <250>;
	turn sleevel to y-axis <0> speed <250>;
	
	turn turretr to x-axis <0> speed <250>;
	turn sleever to y-axis <0> speed <250>;
}

StartMoving()
{
	sleep 1000;
}

StopMoving()
{
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	
	var p;
	var h;
	var a;
	p = get KTAN(pitch);
	h = get KTAN(heading);
	a = get ATAN(h, p);
	turn turretf to z-axis a speed <200.000000>;

	a = get HYPOT(h, p);
	a = get ATAN(a, 1000);
	turn sleevef to x-axis <0> - a speed <200.000000>;
	wait-for-turn turretf around z-axis;
	wait-for-turn sleevef around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	var aimto;
	aimto= <-90> + heading;
	if (aimto > <90>) {
		aimto = <90>;
	}
	if (aimto < <-90>) {
		aimto = <-90>;
	}
	//turn turretl to x-axis  speed <200.000000>;
	turn sleevel to y-axis aimto speed <200.000000>;
	wait-for-turn sleevel around y-axis;
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	var aimto;
	aimto= <90> + heading;
	if (aimto > <90>) {
		aimto = <90>;
	}
	if (aimto < <-90>) {
		aimto = <-90>;
	}
	//turn turretr to x-axis heading speed <200.000000>;
	turn sleever to y-axis aimto speed <200.000000>;
	wait-for-turn sleever around y-axis;
	return (1);
}

FirePrimary()
{
	sleep 100;
}

FireSecondary()
{
	sleep 100;
}

FireTertiary()
{
	sleep 100;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turretf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleevef type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flaref type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turretr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleever type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarer type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turretl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleevel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode barrell type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrl type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrustrla type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfla type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfra type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrra type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turretf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleevef type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flaref type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turretr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleever type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarer type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turretl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleevel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode barrell type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrl type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrustrla type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfla type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfra type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrra type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turretf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleevef type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flaref type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turretr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleever type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarer type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turretl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleevel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode barrell type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrl type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrustrla type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfla type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfra type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrra type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turretf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleevef type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelf type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flaref type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode turretr type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleever type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode barrelr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarer type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turretl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode sleevel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode barrell type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode flarel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrl type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrustrla type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfl type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfla type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustfra type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrr type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode thrustrra type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
