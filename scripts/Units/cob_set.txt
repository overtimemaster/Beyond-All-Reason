Binary file armah.cob matches
armalab.bos:    set YARD_OPEN to 1;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 1;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set YARD_OPEN to 0;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 0;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set INBUILDSTANCE to 1;
armalab.bos:    set INBUILDSTANCE to 0;
armalab.bos:    set-signal-mask SIG_ACTIVATE;
armalab.bos:    set-signal-mask 0;
armalab.bos:Killed(severity, corpsetype)
armalab.bos:            corpsetype = 1 ;
armalab.bos:            return(corpsetype);
armalab.bos:            corpsetype = 2 ;
armalab.bos:            return(corpsetype);
armalab.bos:            corpsetype = 3 ;
armalab.bos:            return(corpsetype);
armalab.bos:    corpsetype = 3 ;
armalab.bos:    return corpsetype;
armamb.bos:     set ARMORED to 0;
armamb.bos:     set ARMORED to 1;
armamb.bos:     set-signal-mask 0;
armamb.bos:SetStunned(State)
armamb.bos:     set-signal-mask SIG_AIM;
armamb.bos:     set-signal-mask 2;
armamb.bos:/*SetMaxReloadTime(Func_Var_1)
armamb.bos:Killed(severity, corpsetype)
armamb.bos:             corpsetype = 1 ;
armamb.bos:             return(corpsetype);
armamb.bos:             corpsetype = 2 ;
armamb.bos:             return(corpsetype);
armamb.bos:             corpsetype = 3 ;
armamb.bos:             return(corpsetype);
armamb.bos:     corpsetype = 3 ;
armamb.bos:     return corpsetype;
Binary file armamb.cob matches
armamd.bos:// OffsetToScriptCodeIndexArray        f64
armamd.bos:// OffsetToScriptNameOffsetArray       fa8
armamd.bos:// OffsetToPieceNameOffsetArray        fec
armamd.bos:// OffsetToScriptCode                  2c
armamd.bos:// OffsetToNameArray                   1010
armamd.bos:// OffsetToFirstName                   1010
armamd.bos:SetMaxReloadTime(Func_Var_1)
armamd.bos:/*   1d4:*/  set-signal-mask SIG_AIM;
armamd.bos:Killed(severity, corpsetype)
armamd.bos:/*   271:*/          corpsetype = 1;
armamd.bos:/*   2b4:*/          return (corpsetype);
armamd.bos:/*   2be:*/          corpsetype = 2;
armamd.bos:/*   301:*/          return (corpsetype);
armamd.bos:/*   30b:*/          corpsetype = 3;
armamd.bos:/*   369:*/          return (corpsetype);
armamd.bos:/*   36c:*/  corpsetype = 3;
armamd.bos:/*   3cd:*/  return (corpsetype);
Binary file armamd.cob matches
armamex.bos:    set ARMORED to 0;
armamex.bos:    set ARMORED to 1;
armamex.bos:SetStunned(State)
armamex.bos:SetSpeed(Func_Var_1)
armamex.bos:    set-signal-mask 2;
armamex.bos:    set ACTIVATION to 0;
armamex.bos:    set ACTIVATION to 100;
armamex.bos:Killed(severity, corpsetype)
armamex.bos:            corpsetype = 1 ;
armamex.bos:            return(corpsetype);
armamex.bos:            corpsetype = 2 ;
armamex.bos:            return(corpsetype);
armamex.bos:            corpsetype = 3 ;
armamex.bos:            return(corpsetype);
armamex.bos:    corpsetype = 3 ;
armamex.bos:    return corpsetype;
Binary file armamex.cob matches
armamph.bos:    set-signal-mask SIG_MOVE;
armamph.bos:setSFXoccupy(Func_Var_1)
armamph.bos:SetMaxReloadTime(Func_Var_1)
armamph.bos:    set-signal-mask 0;
armamph.bos:SetStunned(State)
armamph.bos:    set-signal-mask SIG_AIM;
armamph.bos:Killed(severity, corpsetype)
armamph.bos:            corpsetype = 1 ;
armamph.bos:            return(corpsetype);
armamph.bos:            corpsetype = 2 ;
armamph.bos:            return(corpsetype);
armamph.bos:            corpsetype = 3 ;
armamph.bos:            return(corpsetype);
armamph.bos:    corpsetype = 3 ;
armamph.bos:    return corpsetype;
Binary file armamph.cob matches
armamsub.bos:   set YARD_OPEN to 1;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 1;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set YARD_OPEN to 0;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 0;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set INBUILDSTANCE to 1;
armamsub.bos:   set INBUILDSTANCE to 0;
armamsub.bos:   set-signal-mask SIG_ACTIVATE;
armamsub.bos:   set-signal-mask 0;
armamsub.bos:Killed(severity, corpsetype)
armamsub.bos:           corpsetype = 1 ;
armamsub.bos:           return(corpsetype);
armamsub.bos:           corpsetype = 2 ;
armamsub.bos:           return(corpsetype);
armamsub.bos:           corpsetype = 3 ;
armamsub.bos:           return(corpsetype);
armamsub.bos:   corpsetype = 3 ;
armamsub.bos:   return corpsetype;
armanac.bos:            // Set values for tilt
armanac.bos:    set-signal-mask SIG_MOVE;
armanac.bos:setSFXoccupy(Func_Var_1)
armanac.bos:SetMaxReloadTime(Func_Var_1)
armanac.bos:SetStunned(State)
armanac.bos:    set-signal-mask SIG_AIM;
armanac.bos:Killed(severity, corpsetype)
armanac.bos:            corpsetype = 1 ;
armanac.bos:            return(corpsetype);
armanac.bos:            corpsetype = 2 ;
armanac.bos:            return(corpsetype);
armanac.bos:            corpsetype = 3 ;
armanac.bos:            return(corpsetype);
armanac.bos:    corpsetype = 3 ;
armanac.bos:    return corpsetype;
Binary file armanac.cob matches
armanni.bos:    set ARMORED to 0;
armanni.bos:    set ARMORED to 1;
armanni.bos:SetMaxReloadTime(Func_Var_1)
armanni.bos:    set-signal-mask SIG_AIM;
armanni.bos:Killed(severity, corpsetype)
armanni.bos:            corpsetype = 1 ;
armanni.bos:            return(corpsetype);
armanni.bos:            corpsetype = 2 ;
armanni.bos:            return(corpsetype);
armanni.bos:            corpsetype = 3 ;
armanni.bos:            return(corpsetype);
armanni.bos:    corpsetype = 3 ;
armanni.bos:    return corpsetype;
Binary file armanni.cob matches
armap.bos:      set YARD_OPEN to 1;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 1;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set YARD_OPEN to 0;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 0;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set INBUILDSTANCE to 1;
armap.bos:      set INBUILDSTANCE to 0;
armap.bos:      set-signal-mask SIG_ACTIVATE;
armap.bos:      set-signal-mask 0;
armap.bos:Killed(severity, corpsetype)
armap.bos:              corpsetype = 1 ;
armap.bos:              return(corpsetype);
armap.bos:              corpsetype = 2 ;
armap.bos:              return(corpsetype);
armap.bos:              corpsetype = 3 ;
armap.bos:              return(corpsetype);
armap.bos:      corpsetype = 3 ;
armap.bos:      return corpsetype;
armarad.bos:Killed(severity, corpsetype)
armarad.bos:            corpsetype = 1 ;
armarad.bos:            return(corpsetype);
armarad.bos:            corpsetype = 2 ;
armarad.bos:            return(corpsetype);
armarad.bos:            corpsetype = 3 ;
armarad.bos:            return(corpsetype);
armarad.bos:    corpsetype = 3 ;
armarad.bos:    return corpsetype;
armart.bos:SetMaxReloadTime(Func_Var_1)
armart.bos:SetStunned(State)
armart.bos:     set-signal-mask SIG_AIM;
armart.bos:Killed(severity, corpsetype)
armart.bos:             corpsetype = 1 ;
armart.bos:             return(corpsetype);
armart.bos:             corpsetype = 2 ;
armart.bos:             return(corpsetype);
armart.bos:             corpsetype = 3 ;
armart.bos:             return(corpsetype);
armart.bos:     corpsetype = 3 ;
armart.bos:     return corpsetype;
Binary file armart.cob matches
armaser.bos:SetStunned(State)
armaser.bos:    //set-signal-mask SIG_WALK;
armaser.bos:            set ACTIVATION to 0;
armaser.bos:    set-signal-mask SIG_ACTIVATE;
armaser.bos:    set-signal-mask SIG_ACTIVATE;
armaser.bos:            set-signal-mask 4;
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 100;
armaser.bos:Killed(severity, corpsetype)
armaser.bos:            corpsetype = 1 ;
armaser.bos:            return(corpsetype);
armaser.bos:            corpsetype = 2 ;
armaser.bos:            return(corpsetype);
armaser.bos:            corpsetype = 3 ;
armaser.bos:            return(corpsetype);
armaser.bos:    corpsetype = 3 ;
armaser.bos:    return corpsetype;
Binary file armaser.cob matches
armason.bos:Killed(severity, corpsetype)
armason.bos:            corpsetype = 1 ;
armason.bos:            return(corpsetype);
armason.bos:            corpsetype = 2 ;
armason.bos:            return(corpsetype);
armason.bos:            corpsetype = 3 ;
armason.bos:            return(corpsetype);
armason.bos:    corpsetype = 3 ;
armason.bos:    return corpsetype;
armasp.bos:Killed(severity, corpsetype)
armasp.bos:             corpsetype = 1 ;
armasp.bos:             return(corpsetype);
armasp.bos:             corpsetype = 2 ;
armasp.bos:             return(corpsetype);
armasp.bos:             corpsetype = 3 ;
armasp.bos:             return(corpsetype);
armasp.bos:     corpsetype = 3 ;
armasp.bos:     return corpsetype;
armasy.bos:     set YARD_OPEN to 1;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 1;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set YARD_OPEN to 0;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 0;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set INBUILDSTANCE to 1;
armasy.bos:     set INBUILDSTANCE to 0;
armasy.bos:     set-signal-mask SIG_ACTIVATE;
armasy.bos:     set-signal-mask 0;
armasy.bos:Killed(severity, corpsetype)
armasy.bos:             corpsetype = 1 ;
armasy.bos:             return(corpsetype);
armasy.bos:             corpsetype = 2 ;
armasy.bos:             return(corpsetype);
armasy.bos:             corpsetype = 3 ;
armasy.bos:             return(corpsetype);
armasy.bos:     corpsetype = 3 ;
armasy.bos:     return corpsetype;
armatl.bos:SetStunned(State)
armatl.bos:     set-signal-mask SIG_AIM;
armatl.bos:Killed(severity, corpsetype)
armatl.bos:             corpsetype = 1 ;
armatl.bos:             return(corpsetype);
armatl.bos:             corpsetype = 2 ;
armatl.bos:             return(corpsetype);
armatl.bos:             corpsetype = 3 ;
armatl.bos:             return(corpsetype);
armatl.bos:     corpsetype = 3 ;
armatl.bos:     return corpsetype;
Binary file armatl.cob matches
armatlas.bos:SetSFXOccupy(terraintype){
armatlas.bos:Killed(severity, corpsetype)
armatlas.bos:           corpsetype = 1;
armatlas.bos:           return (corpsetype);
armatlas.bos:           corpsetype = 2;
armatlas.bos:           return (corpsetype);
armatlas.bos:           corpsetype = 3;
armatlas.bos:           return (corpsetype);
armatlas.bos:   corpsetype = 3;
armatlas.bos:   return corpsetype;
armavp.bos:     set YARD_OPEN to 1;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 1;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set YARD_OPEN to 0;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 0;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set INBUILDSTANCE to 1;
armavp.bos:     set INBUILDSTANCE to 0;
armavp.bos:     set-signal-mask SIG_ACTIVATE;
armavp.bos:     set-signal-mask 0;
armavp.bos:Killed(severity, corpsetype)
armavp.bos:             corpsetype = 1 ;
armavp.bos:             return(corpsetype);
armavp.bos:             corpsetype = 2 ;
armavp.bos:             return(corpsetype);
armavp.bos:             corpsetype = 3 ;
armavp.bos:             return(corpsetype);
armavp.bos:     corpsetype = 3 ;
armavp.bos:     return corpsetype;
armawac.bos:Killed(severity, corpsetype)
armawac.bos:            corpsetype = 1 ;
armawac.bos:            return(corpsetype);
armawac.bos:            corpsetype = 2 ;
armawac.bos:            return(corpsetype);
armawac.bos:            corpsetype = 3 ;
armawac.bos:            return(corpsetype);
armawac.bos:    corpsetype = 3 ;
armawac.bos:    return corpsetype;
armbanth.bos:SetMaxReloadTime(Func_Var_1)
armbanth.bos:SetStunned(State)
armbanth.bos:   set-signal-mask SIG_AIM;
armbanth.bos:Killed(severity, corpsetype)
armbanth.bos:           corpsetype = 1 ;
armbanth.bos:           return(corpsetype);
armbanth.bos:           corpsetype = 2 ;
armbanth.bos:           return(corpsetype);
armbanth.bos:           corpsetype = 3 ;
armbanth.bos:           return(corpsetype);
armbanth.bos:   corpsetype = 3 ;
armbanth.bos:   return corpsetype;
Binary file armbanth.cob matches
armbats.bos:SetDirection(heading)
armbats.bos:SetMaxReloadTime(Func_Var_1)
armbats.bos:    set-signal-mask SIG_MOVE;
armbats.bos:    set-signal-mask SIG_AIM;
armbats.bos:    set-signal-mask SIG_AIM_2;
armbats.bos:Killed(severity, corpsetype)
armbats.bos:            corpsetype = 1 ;
armbats.bos:            return(corpsetype);
armbats.bos:            corpsetype = 2 ;
armbats.bos:            return(corpsetype);
armbats.bos:            corpsetype = 3 ;
armbats.bos:            return(corpsetype);
armbats.bos:    corpsetype = 3 ;
armbats.bos:    return corpsetype;
Binary file armbats.cob matches
armbeamer.bos:  set-signal-mask SIG_AIM;
armbeamer.bos:Killed(severity, corpsetype)
armbeamer.bos:          corpsetype = 1 ;
armbeamer.bos:          return(corpsetype);
armbeamer.bos:          corpsetype = 2 ;
armbeamer.bos:          return(corpsetype);
armbeamer.bos:          corpsetype = 3 ;
armbeamer.bos:          return(corpsetype);
armbeamer.bos:  corpsetype = 3 ;
armbeamer.bos:  return corpsetype;
armbeaver.bos:  set INBUILDSTANCE to 0;
armbeaver.bos:  set INBUILDSTANCE to 1;
armbeaver.bos:  set-signal-mask SIG_BUILD;
armbeaver.bos:  set-signal-mask 0;
armbeaver.bos:Killed(severity, corpsetype)
armbeaver.bos:          corpsetype = 1 ;
armbeaver.bos:          return(corpsetype);
armbeaver.bos:          corpsetype = 2 ;
armbeaver.bos:          return(corpsetype);
armbeaver.bos:          corpsetype = 3 ;
armbeaver.bos:          return(corpsetype);
armbeaver.bos:  corpsetype = 3 ;
armbeaver.bos:  return corpsetype;
armblade.bos:   set-signal-mask SIG_MOVE;
armblade.bos:   set-signal-mask SIG_MOVE;
armblade.bos:   set-signal-mask SIG_MOVE;
armblade.bos:Killed(severity, corpsetype)
armblade.bos:           corpsetype = 1 ;
armblade.bos:           return(corpsetype);
armblade.bos:           corpsetype = 2 ;
armblade.bos:           return(corpsetype);
armblade.bos:           corpsetype = 3 ;
armblade.bos:           return(corpsetype);
armblade.bos:   corpsetype = 3 ;
armblade.bos:   return corpsetype;
armbrawl.bos:SetStunned(State)
armbrawl.bos:   set-signal-mask SIG_AIM;
armbrawl.bos:Killed(severity, corpsetype)
armbrawl.bos:           corpsetype = 1 ;
armbrawl.bos:           return(corpsetype);
armbrawl.bos:           corpsetype = 2 ;
armbrawl.bos:           return(corpsetype);
armbrawl.bos:           corpsetype = 3 ;
armbrawl.bos:           return(corpsetype);
armbrawl.bos:   corpsetype = 3 ;
armbrawl.bos:   return corpsetype;
Binary file armbrawl.cob matches
armbrtha.bos:   set-signal-mask SIG_AIM;
armbrtha.bos:Killed(severity, corpsetype)
armbrtha.bos:           corpsetype = 1 ;
armbrtha.bos:           return(corpsetype);
armbrtha.bos:           corpsetype = 2 ;
armbrtha.bos:           return(corpsetype);
armbrtha.bos:           corpsetype = 3 ;
armbrtha.bos:           return(corpsetype);
armbrtha.bos:   corpsetype = 3 ;
armbrtha.bos:   return corpsetype;
armbull.bos:setSFXoccupy(state)
armbull.bos:SetMaxReloadTime(Func_Var_1)
armbull.bos:    set-signal-mask 0;
armbull.bos:SetStunned(State)
armbull.bos:    set-signal-mask SIG_AIM;
armbull.bos:Killed(severity, corpsetype)
armbull.bos:            corpsetype = 1 ;
armbull.bos:            return(corpsetype);
armbull.bos:            corpsetype = 2 ;
armbull.bos:            return(corpsetype);
armbull.bos:            corpsetype = 3 ;
armbull.bos:            return(corpsetype);
armbull.bos:    corpsetype = 3 ;
armbull.bos:    return corpsetype;
Binary file armbull.cob matches
armca.bos:      set INBUILDSTANCE to 1;
armca.bos:      set-signal-mask SIG_BUILD;
armca.bos:      set-signal-mask 0;
armca.bos:      set INBUILDSTANCE to 0;
armca.bos:Killed(severity, corpsetype)
armca.bos:              corpsetype = 1 ;
armca.bos:              return(corpsetype);
armca.bos:              corpsetype = 2 ;
armca.bos:              return(corpsetype);
armca.bos:              corpsetype = 3 ;
armca.bos:              return(corpsetype);
armca.bos:      corpsetype = 3 ;
armca.bos:      return corpsetype;
armcarry.bos:SetDirection(heading)
armcarry.bos:   set-signal-mask 0;
armcarry.bos:SetStunned(State)
armcarry.bos:   set-signal-mask SIG_MOVE;
armcarry.bos:   set-signal-mask SIG_AIM_2;
armcarry.bos:Killed(severity, corpsetype)
armcarry.bos:           corpsetype = 1 ;
armcarry.bos:           return(corpsetype);
armcarry.bos:           corpsetype = 2 ;
armcarry.bos:           return(corpsetype);
armcarry.bos:           corpsetype = 3 ;
armcarry.bos:           return(corpsetype);
armcarry.bos:   corpsetype = 3 ;
armcarry.bos:   return corpsetype;
Binary file armcarry.cob matches
armch.bos:              // Set values for tilt
armch.bos:      set INBUILDSTANCE to 0;
armch.bos:      set-signal-mask SIG_MOVE;
armch.bos:setSFXoccupy(state)
armch.bos:      set INBUILDSTANCE to 1;
armch.bos:      set-signal-mask SIG_BUILD;
armch.bos:      set-signal-mask 0;
armch.bos:Killed(severity, corpsetype)
armch.bos:              corpsetype = 1 ;
armch.bos:              return(corpsetype);
armch.bos:              corpsetype = 2 ;
armch.bos:              return(corpsetype);
armch.bos:              corpsetype = 3 ;
armch.bos:              return(corpsetype);
armch.bos:      corpsetype = 3 ;
armch.bos:      return corpsetype;
Binary file armch.cob matches
armcir.bos:SetStunned(State)
armcir.bos:     set-signal-mask SIG_AIM;
armcir.bos:Killed(severity, corpsetype)
armcir.bos:             corpsetype = 1 ;
armcir.bos:             return(corpsetype);
armcir.bos:             corpsetype = 2 ;
armcir.bos:             return(corpsetype);
armcir.bos:             corpsetype = 3 ;
armcir.bos:             return(corpsetype);
armcir.bos:     corpsetype = 3 ;
armcir.bos:     return corpsetype;
Binary file armcir.cob matches
armck.bos:      set-signal-mask SIG_WALK;
armck.bos:      set INBUILDSTANCE to 0;
armck.bos:      set INBUILDSTANCE to 1;
armck.bos:      set-signal-mask SIG_BUILD;
armck.bos:      set-signal-mask 0;
armck.bos:Killed(severity, corpsetype)
armck.bos:              corpsetype = 1 ;
armck.bos:              return(corpsetype);
armck.bos:              corpsetype = 2 ;
armck.bos:              return(corpsetype);
armck.bos:              corpsetype = 3 ;
armck.bos:              return(corpsetype);
armck.bos:      corpsetype = 3 ;
armck.bos:      return corpsetype;
armckfus.bos:   set ARMORED to 1;
armckfus.bos:   set ARMORED to 0;
armckfus.bos:Killed(severity, corpsetype)
armckfus.bos:           corpsetype = 1 ;
armckfus.bos:           return(corpsetype);
armckfus.bos:           corpsetype = 2 ;
armckfus.bos:           return(corpsetype);
armckfus.bos:           corpsetype = 3 ;
armckfus.bos:           return(corpsetype);
armckfus.bos:   corpsetype = 3 ;
armckfus.bos:   return corpsetype;
armclaw.bos:    set ARMORED to 0;
armclaw.bos:    set ARMORED to 1;
armclaw.bos:    set-signal-mask 0;
armclaw.bos:SetStunned(State)
armclaw.bos:SetMaxReloadTime(Func_Var_1)
armclaw.bos:    set-signal-mask SIG_AIM;
armclaw.bos:Killed(severity, corpsetype)
armclaw.bos:            corpsetype = 1 ;
armclaw.bos:            return(corpsetype);
armclaw.bos:            corpsetype = 2 ;
armclaw.bos:            return(corpsetype);
armclaw.bos:            corpsetype = 3 ;
armclaw.bos:            return(corpsetype);
armclaw.bos:    corpsetype = 3 ;
armclaw.bos:    return corpsetype;
Binary file armclaw.cob matches
armcom.bos:     set-signal-mask SIG_WALK;
armcom.bos:     set-signal-mask SIG_AIM;
armcom.bos:     set-signal-mask SIG_AIM;
armcom.bos:     set-signal-mask SIG_AIM;
armcom.bos:     set-signal-mask SIG_AIM;
armcom.bos:     set-signal-mask SIG_AIM;
armcom.bos:     //set-signal-mask SIG_AIM;
armcom.bos:     set INBUILDSTANCE to 1;
armcom.bos:     set-signal-mask SIG_AIM;
armcom.bos:     set INBUILDSTANCE to 0;
armcom.bos:     set-signal-mask SIG_AIM;
armcom.bos:Killed( severity, corpsetype )
armcom.bos:     corpsetype = 1;
armcom.bos:     return(corpsetype);
armcom_lus.lua: SetSignalMask(SIG_AIM)
armcom_lus.lua:                 SetSignalMask(SIG_AIM)
armcom_lus.lua:                 SetSignalMask(SIG_AIM)
armcom_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, true)
armcom_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, false)
armcom_lus.lua: SetSignalMask(SIG_AIM)
armcom_lus.lua: SetSignalMask(SIG_AIM)
armcomboss.bos: set-signal-mask SIG_WALK;
armcomboss.bos: set-signal-mask SIG_AIM;
armcomboss.bos: set-signal-mask SIG_AIM;
armcomboss.bos: set-signal-mask SIG_AIM;
armcomboss.bos: set-signal-mask SIG_AIM;
armcomboss.bos: set-signal-mask SIG_AIM;
armcomboss.bos: //set-signal-mask SIG_AIM;
armcomboss.bos: set INBUILDSTANCE to 1;
armcomboss.bos: set-signal-mask SIG_AIM;
armcomboss.bos: set INBUILDSTANCE to 0;
armcomboss.bos: set-signal-mask SIG_AIM;
armcomboss.bos:Killed( severity, corpsetype )
armcomboss.bos: corpsetype = 1;
armcomboss.bos: return(corpsetype);
armconsul.bos:  set INBUILDSTANCE to 1;
armconsul.bos:  set INBUILDSTANCE to 0;
armconsul.bos:Killed(severity, corpsetype)
armconsul.bos:          corpsetype = 1 ;
armconsul.bos:          return(corpsetype);
armconsul.bos:          corpsetype = 2 ;
armconsul.bos:          return(corpsetype);
armconsul.bos:          corpsetype = 3 ;
armconsul.bos:          return(corpsetype);
armconsul.bos:  corpsetype = 3 ;
armconsul.bos:  return corpsetype;
armcroc.bos:SetMaxReloadTime(Func_Var_1)
armcroc.bos:SetStunned(State)
armcroc.bos:    set-signal-mask SIG_AIM;
armcroc.bos:Killed(severity, corpsetype)
armcroc.bos:            corpsetype = 1 ;
armcroc.bos:            return(corpsetype);
armcroc.bos:            corpsetype = 2 ;
armcroc.bos:            return(corpsetype);
armcroc.bos:            corpsetype = 3 ;
armcroc.bos:            return(corpsetype);
armcroc.bos:    corpsetype = 3 ;
armcroc.bos:    return corpsetype;
Binary file armcroc.cob matches
armcrus.bos:SetDirection(heading)
armcrus.bos:    set-signal-mask 16;
armcrus.bos:SetMaxReloadTime(Func_Var_1)
armcrus.bos:    set-signal-mask 0;
armcrus.bos:SetStunned(State)
armcrus.bos:    set-signal-mask 0;
armcrus.bos:    set-signal-mask SIG_MOVE;
armcrus.bos:    set-signal-mask SIG_AIM_2;
armcrus.bos:    set-signal-mask SIG_AIM;
armcrus.bos:Killed(severity, corpsetype)
armcrus.bos:            corpsetype = 1 ;
armcrus.bos:            return(corpsetype);
armcrus.bos:            corpsetype = 2 ;
armcrus.bos:            return(corpsetype);
armcrus.bos:            corpsetype = 3 ;
armcrus.bos:            return(corpsetype);
armcrus.bos:    corpsetype = 3 ;
armcrus.bos:    return corpsetype;
Binary file armcrus.cob matches
armcs.bos:      set INBUILDSTANCE to 0;
armcs.bos:SetDirection(heading)
armcs.bos:      set-signal-mask SIG_MOVE;
armcs.bos:      set INBUILDSTANCE to 1;
armcs.bos:      set-signal-mask SIG_BUILD;
armcs.bos:      set-signal-mask 0;
armcs.bos:Killed(severity, corpsetype)
armcs.bos:              corpsetype = 1 ;
armcs.bos:              return(corpsetype);
armcs.bos:              corpsetype = 2 ;
armcs.bos:              return(corpsetype);
armcs.bos:              corpsetype = 3 ;
armcs.bos:              return(corpsetype);
armcs.bos:      corpsetype = 3 ;
armcs.bos:      return corpsetype;
Binary file armcs.cob matches
armcsa.bos:     set-signal-mask SIG_MOVE;
armcsa.bos:     set INBUILDSTANCE to 1;
armcsa.bos:     set INBUILDSTANCE to 0;
armcsa.bos:Killed(severity, corpsetype)
armcsa.bos:     corpsetype = 1 ;
armcsa.bos:     return(corpsetype);
armcsa.bos:     corpsetype = 2 ;
armcsa.bos:     return(corpsetype);
armcsa.bos:     corpsetype = 3 ;
armcsa.bos:     return(corpsetype);
armcsa.bos:     corpsetype = 3 ;
armcsa.bos:     return corpsetype;
armcv.bos:      set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 1;
armcv.bos:      set-signal-mask SIG_BUILD;
armcv.bos:      set-signal-mask 0;
armcv.bos:Killed(severity, corpsetype)
armcv.bos:              corpsetype = 1 ;
armcv.bos:              return(corpsetype);
armcv.bos:              corpsetype = 2 ;
armcv.bos:              return(corpsetype);
armcv.bos:              corpsetype = 3 ;
armcv.bos:              return(corpsetype);
armcv.bos:      corpsetype = 3 ;
armcv.bos:      return corpsetype;
armdecade.bos:SetDirection(heading)
armdecade.bos:SetMaxReloadTime(Func_Var_1)
armdecade.bos:SetStunned(State)
armdecade.bos:  set-signal-mask SIG_MOVE;
armdecade.bos:  set-signal-mask SIG_AIM;
armdecade.bos:  set-signal-mask SIG_AIM_2;
armdecade.bos:Killed(severity, corpsetype)
armdecade.bos:          corpsetype = 1 ;
armdecade.bos:          return(corpsetype);
armdecade.bos:          corpsetype = 2 ;
armdecade.bos:          return(corpsetype);
armdecade.bos:          corpsetype = 3 ;
armdecade.bos:          return(corpsetype);
armdecade.bos:  corpsetype = 3 ;
armdecade.bos:  return corpsetype;
Binary file armdecade.cob matches
armdecom.lua:   Spring.SetUnitNanoPieces( unitID, {nano} )
armdecom.lua:   SetSignalMask(SIG_AIM)
armdecom.lua:Spring.SetUnitNanoPieces( unitID, {nano} )
armdecom.lua:   SetUnitValue(COB.INBUILDSTANCE, 1)
armdecom.lua:   SetUnitValue(COB.INBUILDSTANCE, 0)
armdecom.lua:   -- reset parts
armdf.bos:      set ARMORED to 1;
armdf.bos:      set ARMORED to 0;
armdf.bos:Killed(severity, corpsetype)
armdf.bos:              corpsetype = 1;
armdf.bos:              return (corpsetype);
armdf.bos:              corpsetype = 2;
armdf.bos:              return (corpsetype);
armdf.bos:              corpsetype = 3;
armdf.bos:              return (corpsetype);
armdf.bos:      corpsetype = 3;
armdf.bos:      return (corpsetype);
armdfly.bos:Killed(severity, corpsetype)
armdfly.bos:            corpsetype = 1;
armdfly.bos:            return (corpsetype);
armdfly.bos:            corpsetype = 2;
armdfly.bos:            return (corpsetype);
armdfly.bos:            corpsetype = 3;
armdfly.bos:            return (corpsetype);
armdfly.bos:    corpsetype = 3;
armdfly.bos:    return corpsetype;
armdl.bos:      set-signal-mask SIG_AIM;
armdl.bos:Killed(severity, corpsetype)
armdl.bos:              corpsetype = 1 ;
armdl.bos:              return(corpsetype);
armdl.bos:              corpsetype = 2 ;
armdl.bos:              return(corpsetype);
armdl.bos:              corpsetype = 3 ;
armdl.bos:              return(corpsetype);
armdl.bos:      corpsetype = 3 ;
armdl.bos:      return corpsetype;
armemp.bos:SetMaxReloadTime(Func_Var_1)
armemp.bos:     set-signal-mask 0;
armemp.bos:SetStunned(State)
armemp.bos:     set-signal-mask SIG_AIM;
armemp.bos:Killed(severity, corpsetype)
armemp.bos:             corpsetype = 1 ;
armemp.bos:             return(corpsetype);
armemp.bos:             corpsetype = 2 ;
armemp.bos:             return(corpsetype);
armemp.bos:             corpsetype = 3 ;
armemp.bos:             return(corpsetype);
armemp.bos:     corpsetype = 3 ;
armemp.bos:     return corpsetype;
Binary file armemp.cob matches
armepoch.bos:SetDirection(heading)
armepoch.bos:   set ARMORED to 1;
armepoch.bos:SetMaxReloadTime(Func_Var_1)
armepoch.bos:SetStunned(State)
armepoch.bos:   set-signal-mask SIG_MOVE;
armepoch.bos:   set-signal-mask 2;
armepoch.bos:   set-signal-mask 4;
armepoch.bos:   set-signal-mask 8;
armepoch.bos:   set-signal-mask 16;
armepoch.bos:   set-signal-mask 32;
armepoch.bos:   set-signal-mask 64;
armepoch.bos:   set-signal-mask 128;
armepoch.bos:Killed(severity, corpsetype)
armepoch.bos:           corpsetype = 1 ;
armepoch.bos:           return(corpsetype);
armepoch.bos:           corpsetype = 2 ;
armepoch.bos:           return(corpsetype);
armepoch.bos:           corpsetype = 3 ;
armepoch.bos:           return(corpsetype);
armepoch.bos:   corpsetype = 3 ;
armepoch.bos:   return corpsetype;
Binary file armepoch.cob matches
armestor.bos:Killed(severity, corpsetype)
armestor.bos:           corpsetype = 1 ;
armestor.bos:           return(corpsetype);
armestor.bos:           corpsetype = 2 ;
armestor.bos:           return(corpsetype);
armestor.bos:           corpsetype = 3 ;
armestor.bos:           return(corpsetype);
armestor.bos:   corpsetype = 3 ;
armestor.bos:   return corpsetype;
armeyes.bos:Killed(severity, corpsetype)
armeyes.bos:            corpsetype = 1 ;
armeyes.bos:            return(corpsetype);
armeyes.bos:            corpsetype = 2 ;
armeyes.bos:            return(corpsetype);
armeyes.bos:            corpsetype = 3 ;
armeyes.bos:            return(corpsetype);
armeyes.bos:    corpsetype = 3 ;
armeyes.bos:    return corpsetype;
armfark.bos:    set INBUILDSTANCE to 0;
armfark.bos:    set-signal-mask SIG_BUILD;
armfark.bos:    set INBUILDSTANCE to 1;
armfark.bos:    set-signal-mask SIG_BUILD;
armfark.bos:Killed(severity, corpsetype)
armfark.bos:            corpsetype = 1 ;
armfark.bos:            return(corpsetype);
armfark.bos:            corpsetype = 2 ;
armfark.bos:            return(corpsetype);
armfark.bos:            corpsetype = 3 ;
armfark.bos:            return(corpsetype);
armfark.bos:    corpsetype = 3 ;
armfark.bos:    return corpsetype;
armfast.bos:SetMaxReloadTime(Func_Var_1)
armfast.bos:SetStunned(State)
armfast.bos:    set-signal-mask SIG_AIM;
armfast.bos:Killed(severity, corpsetype)
armfast.bos:            corpsetype = 1 ;
armfast.bos:            return(corpsetype);
armfast.bos:            corpsetype = 2 ;
armfast.bos:            return(corpsetype);
armfast.bos:            corpsetype = 3 ;
armfast.bos:            return(corpsetype);
armfast.bos:    corpsetype = 3 ;
armfast.bos:    return corpsetype;
Binary file armfast.cob matches
armfatf.bos:Killed(severity, corpsetype)
armfatf.bos:            corpsetype = 1 ;
armfatf.bos:            return(corpsetype);
armfatf.bos:            corpsetype = 2 ;
armfatf.bos:            return(corpsetype);
armfatf.bos:            corpsetype = 3 ;
armfatf.bos:            return(corpsetype);
armfatf.bos:    corpsetype = 3 ;
armfatf.bos:    return corpsetype;
armfav.bos:     set-signal-mask SIG_MOVE;
armfav.bos:SetMaxReloadTime(Func_Var_1)
armfav.bos:SetStunned(State)
armfav.bos:     set-signal-mask SIG_AIM;
armfav.bos:Killed(severity, corpsetype)
armfav.bos:             corpsetype = 1 ;
armfav.bos:             return(corpsetype);
armfav.bos:             corpsetype = 2 ;
armfav.bos:             return(corpsetype);
armfav.bos:             corpsetype = 3 ;
armfav.bos:             return(corpsetype);
armfav.bos:     corpsetype = 3 ;
armfav.bos:     return corpsetype;
Binary file armfav.cob matches
armfboy.bos:    //set-signal-mask SIG_WALK;
armfboy.bos:SetMaxReloadTime(Func_Var_1)
armfboy.bos:SetStunned(State)
armfboy.bos:    set-signal-mask SIG_AIM;
armfboy.bos:Killed(severity, corpsetype)
armfboy.bos:            corpsetype = 1 ;
armfboy.bos:            return(corpsetype);
armfboy.bos:            corpsetype = 2 ;
armfboy.bos:            return(corpsetype);
armfboy.bos:            corpsetype = 3 ;
armfboy.bos:            return(corpsetype);
armfboy.bos:    corpsetype = 3 ;
armfboy.bos:    return corpsetype;
Binary file armfboy.cob matches
armferret.bos:  set ARMORED to 0;
armferret.bos:  set ARMORED to 1;
armferret.bos:  set-signal-mask 0;
armferret.bos:SetStunned(State)
armferret.bos:  set-signal-mask SIG_AIM;
armferret.bos:SetMaxReloadTime(Func_Var_1)
armferret.bos:  set-signal-mask SIG_AIM;
armferret.bos:Killed(severity, corpsetype)
armferret.bos:          corpsetype = 1 ;
armferret.bos:          return(corpsetype);
armferret.bos:          corpsetype = 2 ;
armferret.bos:          return(corpsetype);
armferret.bos:          corpsetype = 3 ;
armferret.bos:          return(corpsetype);
armferret.bos:  corpsetype = 3 ;
armferret.bos:  return corpsetype;
Binary file armferret.cob matches
armfflak.bos:SetStunned(State)
armfflak.bos:   set-signal-mask SIG_AIM;
armfflak.bos:Killed(severity, corpsetype)
armfflak.bos:           corpsetype = 1 ;
armfflak.bos:           return(corpsetype);
armfflak.bos:           corpsetype = 2 ;
armfflak.bos:           return(corpsetype);
armfflak.bos:           corpsetype = 3 ;
armfflak.bos:           return(corpsetype);
armfflak.bos:   corpsetype = 3 ;
armfflak.bos:   return corpsetype;
Binary file armfflak.cob matches
armfgate.bos:Killed(severity, corpsetype)
armfgate.bos:           corpsetype = 1 ;
armfgate.bos:           return(corpsetype);
armfgate.bos:           corpsetype = 2 ;
armfgate.bos:           return(corpsetype);
armfgate.bos:           corpsetype = 3 ;
armfgate.bos:           return(corpsetype);
armfgate.bos:   corpsetype = 3 ;
armfgate.bos:   return corpsetype;
armfhlt.bos:    set-signal-mask SIG_AIM;
armfhlt.bos:Killed(severity, corpsetype)
armfhlt.bos:            corpsetype = 1 ;
armfhlt.bos:            return(corpsetype);
armfhlt.bos:            corpsetype = 2 ;
armfhlt.bos:            return(corpsetype);
armfhlt.bos:            corpsetype = 3 ;
armfhlt.bos:            return(corpsetype);
armfhlt.bos:    corpsetype = 3 ;
armfhlt.bos:    return corpsetype;
armfhp.bos:     set YARD_OPEN to 1;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 1;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set YARD_OPEN to 0;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 0;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set INBUILDSTANCE to 1;
armfhp.bos:     set INBUILDSTANCE to 0;
armfhp.bos:     set-signal-mask SIG_ACTIVATE;
armfhp.bos:     set-signal-mask 0;
armfhp.bos:Killed(severity, corpsetype)
armfhp.bos:             corpsetype = 1 ;
armfhp.bos:             return(corpsetype);
armfhp.bos:             corpsetype = 2 ;
armfhp.bos:             return(corpsetype);
armfhp.bos:             corpsetype = 3 ;
armfhp.bos:             return(corpsetype);
armfhp.bos:     corpsetype = 3 ;
armfhp.bos:     return corpsetype;
armfido.bos:    //set-signal-mask SIG_WALK;
armfido.bos:    set-signal-mask 0;
armfido.bos:SetStunned(State)
armfido.bos:    set-signal-mask SIG_AIM;
armfido.bos:SetMaxReloadTime(Func_Var_1)
armfido.bos:Killed(severity, corpsetype)
armfido.bos:            corpsetype = 1;
armfido.bos:            return (corpsetype);
armfido.bos:            corpsetype = 2;
armfido.bos:            return (corpsetype);
armfido.bos:            corpsetype = 3;
armfido.bos:            return (corpsetype);
armfido.bos:    corpsetype = 3;
armfido.bos:    return corpsetype;
Binary file armfido.cob matches
armfig.bos:Killed(severity, corpsetype)
armfig.bos:             corpsetype = 1 ;
armfig.bos:             return(corpsetype);
armfig.bos:             corpsetype = 2 ;
armfig.bos:             return(corpsetype);
armfig.bos:             corpsetype = 3 ;
armfig.bos:             return(corpsetype);
armfig.bos:     corpsetype = 3 ;
armfig.bos:     return corpsetype;
armflak.bos:SetStunned(State)
armflak.bos:    set-signal-mask SIG_AIM;
armflak.bos:Killed(severity, corpsetype)
armflak.bos:            corpsetype = 1 ;
armflak.bos:            return(corpsetype);
armflak.bos:            corpsetype = 2 ;
armflak.bos:            return(corpsetype);
armflak.bos:            corpsetype = 3 ;
armflak.bos:            return(corpsetype);
armflak.bos:    corpsetype = 3 ;
armflak.bos:    return corpsetype;
Binary file armflak.cob matches
armflash.bos:SetMaxReloadTime(Func_Var_1)
armflash.bos:SetStunned(State)
armflash.bos:   set-signal-mask SIG_AIM;
armflash.bos:Killed(severity, corpsetype)
armflash.bos:           corpsetype = 1 ;
armflash.bos:           return(corpsetype);
armflash.bos:           corpsetype = 2 ;
armflash.bos:           return(corpsetype);
armflash.bos:           corpsetype = 3 ;
armflash.bos:           return(corpsetype);
armflash.bos:   corpsetype = 3 ;
armflash.bos:   return corpsetype;
Binary file armflash.cob matches
armflea.bos:    set-signal-mask SIG_WALK;
armflea.bos:SetMaxReloadTime(Func_Var_1)
armflea.bos:SetStunned(State)
armflea.bos:    set-signal-mask SIG_AIM;
armflea.bos:Killed(severity, corpsetype)
armflea.bos:            corpsetype = 1 ;
armflea.bos:            return(corpsetype);
armflea.bos:            corpsetype = 2 ;
armflea.bos:            return(corpsetype);
armflea.bos:            corpsetype = 3 ;
armflea.bos:            return(corpsetype);
armflea.bos:    corpsetype = 3 ;
armflea.bos:    return corpsetype;
Binary file armflea.cob matches
armfmkr.bos:Killed(severity, corpsetype)
armfmkr.bos:            corpsetype = 1 ;
armfmkr.bos:            return(corpsetype);
armfmkr.bos:            corpsetype = 2 ;
armfmkr.bos:            return(corpsetype);
armfmkr.bos:            corpsetype = 3 ;
armfmkr.bos:            return(corpsetype);
armfmkr.bos:    corpsetype = 3 ;
armfmkr.bos:    return corpsetype;
armfrad.bos:Killed(severity, corpsetype)
armfrad.bos:            corpsetype = 1 ;
armfrad.bos:            return(corpsetype);
armfrad.bos:            corpsetype = 2 ;
armfrad.bos:            return(corpsetype);
armfrad.bos:            corpsetype = 3 ;
armfrad.bos:            return(corpsetype);
armfrad.bos:    corpsetype = 3 ;
armfrad.bos:    return corpsetype;
armfrock.bos:   set-signal-mask SIG_AIM;
armfrock.bos:Killed(severity, corpsetype)
armfrock.bos:           corpsetype = 1;
armfrock.bos:           return (corpsetype);
armfrock.bos:           corpsetype = 2;
armfrock.bos:           return (corpsetype);
armfrock.bos:           corpsetype = 3;
armfrock.bos:           return (corpsetype);
armfrock.bos:   corpsetype = 3;
armfrock.bos:   return (corpsetype);
armfrt.bos:SetStunned(State)
armfrt.bos:     set-signal-mask SIG_AIM;
armfrt.bos:Killed(severity, corpsetype)
armfrt.bos:             corpsetype = 1 ;
armfrt.bos:             return(corpsetype);
armfrt.bos:             corpsetype = 2 ;
armfrt.bos:             return(corpsetype);
armfrt.bos:             corpsetype = 3 ;
armfrt.bos:             return(corpsetype);
armfrt.bos:     corpsetype = 3 ;
armfrt.bos:     return corpsetype;
Binary file armfrt.cob matches
armfus.bos:     set ARMORED to 1;
armfus.bos:     set ARMORED to 0;
armfus.bos:Killed(severity, corpsetype)
armfus.bos:             corpsetype = 1 ;
armfus.bos:             return(corpsetype);
armfus.bos:             corpsetype = 2 ;
armfus.bos:             return(corpsetype);
armfus.bos:             corpsetype = 3 ;
armfus.bos:             return(corpsetype);
armfus.bos:     corpsetype = 3 ;
armfus.bos:     return corpsetype;
armgate.bos:Killed(severity, corpsetype)
armgate.bos:            corpsetype = 1 ;
armgate.bos:            return(corpsetype);
armgate.bos:            corpsetype = 2 ;
armgate.bos:            return(corpsetype);
armgate.bos:            corpsetype = 3 ;
armgate.bos:            return(corpsetype);
armgate.bos:    corpsetype = 3 ;
armgate.bos:    return corpsetype;
armgeo.bos:Killed(severity, corpsetype)
armgeo.bos:             corpsetype = 1 ;
armgeo.bos:             return(corpsetype);
armgeo.bos:             corpsetype = 2 ;
armgeo.bos:             return(corpsetype);
armgeo.bos:             corpsetype = 3 ;
armgeo.bos:             return(corpsetype);
armgeo.bos:     corpsetype = 3 ;
armgeo.bos:     return corpsetype;
armgmm.bos:     set-signal-mask 2;
armgmm.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 1;
armgmm.bos:Killed(severity, corpsetype)
armgmm.bos:             corpsetype = 1 ;
armgmm.bos:             return(corpsetype);
armgmm.bos:             corpsetype = 2 ;
armgmm.bos:             return(corpsetype);
armgmm.bos:             corpsetype = 3 ;
armgmm.bos:             return(corpsetype);
armgmm.bos:     corpsetype = 3 ;
armgmm.bos:     return corpsetype;
armgplat.bos:SetMaxReloadTime(Func_Var_1)
armgplat.bos:SetStunned(State)
armgplat.bos:   set-signal-mask SIG_AIM;
armgplat.bos:Killed(severity, corpsetype)
armgplat.bos:           corpsetype = 1 ;
armgplat.bos:           return(corpsetype);
armgplat.bos:           corpsetype = 2 ;
armgplat.bos:           return(corpsetype);
armgplat.bos:           corpsetype = 3 ;
armgplat.bos:           return(corpsetype);
armgplat.bos:   corpsetype = 3 ;
armgplat.bos:   return corpsetype;
Binary file armgplat.cob matches
armgremlin.bos:SetMaxReloadTime(Func_Var_1)
armgremlin.bos: set-signal-mask 0;
armgremlin.bos:SetStunned(State)
armgremlin.bos: set-signal-mask SIG_AIM;
armgremlin.bos:Killed(severity, corpsetype)
armgremlin.bos:         corpsetype = 1 ;
armgremlin.bos:         return(corpsetype);
armgremlin.bos:         corpsetype = 2 ;
armgremlin.bos:         return(corpsetype);
armgremlin.bos:         corpsetype = 3 ;
armgremlin.bos:         return(corpsetype);
armgremlin.bos: corpsetype = 3 ;
armgremlin.bos: return corpsetype;
Binary file armgremlin.cob matches
armguard.bos:Killed(severity, corpsetype)
armguard.bos:           corpsetype = 1 ;
armguard.bos:           return(corpsetype);
armguard.bos:           corpsetype = 2 ;
armguard.bos:           return(corpsetype);
armguard.bos:           corpsetype = 3 ;
armguard.bos:           return(corpsetype);
armguard.bos:   corpsetype = 3 ;
armguard.bos:   return corpsetype;
armham.bos:     set-signal-mask SIG_WALK;
armham.bos:SetMaxReloadTime(Func_Var_1)
armham.bos:    set-signal-mask 0;
armham.bos:SetStunned(State)
armham.bos:     set-signal-mask SIG_AIM;
armham.bos:Killed(severity, corpsetype)
armham.bos:             corpsetype = 1 ;
armham.bos:             return(corpsetype);
armham.bos:             corpsetype = 2 ;
armham.bos:             return(corpsetype);
armham.bos:             corpsetype = 3 ;
armham.bos:             return(corpsetype);
armham.bos:     corpsetype = 3 ;
armham.bos:     return corpsetype;
Binary file armham.cob matches
armhawk.bos:Killed(severity, corpsetype)
armhawk.bos:            corpsetype = 1 ;
armhawk.bos:            return(corpsetype);
armhawk.bos:            corpsetype = 2 ;
armhawk.bos:            return(corpsetype);
armhawk.bos:            corpsetype = 3 ;
armhawk.bos:            return(corpsetype);
armhawk.bos:    corpsetype = 3 ;
armhawk.bos:    return corpsetype;
armhlt.bos:     set-signal-mask SIG_AIM;
armhlt.bos:Killed(severity, corpsetype)
armhlt.bos:             corpsetype = 1 ;
armhlt.bos:             return(corpsetype);
armhlt.bos:             corpsetype = 2 ;
armhlt.bos:             return(corpsetype);
armhlt.bos:             corpsetype = 3 ;
armhlt.bos:             return(corpsetype);
armhlt.bos:     corpsetype = 3 ;
armhlt.bos:     return corpsetype;
armhp.bos:      set YARD_OPEN to 1;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 1;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set YARD_OPEN to 0;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 0;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set INBUILDSTANCE to 1;
armhp.bos:      set INBUILDSTANCE to 0;
armhp.bos:      set-signal-mask SIG_ACTIVATE;
armhp.bos:      set-signal-mask 0;
armhp.bos:Killed(severity, corpsetype)
armhp.bos:              corpsetype = 1 ;
armhp.bos:              return(corpsetype);
armhp.bos:              corpsetype = 2 ;
armhp.bos:              return(corpsetype);
armhp.bos:              corpsetype = 3 ;
armhp.bos:              return(corpsetype);
armhp.bos:      corpsetype = 3 ;
armhp.bos:      return corpsetype;
armjam.bos:             // Set values for tilt
armjam.bos:             // Set Values for differential system
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set-signal-mask 2;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 100;
armjam.bos:Killed(severity, corpsetype)
armjam.bos:             corpsetype = 1 ;
armjam.bos:             return(corpsetype);
armjam.bos:             corpsetype = 2 ;
armjam.bos:             return(corpsetype);
armjam.bos:             corpsetype = 3 ;
armjam.bos:             return(corpsetype);
armjam.bos:     corpsetype = 3 ;
armjam.bos:     return corpsetype;
armjamt.bos:Killed(severity, corpsetype)
armjamt.bos:            corpsetype = 1 ;
armjamt.bos:            return(corpsetype);
armjamt.bos:            corpsetype = 2 ;
armjamt.bos:            return(corpsetype);
armjamt.bos:            corpsetype = 3 ;
armjamt.bos:            return(corpsetype);
armjamt.bos:    corpsetype = 3 ;
armjamt.bos:    return corpsetype;
armjanus.bos:SetMaxReloadTime(Func_Var_1)
armjanus.bos:SetStunned(State)
armjanus.bos:   set-signal-mask SIG_AIM;
armjanus.bos:   set-signal-mask SIG_AIM_2;
armjanus.bos:Killed(severity, corpsetype)
armjanus.bos:           corpsetype = 1 ;
armjanus.bos:           return(corpsetype);
armjanus.bos:           corpsetype = 2 ;
armjanus.bos:           return(corpsetype);
armjanus.bos:           corpsetype = 3 ;
armjanus.bos:           return(corpsetype);
armjanus.bos:   corpsetype = 3 ;
armjanus.bos:   return corpsetype;
Binary file armjanus.cob matches
armjeth.bos:    set-signal-mask SIG_WALK;
armjeth.bos:SetMaxReloadTime(Func_Var_1)
armjeth.bos:    set-signal-mask 0;
armjeth.bos:SetStunned(State)
armjeth.bos:    set-signal-mask SIG_AIM_3;
armjeth.bos:Killed(severity, corpsetype)
armjeth.bos:            corpsetype = 1 ;
armjeth.bos:            return(corpsetype);
armjeth.bos:            corpsetype = 2 ;
armjeth.bos:            return(corpsetype);
armjeth.bos:            corpsetype = 3 ;
armjeth.bos:            return(corpsetype);
armjeth.bos:    corpsetype = 3 ;
armjeth.bos:    return corpsetype;
Binary file armjeth.cob matches
armjuno.bos:SetMaxReloadTime(Func_Var_1)
armjuno.bos:    set-signal-mask 0;
armjuno.bos:SetStunned(State)
armjuno.bos:    set-signal-mask SIG_AIM;
armjuno.bos:Killed(severity, corpsetype)
armjuno.bos:            corpsetype = 1 ;
armjuno.bos:            return(corpsetype);
armjuno.bos:            corpsetype = 2 ;
armjuno.bos:            return(corpsetype);
armjuno.bos:            corpsetype = 3 ;
armjuno.bos:            return(corpsetype);
armjuno.bos:    corpsetype = 3 ;
armjuno.bos:    return corpsetype;
Binary file armjuno.cob matches
armkam.bos:SetStunned(State)
armkam.bos:     set-signal-mask SIG_MOVE;
armkam.bos:     set-signal-mask SIG_MOVE;
armkam.bos:     set-signal-mask SIG_MOVE;
armkam.bos:     set-signal-mask SIG_MOVE;
armkam.bos:     set-signal-mask SIG_MOVE;
armkam.bos:     set-signal-mask SIG_MOVE;
armkam.bos:Killed(severity, corpsetype)
armkam.bos:             corpsetype = 1 ;
armkam.bos:             return(corpsetype);
armkam.bos:             corpsetype = 2 ;
armkam.bos:             return(corpsetype);
armkam.bos:             corpsetype = 3 ;
armkam.bos:             return(corpsetype);
armkam.bos:     corpsetype = 3 ;
armkam.bos:    return(corpsetype);
armkam.bos:     return corpsetype;
Binary file armkam.cob matches
armlab.bos:     set YARD_OPEN to 1;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 1;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set YARD_OPEN to 0;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 0;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set INBUILDSTANCE to 1;
armlab.bos:     set INBUILDSTANCE to 0;
armlab.bos:     set-signal-mask SIG_ACTIVATE;
armlab.bos:     set-signal-mask 0;
armlab.bos:Killed(severity, corpsetype)
armlab.bos:             corpsetype = 1 ;
armlab.bos:             return(corpsetype);
armlab.bos:             corpsetype = 2 ;
armlab.bos:             return(corpsetype);
armlab.bos:             corpsetype = 3 ;
armlab.bos:             return(corpsetype);
armlab.bos:     corpsetype = 3 ;
armlab.bos:     return corpsetype;
armlance.bos:Killed(severity, corpsetype)
armlance.bos:           corpsetype = 1 ;
armlance.bos:           return(corpsetype);
armlance.bos:           corpsetype = 2 ;
armlance.bos:           return(corpsetype);
armlance.bos:           corpsetype = 3 ;
armlance.bos:           return(corpsetype);
armlance.bos:   corpsetype = 3 ;
armlance.bos:   return corpsetype;
armlatnk.bos:SetMaxReloadTime(Func_Var_1)
armlatnk.bos:   set-signal-mask 0;
armlatnk.bos:SetStunned(State)
armlatnk.bos:   set-signal-mask SIG_AIM;
armlatnk.bos:   set-signal-mask SIG_AIM_3;
armlatnk.bos:Killed(severity, corpsetype)
armlatnk.bos:           corpsetype = 1 ;
armlatnk.bos:           return(corpsetype);
armlatnk.bos:           corpsetype = 2 ;
armlatnk.bos:           return(corpsetype);
armlatnk.bos:           corpsetype = 3 ;
armlatnk.bos:           return(corpsetype);
armlatnk.bos:   corpsetype = 3 ;
armlatnk.bos:   return corpsetype;
Binary file armlatnk.cob matches
armliche.bos:Killed(severity, corpsetype)
armliche.bos:           corpsetype = 1;
armliche.bos:           return (corpsetype);
armliche.bos:           corpsetype = 2;
armliche.bos:           return (corpsetype);
armliche.bos:           corpsetype = 3;
armliche.bos:           return (corpsetype);
armliche.bos:   corpsetype = 3;
armliche.bos:   return corpsetype;
armllt.bos:     set-signal-mask SIG_AIM;
armllt.bos:Killed(severity, corpsetype)
armllt.bos:             corpsetype = 1 ;
armllt.bos:             return(corpsetype);
armllt.bos:             corpsetype = 2 ;
armllt.bos:             return(corpsetype);
armllt.bos:             corpsetype = 3 ;
armllt.bos:             return(corpsetype);
armllt.bos:     corpsetype = 3 ;
armllt.bos:     return corpsetype;
armlun.bos:     set-signal-mask SIG_MOVE;
armlun.bos:setSFXoccupy(state)
armlun.bos:SetMaxReloadTime(Func_Var_1)
armlun.bos:SetStunned(State)
armlun.bos:     set-signal-mask SIG_AIM;
armlun.bos:     set-signal-mask SIG_AIM_2;
armlun.bos:Killed(severity, corpsetype)
armlun.bos:                     corpsetype = 2;
armlun.bos:                     return (corpsetype);
armlun.bos:             corpsetype = 3;
armlun.bos:             return (corpsetype);
armlun.bos:                     corpsetype = 2;
armlun.bos:                     return (corpsetype);
armlun.bos:             corpsetype = 3;
armlun.bos:             return (corpsetype);
armlun.bos:             corpsetype = 1;
armlun.bos:             return (corpsetype);
armlun.bos:             corpsetype = 2;
armlun.bos:             return (corpsetype);
armlun.bos:             corpsetype = 3;
armlun.bos:             return (corpsetype);
armlun.bos:     corpsetype = 3;
armlun.bos:     return (corpsetype);
Binary file armlun.cob matches
armmakr.bos:Killed(severity, corpsetype)
armmakr.bos:            corpsetype = 1 ;
armmakr.bos:            return(corpsetype);
armmakr.bos:            corpsetype = 2 ;
armmakr.bos:            return(corpsetype);
armmakr.bos:            corpsetype = 3 ;
armmakr.bos:            return(corpsetype);
armmakr.bos:    corpsetype = 3 ;
armmakr.bos:    return corpsetype;
armmanni.bos:SetMaxReloadTime(Func_Var_1)
armmanni.bos:SetStunned(State)
armmanni.bos:   set-signal-mask SIG_AIM;
armmanni.bos:Killed(severity, corpsetype)
armmanni.bos:           corpsetype = 1 ;
armmanni.bos:           return(corpsetype);
armmanni.bos:           corpsetype = 2 ;
armmanni.bos:           return(corpsetype);
armmanni.bos:           corpsetype = 3 ;
armmanni.bos:           return(corpsetype);
armmanni.bos:   corpsetype = 3 ;
armmanni.bos:   return corpsetype;
Binary file armmanni.cob matches
armmar.bos:SetMaxReloadTime(Func_Var_1)
armmar.bos:SetStunned(State)
armmar.bos:     set-signal-mask SIG_AIM;
armmar.bos:Killed(severity, corpsetype)
armmar.bos:             corpsetype = 1 ;
armmar.bos:             return(corpsetype);
armmar.bos:             corpsetype = 2 ;
armmar.bos:             return(corpsetype);
armmar.bos:             corpsetype = 3 ;
armmar.bos:             return(corpsetype);
armmar.bos:     corpsetype = 3 ;
armmar.bos:     return corpsetype;
Binary file armmar.cob matches
fgrep: armmar_lus: Is a directory
armmar_lus.lua:include("units/"..unitName.."_lus/setup.lua")
armmar_lus.lua: InitialPiecesSetup()
armmar_lus.lua: SetSignalMask(2)
armmar_lus.lua: SetWantedAim(weaponID, heading, pitch)
armmark.bos:    set-signal-mask SIG_WALK; //you might need this
armmark.bos:    set-signal-mask SIG_ACTIVATE;
armmark.bos:    set-signal-mask SIG_ACTIVATE;
armmark.bos:SetStunned(State)
armmark.bos:Killed(severity, corpsetype)
armmark.bos:            corpsetype = 1 ;
armmark.bos:            return(corpsetype);
armmark.bos:            corpsetype = 2 ;
armmark.bos:            return(corpsetype);
armmark.bos:            corpsetype = 3 ;
armmark.bos:            return(corpsetype);
armmark.bos:    corpsetype = 3 ;
armmark.bos:    return corpsetype;
Binary file armmark.cob matches
armmart.bos:SetMaxReloadTime(Func_Var_1)
armmart.bos:SetStunned(State)
armmart.bos:    set-signal-mask SIG_AIM;
armmart.bos:Killed(severity, corpsetype)
armmart.bos:            corpsetype = 1 ;
armmart.bos:            return(corpsetype);
armmart.bos:            corpsetype = 2 ;
armmart.bos:            return(corpsetype);
armmart.bos:            corpsetype = 3 ;
armmart.bos:            return(corpsetype);
armmart.bos:    corpsetype = 3 ;
armmart.bos:    return corpsetype;
Binary file armmart.cob matches
armmav.bos:     //set-signal-mask SIG_WALK;
armmav.bos:SetMaxReloadTime(Func_Var_1)
armmav.bos:     set-signal-mask 0;
armmav.bos:SetStunned(State)
armmav.bos:     set-signal-mask SIG_AIM;
armmav.bos:Killed(severity, corpsetype)
armmav.bos:             corpsetype = 1 ;
armmav.bos:             return(corpsetype);
armmav.bos:             corpsetype = 2 ;
armmav.bos:             return(corpsetype);
armmav.bos:             corpsetype = 3 ;
armmav.bos:             return(corpsetype);
armmav.bos:     corpsetype = 3 ;
armmav.bos:     return corpsetype;
Binary file armmav.cob matches
armmercury.bos:SetStunned(State)
armmercury.bos: set-signal-mask SIG_AIM;
armmercury.bos: set DELAY_UNIT_VAR to 0;
armmercury.bos:Killed(severity, corpsetype)
armmercury.bos:         corpsetype = 1 ;
armmercury.bos:         return(corpsetype);
armmercury.bos:         corpsetype = 2 ;
armmercury.bos:         return(corpsetype);
armmercury.bos:         corpsetype = 3 ;
armmercury.bos:         return(corpsetype);
armmercury.bos: corpsetype = 3 ;
armmercury.bos: return corpsetype;
Binary file armmercury.cob matches
armmerl.bos:    set ARMORED to 1;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:SetMaxReloadTime(Func_Var_1)
armmerl.bos:    set-signal-mask 0;
armmerl.bos:SetStunned(State)
armmerl.bos:    set-signal-mask SIG_RESTORE;
armmerl.bos:    set-signal-mask SIG_AIM;
armmerl.bos:Killed(severity, corpsetype)
armmerl.bos:            corpsetype = 1 ;
armmerl.bos:            return(corpsetype);
armmerl.bos:            corpsetype = 2 ;
armmerl.bos:            return(corpsetype);
armmerl.bos:            corpsetype = 3 ;
armmerl.bos:            return(corpsetype);
armmerl.bos:    corpsetype = 3 ;
armmerl.bos:    return corpsetype;
Binary file armmerl.cob matches
armmex.bos:SetStunned(State)
armmex.bos:SetSpeed(Func_Var_1)
armmex.bos:Killed(severity, corpsetype)
armmex.bos:             corpsetype = 1 ;
armmex.bos:             return(corpsetype);
armmex.bos:             corpsetype = 2 ;
armmex.bos:             return(corpsetype);
armmex.bos:             corpsetype = 3 ;
armmex.bos:             return(corpsetype);
armmex.bos:     corpsetype = 3 ;
armmex.bos:     return corpsetype;
Binary file armmex.cob matches
armmh.bos:              // Set values for tilt
armmh.bos:      set-signal-mask SIG_MOVE;
armmh.bos:setSFXoccupy(Func_Var_1)
armmh.bos:SetMaxReloadTime(Func_Var_1)
armmh.bos:      set-signal-mask 0;
armmh.bos:SetStunned(State)
armmh.bos:      set-signal-mask SIG_RESTORE;
armmh.bos:      set-signal-mask SIG_AIM;
armmh.bos:Killed(severity, corpsetype)
armmh.bos:              corpsetype = 1 ;
armmh.bos:              return(corpsetype);
armmh.bos:              corpsetype = 2 ;
armmh.bos:              return(corpsetype);
armmh.bos:              corpsetype = 3 ;
armmh.bos:              return(corpsetype);
armmh.bos:      corpsetype = 3 ;
armmh.bos:      return corpsetype;
Binary file armmh.cob matches
armmls.bos:SetDirection(heading)
armmls.bos:     set INBUILDSTANCE to 1;
armmls.bos:     set INBUILDSTANCE to 0;
armmls.bos:     set-signal-mask SIG_MOVE;
armmls.bos:Killed(severity, corpsetype)
armmls.bos:             corpsetype = 1 ;
armmls.bos:             return(corpsetype);
armmls.bos:             corpsetype = 2 ;
armmls.bos:             return(corpsetype);
armmls.bos:             corpsetype = 3 ;
armmls.bos:             return(corpsetype);
armmls.bos:     corpsetype = 3 ;
armmls.bos:     return corpsetype;
Binary file armmls.cob matches
armmlv.bos:     set-signal-mask SIG_MOVE;
armmlv.bos:     set INBUILDSTANCE to 1;
armmlv.bos:     set-signal-mask SIG_BUILD;
armmlv.bos:     set-signal-mask 0;
armmlv.bos:     set INBUILDSTANCE to 0;
armmlv.bos:Killed(severity, corpsetype)
armmlv.bos:             corpsetype = 1 ;
armmlv.bos:             return(corpsetype);
armmlv.bos:             corpsetype = 2 ;
armmlv.bos:             return(corpsetype);
armmlv.bos:             corpsetype = 3 ;
armmlv.bos:             return(corpsetype);
armmlv.bos:     corpsetype = 3 ;
armmlv.bos:     return corpsetype;
armmmkr.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armmmkr.bos:    set ARMORED to 1;
armmmkr.bos:Killed(severity, corpsetype)
armmmkr.bos:            corpsetype = 1 ;
armmmkr.bos:            return(corpsetype);
armmmkr.bos:            corpsetype = 2 ;
armmmkr.bos:            return(corpsetype);
armmmkr.bos:            corpsetype = 3 ;
armmmkr.bos:            return(corpsetype);
armmmkr.bos:    corpsetype = 3 ;
armmmkr.bos:    return corpsetype;
armmoho.bos:SetStunned(State)
armmoho.bos:SetSpeed(Func_Var_1)
armmoho.bos:Killed(severity, corpsetype)
armmoho.bos:            corpsetype = 1 ;
armmoho.bos:            return(corpsetype);
armmoho.bos:            corpsetype = 2 ;
armmoho.bos:            return(corpsetype);
armmoho.bos:            corpsetype = 3 ;
armmoho.bos:            return(corpsetype);
armmoho.bos:    corpsetype = 3 ;
armmoho.bos:    return corpsetype;
Binary file armmoho.cob matches
armmship.bos:SetDirection(heading)
armmship.bos:SetMaxReloadTime(Func_Var_1)
armmship.bos:SetStunned(State)
armmship.bos:   set-signal-mask SIG_MOVE;
armmship.bos:   set-signal-mask SIG_AIM;
armmship.bos:   set-signal-mask SIG_AIM_3;
armmship.bos:Killed(severity, corpsetype)
armmship.bos:           corpsetype = 1 ;
armmship.bos:           return(corpsetype);
armmship.bos:           corpsetype = 2 ;
armmship.bos:           return(corpsetype);
armmship.bos:           corpsetype = 3 ;
armmship.bos:           return(corpsetype);
armmship.bos:   corpsetype = 3 ;
armmship.bos:   return corpsetype;
Binary file armmship.cob matches
armmstor.bos:Killed(severity, corpsetype)
armmstor.bos:           corpsetype = 1 ;
armmstor.bos:           return(corpsetype);
armmstor.bos:           corpsetype = 2 ;
armmstor.bos:           return(corpsetype);
armmstor.bos:           corpsetype = 3 ;
armmstor.bos:           return(corpsetype);
armmstor.bos:   corpsetype = 3 ;
armmstor.bos:   return corpsetype;
armnanotc.bos:  set INBUILDSTANCE to 1;
armnanotc.bos:  set INBUILDSTANCE to 0;
armnanotc.bos:SetStunned(State)
armnanotc.bos:Killed(severity, corpsetype)
armnanotc.bos:          corpsetype = 1 ;
armnanotc.bos:          return(corpsetype);
armnanotc.bos:          corpsetype = 2 ;
armnanotc.bos:          return(corpsetype);
armnanotc.bos:          corpsetype = 3 ;
armnanotc.bos:          return(corpsetype);
armnanotc.bos:  corpsetype = 3 ;
armnanotc.bos:  return corpsetype;
Binary file armnanotc.cob matches
armnanotcplat.bos:      set INBUILDSTANCE to 1;
armnanotcplat.bos:      set INBUILDSTANCE to 0;
armnanotcplat.bos:SetStunned(State)
armnanotcplat.bos:Killed(severity, corpsetype)
armnanotcplat.bos:              corpsetype = 1 ;
armnanotcplat.bos:              return(corpsetype);
armnanotcplat.bos:              corpsetype = 2 ;
armnanotcplat.bos:              return(corpsetype);
armnanotcplat.bos:              corpsetype = 3 ;
armnanotcplat.bos:              return(corpsetype);
armnanotcplat.bos:      corpsetype = 3 ;
armnanotcplat.bos:      return corpsetype;
Binary file armnanotcplat.cob matches
armnukevader.bos:       set-signal-mask SIG_MOVE;
armnukevader.bos:Killed(severity, corpsetype)
armnukevader.bos:               corpsetype = 1 ;
armnukevader.bos:               return(corpsetype);
armnukevader.bos:               corpsetype = 2 ;
armnukevader.bos:               return(corpsetype);
armnukevader.bos:               corpsetype = 3 ;
armnukevader.bos:               return(corpsetype);
armnukevader.bos:       corpsetype = 3 ;
armnukevader.bos:       return corpsetype;
armpb.bos:      set ARMORED to 0;
armpb.bos:      set ARMORED to 1;
armpb.bos:      set-signal-mask 0;
armpb.bos:SetStunned(State)
armpb.bos:      set-signal-mask SIG_RESTORE;
armpb.bos:SetMaxReloadTime(Func_Var_1)
armpb.bos:      set-signal-mask SIG_AIM;
armpb.bos:Killed(severity, corpsetype)
armpb.bos:              corpsetype = 1 ;
armpb.bos:              return(corpsetype);
armpb.bos:              corpsetype = 2 ;
armpb.bos:              return(corpsetype);
armpb.bos:              corpsetype = 3 ;
armpb.bos:              return(corpsetype);
armpb.bos:      corpsetype = 3 ;
armpb.bos:      return corpsetype;
Binary file armpb.cob matches
armpeep.bos:Killed(severity, corpsetype)
armpeep.bos:            corpsetype = 1 ;
armpeep.bos:            return(corpsetype);
armpeep.bos:            corpsetype = 2 ;
armpeep.bos:            return(corpsetype);
armpeep.bos:            corpsetype = 3 ;
armpeep.bos:            return(corpsetype);
armpeep.bos:    corpsetype = 3 ;
armpeep.bos:    return corpsetype;
armpincer.bos:SetMaxReloadTime(Func_Var_1)
armpincer.bos:SetStunned(State)
armpincer.bos:  set-signal-mask SIG_AIM;
armpincer.bos:Killed(severity, corpsetype)
armpincer.bos:          corpsetype = 1 ;
armpincer.bos:          return(corpsetype);
armpincer.bos:          corpsetype = 2 ;
armpincer.bos:          return(corpsetype);
armpincer.bos:          corpsetype = 3 ;
armpincer.bos:          return(corpsetype);
armpincer.bos:  corpsetype = 3 ;
armpincer.bos:  return corpsetype;
Binary file armpincer.cob matches
armplat.bos:    set ARMORED to 0;
armplat.bos:    set ARMORED to 1;
armplat.bos:    set YARD_OPEN to 1;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 1;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set YARD_OPEN to 0;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 0;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set INBUILDSTANCE to 1;
armplat.bos:    set INBUILDSTANCE to 0;
armplat.bos:    set ARMORED to 1;
armplat.bos:    set-signal-mask SIG_ACTIVATE;
armplat.bos:    set-signal-mask 0;
armplat.bos:Killed(severity, corpsetype)
armplat.bos:            corpsetype = 1 ;
armplat.bos:            return(corpsetype);
armplat.bos:            corpsetype = 2 ;
armplat.bos:            return(corpsetype);
armplat.bos:            corpsetype = 3 ;
armplat.bos:            return(corpsetype);
armplat.bos:    corpsetype = 3 ;
armplat.bos:    return corpsetype;
armpnix.bos:Killed(severity, corpsetype)
armpnix.bos:            corpsetype = 1 ;
armpnix.bos:            return(corpsetype);
armpnix.bos:            corpsetype = 2 ;
armpnix.bos:            return(corpsetype);
armpnix.bos:            corpsetype = 3 ;
armpnix.bos:            return(corpsetype);
armpnix.bos:    corpsetype = 3 ;
armpnix.bos:    return corpsetype;
armpship.bos:SetDirection(heading)
armpship.bos:   set-signal-mask 4096;
armpship.bos:SetMaxReloadTime(Func_Var_1)
armpship.bos:   set-signal-mask 0;
armpship.bos:SetStunned(State)
armpship.bos:   set-signal-mask SIG_MOVE;
armpship.bos:   set-signal-mask SIG_AIM;
armpship.bos:   set-signal-mask SIG_AIM_2;
armpship.bos:Killed(severity, corpsetype)
armpship.bos:           corpsetype = 1;
armpship.bos:           return (corpsetype);
armpship.bos:           corpsetype = 2;
armpship.bos:           return (corpsetype);
armpship.bos:   corpsetype = 3;
armpship.bos:   return corpsetype;
Binary file armpship.cob matches
armpt.bos:SetDirection(heading)
armpt.bos:SetMaxReloadTime(Func_Var_1)
armpt.bos:      set-signal-mask 0;
armpt.bos:SetStunned(State)
armpt.bos:      set-signal-mask SIG_MOVE;
armpt.bos:      set-signal-mask SIG_AIM_3;
armpt.bos:      set-signal-mask SIG_AIM;
armpt.bos:Killed(severity, corpsetype)
armpt.bos:              corpsetype = 1 ;
armpt.bos:              return(corpsetype);
armpt.bos:              corpsetype = 2 ;
armpt.bos:              return(corpsetype);
armpt.bos:              corpsetype = 3 ;
armpt.bos:              return(corpsetype);
armpt.bos:      corpsetype = 3 ;
armpt.bos:      return corpsetype;
Binary file armpt.cob matches
armptl.bos:SetStunned(State)
armptl.bos:     set-signal-mask SIG_AIM;
armptl.bos:Killed(severity, corpsetype)
armptl.bos:             corpsetype = 1 ;
armptl.bos:             return(corpsetype);
armptl.bos:             corpsetype = 2 ;
armptl.bos:             return(corpsetype);
armptl.bos:             corpsetype = 3 ;
armptl.bos:             return(corpsetype);
armptl.bos:     corpsetype = 3 ;
armptl.bos:     return corpsetype;
Binary file armptl.cob matches
armpw.bos:      set-signal-mask SIG_MOVE;
armpw.bos:              set-signal-mask (SIG_AIM | SIG_MOVE);
armpw.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
armpw.bos:      start-script InitialSetup1();
armpw.bos:SetMaxReloadTime(Func_Var_1)
armpw.bos:SetStunned(State)
armpw.bos:      set-signal-mask SIG_AIM;
armpw.bos:      start-script Weapon1SetWtdAim(heading, pitch);
armpw.bos:Killed(severity, corpsetype)
armpw.bos:              corpsetype = 1;
armpw.bos:              return (corpsetype);
armpw.bos:              corpsetype = 2;
armpw.bos:              return (corpsetype);
armpw.bos:              corpsetype = 3;
armpw.bos:              return (corpsetype);
armpw.bos:      corpsetype = 3;
armpw.bos:      return corpsetype;
Binary file armpw.cob matches
armrad.bos:Killed(severity, corpsetype)
armrad.bos:             corpsetype = 1 ;
armrad.bos:             return(corpsetype);
armrad.bos:             corpsetype = 2 ;
armrad.bos:             return(corpsetype);
armrad.bos:             corpsetype = 3 ;
armrad.bos:             return(corpsetype);
armrad.bos:     corpsetype = 3 ;
armrad.bos:     return corpsetype;
armraz.bos:     set-signal-mask 16;
armraz.bos:     set-signal-mask SIG_AIM;
armraz.bos:Killed(severity, corpsetype)
armraz.bos:             corpsetype = 1 ;
armraz.bos:             corpsetype = 2 ;
armraz.bos:             corpsetype = 3 ;
armraz.bos:     corpsetype = 3 ;
armrecl.bos:    set INBUILDSTANCE to 1;
armrecl.bos:    set INBUILDSTANCE to 0;
armrecl.bos:Killed(severity, corpsetype)
armrecl.bos:            corpsetype = 1 ;
armrecl.bos:            return(corpsetype);
armrecl.bos:            corpsetype = 2 ;
armrecl.bos:            return(corpsetype);
armrecl.bos:            corpsetype = 3 ;
armrecl.bos:            return(corpsetype);
armrecl.bos:    corpsetype = 3 ;
armrecl.bos:    return corpsetype;
armrectr.bos:   //set-signal-mask SIG_WALK;
armrectr.bos:   set-signal-mask SIG_BUILD;
armrectr.bos:   set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 1;
armrectr.bos:   set-signal-mask SIG_BUILD;
armrectr.bos:   set-signal-mask 0;
armrectr.bos:Killed(severity, corpsetype)
armrectr.bos:           corpsetype = 1 ;
armrectr.bos:           return(corpsetype);
armrectr.bos:           corpsetype = 2 ;
armrectr.bos:           return(corpsetype);
armrectr.bos:           corpsetype = 3 ;
armrectr.bos:           return(corpsetype);
armrectr.bos:   corpsetype = 3 ;
armrectr.bos:   return corpsetype;
armrectrt4.bos: //set-signal-mask SIG_WALK;
armrectrt4.bos: set-signal-mask SIG_BUILD;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
armrectrt4.bos: set-signal-mask SIG_BUILD;
armrectrt4.bos: set-signal-mask 0;
armrectrt4.bos:Killed(severity, corpsetype)
armrectrt4.bos:         corpsetype = 1 ;
armrectrt4.bos:         return(corpsetype);
armrectrt4.bos:         corpsetype = 2 ;
armrectrt4.bos:         return(corpsetype);
armrectrt4.bos:         corpsetype = 3 ;
armrectrt4.bos:         return(corpsetype);
armrectrt4.bos: corpsetype = 3 ;
armrectrt4.bos: return corpsetype;
armrl.bos:SetStunned(State)
armrl.bos:      set-signal-mask SIG_AIM;
armrl.bos:Killed(severity, corpsetype)
armrl.bos:              corpsetype = 1 ;
armrl.bos:              return(corpsetype);
armrl.bos:              corpsetype = 2 ;
armrl.bos:              return(corpsetype);
armrl.bos:              corpsetype = 3 ;
armrl.bos:              return(corpsetype);
armrl.bos:      corpsetype = 3 ;
armrl.bos:      return corpsetype;
Binary file armrl.cob matches
armrock.bos:    set-signal-mask SIG_WALK;
armrock.bos:SetMaxReloadTime(Func_Var_1)
armrock.bos:SetStunned(State)
armrock.bos:    set-signal-mask SIG_AIM;
armrock.bos:Killed(severity, corpsetype)
armrock.bos:            corpsetype = 1 ;
armrock.bos:            return(corpsetype);
armrock.bos:            corpsetype = 2 ;
armrock.bos:            return(corpsetype);
armrock.bos:            corpsetype = 3 ;
armrock.bos:            return(corpsetype);
armrock.bos:    corpsetype = 3 ;
armrock.bos:    return corpsetype;
Binary file armrock.cob matches
armroy.bos:     set-signal-mask SIG_ROCK;
armroy.bos:SetDirection(heading)
armroy.bos:SetMaxReloadTime(Func_Var_1)
armroy.bos:     set-signal-mask 0;
armroy.bos:SetStunned(State)
armroy.bos:     set-signal-mask SIG_MOVE;
armroy.bos:     set-signal-mask SIG_AIM;
armroy.bos:Killed(severity, corpsetype)
armroy.bos:             corpsetype = 1 ;
armroy.bos:             return(corpsetype);
armroy.bos:             corpsetype = 2 ;
armroy.bos:             return(corpsetype);
armroy.bos:             corpsetype = 3 ;
armroy.bos:             return(corpsetype);
armroy.bos:     corpsetype = 3 ;
armroy.bos:     return corpsetype;
Binary file armroy.cob matches
armsaber.bos:   set-signal-mask 0;
armsaber.bos:SetStunned(State)
armsaber.bos:setSFXoccupy(Func_Var_1)
armsaber.bos:Killed(severity, corpsetype)
armsaber.bos:           corpsetype = 1 ;
armsaber.bos:           return(corpsetype);
armsaber.bos:           corpsetype = 2 ;
armsaber.bos:           return(corpsetype);
armsaber.bos:           corpsetype = 3 ;
armsaber.bos:           return(corpsetype);
armsaber.bos:   corpsetype = 3 ;
armsaber.bos:   return corpsetype;
Binary file armsaber.cob matches
armsam.bos:SetMaxReloadTime(Func_Var_1)
armsam.bos:SetStunned(State)
armsam.bos:     set-signal-mask SIG_AIM;
armsam.bos:Killed(severity, corpsetype)
armsam.bos:             corpsetype = 1 ;
armsam.bos:             return(corpsetype);
armsam.bos:             corpsetype = 2 ;
armsam.bos:             return(corpsetype);
armsam.bos:             corpsetype = 3 ;
armsam.bos:             return(corpsetype);
armsam.bos:     corpsetype = 3 ;
armsam.bos:     return corpsetype;
Binary file armsam.cob matches
armsb.bos:setSFXoccupy(Func_Var_1)
armsb.bos:Killed(severity, corpsetype)
armsb.bos:              corpsetype = 1 ;
armsb.bos:              return(corpsetype);
armsb.bos:              corpsetype = 2 ;
armsb.bos:              return(corpsetype);
armsb.bos:              corpsetype = 3 ;
armsb.bos:              return(corpsetype);
armsb.bos:      corpsetype = 3 ;
armsb.bos:      return corpsetype;
Binary file armsb.cob matches
armscab.bos:    //set-signal-mask SIG_WALK;
armscab.bos:    set-signal-mask 0;
armscab.bos:SetStunned(State)
armscab.bos:    set-signal-mask SIG_AIM;
armscab.bos:Killed(severity, corpsetype)
armscab.bos:            corpsetype = 1 ;
armscab.bos:            return(corpsetype);
armscab.bos:            corpsetype = 2 ;
armscab.bos:            return(corpsetype);
armscab.bos:            corpsetype = 3 ;
armscab.bos:            return(corpsetype);
armscab.bos:    corpsetype = 3 ;
armscab.bos:    return corpsetype;
Binary file armscab.cob matches
armsd.bos:Killed(severity, corpsetype)
armsd.bos:              corpsetype = 1 ;
armsd.bos:              return(corpsetype);
armsd.bos:              corpsetype = 2 ;
armsd.bos:              return(corpsetype);
armsd.bos:              corpsetype = 3 ;
armsd.bos:              return(corpsetype);
armsd.bos:      corpsetype = 3 ;
armsd.bos:      return corpsetype;
armseap.bos:    set-signal-mask SIG_MOVE;
armseap.bos:Killed(severity, corpsetype)
armseap.bos:            corpsetype = 1 ;
armseap.bos:            return(corpsetype);
armseap.bos:            corpsetype = 2 ;
armseap.bos:            return(corpsetype);
armseap.bos:            corpsetype = 3 ;
armseap.bos:            return(corpsetype);
armseap.bos:    corpsetype = 3 ;
armseap.bos:    return corpsetype;
armseer.bos:    set-signal-mask SIG_ACTIVATE;
armseer.bos:    set-signal-mask SIG_ACTIVATE;
armseer.bos:SetStunned(State)
armseer.bos:Killed(severity, corpsetype)
armseer.bos:            corpsetype = 1 ;
armseer.bos:            return(corpsetype);
armseer.bos:            corpsetype = 2 ;
armseer.bos:            return(corpsetype);
armseer.bos:            corpsetype = 3 ;
armseer.bos:            return(corpsetype);
armseer.bos:    corpsetype = 3 ;
armseer.bos:    return corpsetype;
Binary file armseer.cob matches
armsehak.bos:   set-signal-mask SIG_MOVE;
armsehak.bos:setSFXoccupy(Func_Var_1)
armsehak.bos:Killed(severity, corpsetype)
armsehak.bos:           corpsetype = 1 ;
armsehak.bos:           return(corpsetype);
armsehak.bos:           corpsetype = 2 ;
armsehak.bos:           return(corpsetype);
armsehak.bos:           corpsetype = 3 ;
armsehak.bos:           return(corpsetype);
armsehak.bos:   corpsetype = 3 ;
armsehak.bos:   return corpsetype;
Binary file armsehak.cob matches
armserp.bos:            // Set values for tilt
armserp.bos:    set-signal-mask SIG_MOVE;
armserp.bos:    set-signal-mask SIG_MOVE;
armserp.bos:SetStunned(State)
armserp.bos:    set-signal-mask SIG_AIM;
armserp.bos:Killed(severity, corpsetype)
armserp.bos:            corpsetype = 1 ;
armserp.bos:            return(corpsetype);
armserp.bos:            corpsetype = 2 ;
armserp.bos:            return(corpsetype);
armserp.bos:            corpsetype = 3 ;
armserp.bos:            return(corpsetype);
armserp.bos:    corpsetype = 3 ;
armserp.bos:    return corpsetype;
Binary file armserp.cob matches
armsfig.bos:    set-signal-mask SIG_MOVE;
armsfig.bos:Killed(severity, corpsetype)
armsfig.bos:            corpsetype = 1 ;
armsfig.bos:            return(corpsetype);
armsfig.bos:            corpsetype = 2 ;
armsfig.bos:            return(corpsetype);
armsfig.bos:            corpsetype = 3 ;
armsfig.bos:            return(corpsetype);
armsfig.bos:    corpsetype = 3 ;
armsfig.bos:    return corpsetype;
armsh.bos:              // Set values for tilt
armsh.bos:      set-signal-mask SIG_MOVE;
armsh.bos:setSFXoccupy(Func_Var_1)
armsh.bos:SetMaxReloadTime(Func_Var_1)
armsh.bos:      set-signal-mask 0;
armsh.bos:SetStunned(State)
armsh.bos:      set-signal-mask SIG_AIM;
armsh.bos:Killed(severity, corpsetype)
armsh.bos:              corpsetype = 1 ;
armsh.bos:              return(corpsetype);
armsh.bos:              corpsetype = 2 ;
armsh.bos:              return(corpsetype);
armsh.bos:              corpsetype = 3 ;
armsh.bos:              return(corpsetype);
armsh.bos:      corpsetype = 3 ;
armsh.bos:      return corpsetype;
Binary file armsh.cob matches
armshltx.bos:   set YARD_OPEN to 1;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 1;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set YARD_OPEN to 0;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 0;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set INBUILDSTANCE to 1;
armshltx.bos:   set INBUILDSTANCE to 0;
armshltx.bos:   set-signal-mask SIG_ACTIVATE;
armshltx.bos:   set-signal-mask 0;
armshltx.bos:Killed(severity, corpsetype)
armshltx.bos:           corpsetype = 1 ;
armshltx.bos:           return(corpsetype);
armshltx.bos:           corpsetype = 2 ;
armshltx.bos:           return(corpsetype);
armshltx.bos:           corpsetype = 3 ;
armshltx.bos:           return(corpsetype);
armshltx.bos:   corpsetype = 3 ;
armshltx.bos:   return corpsetype;
armsilo.bos:// OffsetToScriptCodeIndexArray        c08
armsilo.bos:// OffsetToScriptNameOffsetArray       c4c
armsilo.bos:// OffsetToPieceNameOffsetArray        c90
armsilo.bos:// OffsetToScriptCode                  2c
armsilo.bos:// OffsetToNameArray                   ca4
armsilo.bos:// OffsetToFirstName                   ca4
armsilo.bos:SetMaxReloadTime(Func_Var_1)
armsilo.bos:/*   217:*/ set-signal-mask 0;
armsilo.bos:/*   22c:*/ set-signal-mask SIG_AIM;
armsilo.bos:Killed(severity, corpsetype)
armsilo.bos:            corpsetype = 1 ;
armsilo.bos:            return(corpsetype);
armsilo.bos:            corpsetype = 2 ;
armsilo.bos:            return(corpsetype);
armsilo.bos:            corpsetype = 3 ;
armsilo.bos:            return(corpsetype);
armsilo.bos:    corpsetype = 3 ;
armsilo.bos:    return corpsetype;
Binary file armsilo.cob matches
armsjam.bos:SetDirection(heading)
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set-signal-mask 4;
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 100;
armsjam.bos:    set-signal-mask SIG_MOVE;
armsjam.bos:Killed(severity, corpsetype)
armsjam.bos:            corpsetype = 1 ;
armsjam.bos:            return(corpsetype);
armsjam.bos:            corpsetype = 2 ;
armsjam.bos:            return(corpsetype);
armsjam.bos:            corpsetype = 3 ;
armsjam.bos:            return(corpsetype);
armsjam.bos:    corpsetype = 3 ;
armsjam.bos:    return corpsetype;
Binary file armsjam.cob matches
armsnipe.bos:   //set-signal-mask SIG_WALK;
armsnipe.bos:SetMaxReloadTime(Func_Var_1)
armsnipe.bos:   set-signal-mask 0;
armsnipe.bos:SetStunned(State)
armsnipe.bos:   set-signal-mask SIG_AIM;
armsnipe.bos:Killed(severity, corpsetype)
armsnipe.bos:           corpsetype = 1 ;
armsnipe.bos:           return(corpsetype);
armsnipe.bos:           corpsetype = 2 ;
armsnipe.bos:           return(corpsetype);
armsnipe.bos:           corpsetype = 3 ;
armsnipe.bos:           return(corpsetype);
armsnipe.bos:   corpsetype = 3 ;
armsnipe.bos:   return corpsetype;
Binary file armsnipe.cob matches
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 1;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 0;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:   set ARMORED to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:   set ARMORED to 1;
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set-signal-mask 2;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 100;
armsolar.bos:Killed(severity, corpsetype)
armsolar.bos:           corpsetype = 1 ;
armsolar.bos:           return(corpsetype);
armsolar.bos:           corpsetype = 2 ;
armsolar.bos:           return(corpsetype);
armsolar.bos:           corpsetype = 3 ;
armsolar.bos:           return(corpsetype);
armsolar.bos:   corpsetype = 3 ;
armsolar.bos:   return corpsetype;
armsonar.bos:Killed(severity, corpsetype)
armsonar.bos:           corpsetype = 1 ;
armsonar.bos:           return(corpsetype);
armsonar.bos:           corpsetype = 2 ;
armsonar.bos:           return(corpsetype);
armsonar.bos:           corpsetype = 3 ;
armsonar.bos:           return(corpsetype);
armsonar.bos:   corpsetype = 3 ;
armsonar.bos:   return corpsetype;
armspid.bos:    //set-signal-mask SIG_WALK;
armspid.bos:SetMaxReloadTime(t)
armspid.bos:SetStunned(State)
armspid.bos:    set-signal-mask SIG_AIM;
armspid.bos:Killed(severity, corpsetype)
armspid.bos:            corpsetype = 1 ;
armspid.bos:            return(corpsetype);
armspid.bos:            corpsetype = 2 ;
armspid.bos:            return(corpsetype);
armspid.bos:            corpsetype = 3 ;
armspid.bos:            return(corpsetype);
armspid.bos:    corpsetype = 3 ;
armspid.bos:    return corpsetype;
Binary file armspid.cob matches
armsptk.bos:    //set-signal-mask SIG_WALK;
armsptk.bos:SetMaxReloadTime(t)
armsptk.bos:    set-signal-mask SIG_FIRE1;
armsptk.bos:    set-signal-mask 0;
armsptk.bos:SetStunned(State)
armsptk.bos:    set-signal-mask SIG_AIM;
armsptk.bos:Killed(severity, corpsetype)
armsptk.bos:            corpsetype = 1 ;
armsptk.bos:            return(corpsetype);
armsptk.bos:            corpsetype = 2 ;
armsptk.bos:            return(corpsetype);
armsptk.bos:            corpsetype = 3 ;
armsptk.bos:            return(corpsetype);
armsptk.bos:    corpsetype = 3 ;
armsptk.bos:    return corpsetype;
Binary file armsptk.cob matches
armspy.bos:     //set-signal-mask SIG_WALK;
armspy.bos:             set ACTIVATION to 0;
armspy.bos:     set-signal-mask SIG_ACTIVATE;
armspy.bos:     set INBUILDSTANCE to 1;
armspy.bos:     set INBUILDSTANCE to 0;
armspy.bos:     set-signal-mask SIG_ACTIVATE;
armspy.bos:             set-signal-mask 4;
armspy.bos:             set ACTIVATION to 0;
armspy.bos:             set ACTIVATION to 100;
armspy.bos:Killed(severity, corpsetype)
armspy.bos:             corpsetype = 1 ;
armspy.bos:             return(corpsetype);
armspy.bos:             corpsetype = 2 ;
armspy.bos:             return(corpsetype);
armspy.bos:             corpsetype = 3 ;
armspy.bos:             return(corpsetype);
armspy.bos:     corpsetype = 3 ;
armspy.bos:     return corpsetype;
armstil.bos:Killed(severity, corpsetype)
armstil.bos:            corpsetype = 1 ;
armstil.bos:            return(corpsetype);
armstil.bos:            corpsetype = 2 ;
armstil.bos:            return(corpsetype);
armstil.bos:            corpsetype = 3 ;
armstil.bos:            return(corpsetype);
armstil.bos:    corpsetype = 3 ;
armstil.bos:    return corpsetype;
armstump.bos:SetMaxReloadTime(Func_Var_1)
armstump.bos:SetStunned(State)
armstump.bos:   set-signal-mask SIG_AIM;
armstump.bos:Killed(severity, corpsetype)
armstump.bos:           corpsetype = 1 ;
armstump.bos:           return(corpsetype);
armstump.bos:           corpsetype = 2 ;
armstump.bos:           return(corpsetype);
armstump.bos:           corpsetype = 3 ;
armstump.bos:           return(corpsetype);
armstump.bos:   corpsetype = 3 ;
armstump.bos:   return corpsetype;
Binary file armstump.cob matches
armsub.bos:     set-signal-mask SIG_MOVE;
armsub.bos:SetStunned(State)
armsub.bos:     set-signal-mask SIG_AIM;
armsub.bos:Killed(severity, corpsetype)
armsub.bos:             corpsetype = 1 ;
armsub.bos:             return(corpsetype);
armsub.bos:             corpsetype = 2 ;
armsub.bos:             return(corpsetype);
armsub.bos:             corpsetype = 3 ;
armsub.bos:             return(corpsetype);
armsub.bos:     corpsetype = 3 ;
armsub.bos:     return corpsetype;
Binary file armsub.cob matches
armsubk.bos:    set-signal-mask SIG_MOVE;
armsubk.bos:Killed(severity, corpsetype)
armsubk.bos:            corpsetype = 1 ;
armsubk.bos:            return(corpsetype);
armsubk.bos:            corpsetype = 2 ;
armsubk.bos:            return(corpsetype);
armsubk.bos:            corpsetype = 3 ;
armsubk.bos:            return(corpsetype);
armsubk.bos:    corpsetype = 3 ;
armsubk.bos:    return corpsetype;
armsy.bos:      set YARD_OPEN to 1;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 1;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set YARD_OPEN to 0;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 0;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set INBUILDSTANCE to 1;
armsy.bos:      set INBUILDSTANCE to 0;
armsy.bos:      set-signal-mask SIG_ACTIVATE;
armsy.bos:      set-signal-mask 0;
armsy.bos:Killed(severity, corpsetype)
armsy.bos:              corpsetype = 1 ;
armsy.bos:              return(corpsetype);
armsy.bos:              corpsetype = 2 ;
armsy.bos:              return(corpsetype);
armsy.bos:              corpsetype = 3 ;
armsy.bos:              return(corpsetype);
armsy.bos:      corpsetype = 3 ;
armsy.bos:      return corpsetype;
armtarg.bos:    set ARMORED to 1;
armtarg.bos:    set-signal-mask 2;
armtarg.bos:    set ACTIVATION to 0;
armtarg.bos:    set ACTIVATION to 1;
armtarg.bos:Killed(severity, corpsetype)
armtarg.bos:            corpsetype = 1 ;
armtarg.bos:            return(corpsetype);
armtarg.bos:            corpsetype = 2 ;
armtarg.bos:            return(corpsetype);
armtarg.bos:            corpsetype = 3 ;
armtarg.bos:            return(corpsetype);
armtarg.bos:    corpsetype = 3 ;
armtarg.bos:    return corpsetype;
armthovr.bos:           // Set values for tilt
armthovr.bos:   set-signal-mask SIG_MOVE;
armthovr.bos:setSFXoccupy(Func_Var_1)
armthovr.bos:   set-signal-mask 4;
armthovr.bos:BoomReset()
armthovr.bos:           set BUSY to 1;
armthovr.bos:           call-script BoomReset();
armthovr.bos:           set BUSY to 0;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           call-script BoomReset();
armthovr.bos:           set BUSY to 0;
armthovr.bos:Killed(severity, corpsetype)
armthovr.bos:           corpsetype = 1 ;
armthovr.bos:           return(corpsetype);
armthovr.bos:           corpsetype = 2 ;
armthovr.bos:           return(corpsetype);
armthovr.bos:           corpsetype = 3 ;
armthovr.bos:           return(corpsetype);
armthovr.bos:   corpsetype = 3 ;
armthovr.bos:   return corpsetype;
Binary file armthovr.cob matches
armthund.bos:Killed(severity, corpsetype)
armthund.bos:           corpsetype = 1 ;
armthund.bos:           return(corpsetype);
armthund.bos:           corpsetype = 2 ;
armthund.bos:           return(corpsetype);
armthund.bos:           corpsetype = 3 ;
armthund.bos:           return(corpsetype);
armthund.bos:   corpsetype = 3 ;
armthund.bos:   return corpsetype;
armtide.bos:Killed(severity, corpsetype)
armtide.bos:            corpsetype = 1 ;
armtide.bos:            return(corpsetype);
armtide.bos:            corpsetype = 2 ;
armtide.bos:            return(corpsetype);
armtide.bos:            corpsetype = 3 ;
armtide.bos:            return(corpsetype);
armtide.bos:    corpsetype = 3 ;
armtide.bos:    return corpsetype;
armtl.bos:SetStunned(State)
armtl.bos:      set-signal-mask SIG_AIM;
armtl.bos:Killed(severity, corpsetype)
armtl.bos:              corpsetype = 1 ;
armtl.bos:              return(corpsetype);
armtl.bos:              corpsetype = 2 ;
armtl.bos:              return(corpsetype);
armtl.bos:              corpsetype = 3 ;
armtl.bos:              return(corpsetype);
armtl.bos:      corpsetype = 3 ;
armtl.bos:      return corpsetype;
Binary file armtl.cob matches
armtship.bos:   set-signal-mask SIG_MOVE;
armtship.bos:   set-signal-mask 4;
armtship.bos:BoomReset()
armtship.bos:           set BUSY to 1;
armtship.bos:           call-script BoomReset();
armtship.bos:           set BUSY to 0;
armtship.bos:           set BUSY to 1;
armtship.bos:           call-script BoomReset();
armtship.bos:           set BUSY to 0;
armtship.bos:Killed(severity, corpsetype)
armtship.bos:           corpsetype = 1 ;
armtship.bos:           return(corpsetype);
armtship.bos:           corpsetype = 2 ;
armtship.bos:           return(corpsetype);
armtship.bos:           corpsetype = 3 ;
armtship.bos:           return(corpsetype);
armtship.bos:   corpsetype = 3 ;
armtship.bos:   return corpsetype;
Binary file armtship.cob matches
armuwadves.bos:Killed(severity, corpsetype)
armuwadves.bos:         corpsetype = 1 ;
armuwadves.bos:         return(corpsetype);
armuwadves.bos:         corpsetype = 2 ;
armuwadves.bos:         return(corpsetype);
armuwadves.bos:         corpsetype = 3 ;
armuwadves.bos:         return(corpsetype);
armuwadves.bos: corpsetype = 3 ;
armuwadves.bos: return corpsetype;
armuwadvms.bos:Killed(severity, corpsetype)
armuwadvms.bos:         corpsetype = 1 ;
armuwadvms.bos:         return(corpsetype);
armuwadvms.bos:         corpsetype = 2 ;
armuwadvms.bos:         return(corpsetype);
armuwadvms.bos:         corpsetype = 3 ;
armuwadvms.bos:         return(corpsetype);
armuwadvms.bos: corpsetype = 3 ;
armuwadvms.bos: return corpsetype;
armuwes.bos:Killed(severity, corpsetype)
armuwes.bos:            corpsetype = 1 ;
armuwes.bos:            return(corpsetype);
armuwes.bos:            corpsetype = 2 ;
armuwes.bos:            return(corpsetype);
armuwes.bos:            corpsetype = 3 ;
armuwes.bos:            return(corpsetype);
armuwes.bos:    corpsetype = 3 ;
armuwes.bos:    return corpsetype;
armuwfus.bos:Killed(severity, corpsetype)
armuwfus.bos:           corpsetype = 1 ;
armuwfus.bos:           return(corpsetype);
armuwfus.bos:           corpsetype = 2 ;
armuwfus.bos:           return(corpsetype);
armuwfus.bos:           corpsetype = 3 ;
armuwfus.bos:           return(corpsetype);
armuwfus.bos:   corpsetype = 3 ;
armuwfus.bos:   return corpsetype;
armuwmex.bos:   set-signal-mask SIG_ACTIVATE;
armuwmex.bos:SetSpeed(Func_Var_1)
armuwmex.bos:Killed(severity, corpsetype)
armuwmex.bos:           corpsetype = 1 ;
armuwmex.bos:           return(corpsetype);
armuwmex.bos:           corpsetype = 2 ;
armuwmex.bos:           return(corpsetype);
armuwmex.bos:           corpsetype = 3 ;
armuwmex.bos:           return(corpsetype);
armuwmex.bos:   corpsetype = 3 ;
armuwmex.bos:   return corpsetype;
Binary file armuwmex.cob matches
armuwmme.bos:   set-signal-mask SIG_WORK;
armuwmme.bos:   set-signal-mask SIG_ACTIVATE;
armuwmme.bos:SetSpeed(Func_Var_1)
armuwmme.bos:Killed(severity, corpsetype)
armuwmme.bos:           corpsetype = 1 ;
armuwmme.bos:           return(corpsetype);
armuwmme.bos:           corpsetype = 2 ;
armuwmme.bos:           return(corpsetype);
armuwmme.bos:           corpsetype = 3 ;
armuwmme.bos:           return(corpsetype);
armuwmme.bos:   corpsetype = 3 ;
armuwmme.bos:   return corpsetype;
Binary file armuwmme.cob matches
armuwmmm.bos:Killed(severity, corpsetype)
armuwmmm.bos:           corpsetype = 1 ;
armuwmmm.bos:           return(corpsetype);
armuwmmm.bos:           corpsetype = 2 ;
armuwmmm.bos:           return(corpsetype);
armuwmmm.bos:           corpsetype = 3 ;
armuwmmm.bos:           return(corpsetype);
armuwmmm.bos:   corpsetype = 3 ;
armuwmmm.bos:   return corpsetype;
armuwms.bos:Killed(severity, corpsetype)
armuwms.bos:            corpsetype = 1 ;
armuwms.bos:            return(corpsetype);
armuwms.bos:            corpsetype = 2 ;
armuwms.bos:            return(corpsetype);
armuwms.bos:            corpsetype = 3 ;
armuwms.bos:            return(corpsetype);
armuwms.bos:    corpsetype = 3 ;
armuwms.bos:    return corpsetype;
armvader.bos:   set-signal-mask SIG_MOVE;
armvader.bos:Killed(severity, corpsetype)
armvader.bos:           corpsetype = 1 ;
armvader.bos:           return(corpsetype);
armvader.bos:           corpsetype = 2 ;
armvader.bos:           return(corpsetype);
armvader.bos:           corpsetype = 3 ;
armvader.bos:           return(corpsetype);
armvader.bos:   corpsetype = 3 ;
armvader.bos:   return corpsetype;
armvang.bos:    set-signal-mask SIG_WALK;
armvang.bos:SetStunned(State)
armvang.bos:    set-signal-mask SIG_AIM;
armvang.bos:Killed(severity, corpsetype)
armvang.bos:            corpsetype = 1 ;
armvang.bos:            return(corpsetype);
armvang.bos:            corpsetype = 2 ;
armvang.bos:            return(corpsetype);
armvang.bos:            corpsetype = 3 ;
armvang.bos:            return(corpsetype);
armvang.bos:    corpsetype = 3 ;
armvang.bos:    return corpsetype;
Binary file armvang.cob matches
armveil.bos:Killed(severity, corpsetype)
armveil.bos:            corpsetype = 1 ;
armveil.bos:            return(corpsetype);
armveil.bos:            corpsetype = 2 ;
armveil.bos:            return(corpsetype);
armveil.bos:            corpsetype = 3 ;
armveil.bos:            return(corpsetype);
armveil.bos:    corpsetype = 3 ;
armveil.bos:    return corpsetype;
armvp.bos:      set ARMORED to 0;
armvp.bos:      set ARMORED to 1;
armvp.bos:      set YARD_OPEN to 1;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 1;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set YARD_OPEN to 0;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 0;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set INBUILDSTANCE to 1;
armvp.bos:      set INBUILDSTANCE to 0;
armvp.bos:      set ARMORED to 1;
armvp.bos:      set-signal-mask SIG_ACTIVATE;
armvp.bos:      set-signal-mask 0;
armvp.bos:Killed(severity, corpsetype)
armvp.bos:              corpsetype = 1 ;
armvp.bos:              return(corpsetype);
armvp.bos:              corpsetype = 2 ;
armvp.bos:              return(corpsetype);
armvp.bos:              corpsetype = 3 ;
armvp.bos:              return(corpsetype);
armvp.bos:      corpsetype = 3 ;
armvp.bos:      return corpsetype;
armvulc.bos:    set-signal-mask SIG_AIM;
armvulc.bos:Killed(severity, corpsetype)
armvulc.bos:            corpsetype = 1 ;
armvulc.bos:            return(corpsetype);
armvulc.bos:            corpsetype = 2 ;
armvulc.bos:            return(corpsetype);
armvulc.bos:            corpsetype = 3 ;
armvulc.bos:            return(corpsetype);
armvulc.bos:    corpsetype = 3 ;
armvulc.bos:    return corpsetype;
armwar.bos:     set-signal-mask SIG_WALK;
armwar.bos:SetMaxReloadTime(Func_Var_1)
armwar.bos:SetStunned(State)
armwar.bos:     set-signal-mask SIG_AIM;
armwar.bos:Killed(severity, corpsetype)
armwar.bos:             corpsetype = 1 ;
armwar.bos:             return(corpsetype);
armwar.bos:             corpsetype = 2 ;
armwar.bos:             return(corpsetype);
armwar.bos:             corpsetype = 3 ;
armwar.bos:             return(corpsetype);
armwar.bos:     corpsetype = 3 ;
armwar.bos:     return corpsetype;
Binary file armwar.cob matches
armwin.bos:SetSpeed(windSpd) //called every 450 frames
armwin.bos:                     set ACTIVATION to 100;
armwin.bos:SetDirection(windDir) //called every 450 frames
armwin.bos:SetStunned(State)
armwin.bos:             set ACTIVATION to 0;
armwin.bos:             set ACTIVATION to 100;
armwin.bos:Killed(severity, corpsetype)
armwin.bos:             corpsetype = 1 ;
armwin.bos:             return(corpsetype);
armwin.bos:             corpsetype = 2 ;
armwin.bos:             return(corpsetype);
armwin.bos:             corpsetype = 3 ;
armwin.bos:             return(corpsetype);
armwin.bos:     corpsetype = 3 ;
armwin.bos:     return corpsetype;
Binary file armwin.cob matches
armyork.bos:SetMaxReloadTime(Func_Var_1)
armyork.bos:    set-signal-mask 0;
armyork.bos:SetStunned(State)
armyork.bos:    set-signal-mask SIG_AIM_3;
armyork.bos:Killed(severity, corpsetype)
armyork.bos:            corpsetype = 1 ;
armyork.bos:            return(corpsetype);
armyork.bos:            corpsetype = 2 ;
armyork.bos:            return(corpsetype);
armyork.bos:            corpsetype = 3 ;
armyork.bos:            return(corpsetype);
armyork.bos:    corpsetype = 3 ;
armyork.bos:    return corpsetype;
Binary file armyork.cob matches
armzeus.bos:SetStunned(State)
armzeus.bos:    set-signal-mask SIG_AIM;
armzeus.bos:Killed(severity, corpsetype)
armzeus.bos:            corpsetype = 1 ;
armzeus.bos:            return(corpsetype);
armzeus.bos:            corpsetype = 2 ;
armzeus.bos:            return(corpsetype);
armzeus.bos:            corpsetype = 3 ;
armzeus.bos:            return(corpsetype);
armzeus.bos:    corpsetype = 3 ;
armzeus.bos:    return corpsetype;
Binary file armzeus.cob matches
Binary file cob_file.pyc matches
constants.h:** EXPtype.h -- Explosion Type information and GET/SET constants for
 scripts
constants.h:#define ACTIVATION           1  // set or get
constants.h:#define STANDINGMOVEORDERS   2  // set or get
constants.h:#define STANDINGFIREORDERS   3  // set or get
constants.h:#define INBUILDSTANCE        5  // set or get
constants.h:#define BUSY                 6  // set or get (used by misc. special
 case missions like transport ships)
constants.h:#define YARD_OPEN           18  // set or get (change which plots we
 occupy when building opens and closes)
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define ARMORED             20  // set or get
constants.h:#define UPRIGHT                   79 // set or get
constants.h:#define LOS_RADIUS                85 // set or get
constants.h:#define AIR_LOS_RADIUS            86 // set or get
constants.h:#define RADAR_RADIUS              87 // set or get
constants.h:#define JAMMER_RADIUS             88 // set or get
constants.h:#define SONAR_RADIUS              89 // set or get
constants.h:#define SONAR_JAM_RADIUS          90 // set or get
constants.h:#define SEISMIC_RADIUS            91 // set or get
constants.h:#define CURRENT_FUEL              93 // set or get
constants.h:#define SHIELD_POWER              95 // set or get
constants.h:#define STEALTH                   96 // set or get
constants.h:#define CRASHING                  97 // set or get, returns whether
aircraft isCrashing state
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
constants.h:#define CEG_DAMAGE                99 // set
constants.h:#define ALPHA_THRESHOLD          103 // set or get
constants.h:#define SET_WEAPON_UNIT_TARGET   106 // get (fake set)
constants.h:#define SET_WEAPON_GROUND_TARGET 107 // get (fake set)
constants.h:#define SONAR_STEALTH            108 // set or get
constants.h:// Indices for SET, GET, and GET_UNIT_VALUE for LUA return values
constants.h:#define FLANK_B_MODE                120 // set or get
constants.h:#define FLANK_B_DIR         121 // set or get, set is through get fo
r multiple args
constants.h:#define FLANK_B_MOBILITY_ADD        122 // set or get
constants.h:#define FLANK_B_MAX_DAMAGE  123 // set or get
constants.h:#define FLANK_B_MIN_DAMAGE  124 // set or get
constants.h:#define WEAPON_RELOADSTATE  125 // get (with fake set)  get WEAPON_R
ELOADSTATE(weaponNum)           for GET
constants.h:#define WEAPON_RELOADTIME   126 // get (with fake set)  get WEAPON_R
ELOADSTATE(-weaponNum,val)      for SET
constants.h:#define WEAPON_ACCURACY             127 // get (with fake set)
constants.h:#define WEAPON_SPRAY                128 // get (with fake set)
constants.h:#define WEAPON_RANGE                129 // get (with fake set)
constants.h:#define WEAPON_PROJECTILE_SPEED     130 // get (with fake set)
constants.h:#define WEAPON_STOCKPILE_COUNT  139 // get (with fake set)
constants.h:#define ENERGY_MAKE             140 // set or get (100*E production)

constants.h:#define METAL_MAKE              141 // set or get (100*M production)

coraak.bos:     set-signal-mask SIG_WALK;
coraak.bos:     set-signal-mask 0;
coraak.bos:     set-signal-mask 2;
coraak.bos:     set-signal-mask 4;
coraak.bos:     set-signal-mask 8;
coraak.bos:     set-signal-mask 16;
coraak.bos:     set-signal-mask 32;
coraak.bos:     set-signal-mask 64;
coraak.bos:     set-signal-mask 128;
coraak.bos:     set-signal-mask 256;
coraak.bos:     set-signal-mask 512;
coraak.bos:Killed(severity, corpsetype)
coraak.bos:             corpsetype = 1;
coraak.bos:             return (corpsetype);
coraak.bos:             corpsetype = 2;
coraak.bos:             return (corpsetype);
coraak.bos:             corpsetype = 3;
coraak.bos:             return (corpsetype);
coraak.bos:     corpsetype = 3;
coraak.bos:     return corpsetype;
coraak.lua_old: SetSignalMask(SIG_WALK)
coraak.lua_old:local function ResetLegs()
coraak.lua_old: ResetLegs()
coraak.lua_old:         SetSignalMask( SIG_AIM2)
coraak.lua_old:         SetSignalMask(math.pow(2,num))
coraak.lua_old:         -- SetSignalMask( )
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraap.bos:     set-signal-mask SIG_ACTIVATE;
coraap.bos:     set-signal-mask 0;
coraap.bos:Killed(severity, corpsetype)
coraap.bos:             corpsetype = 1 ;
coraap.bos:             return(corpsetype);
coraap.bos:             corpsetype = 2 ;
coraap.bos:             return(corpsetype);
coraap.bos:             corpsetype = 3 ;
coraap.bos:             return(corpsetype);
coraap.bos:     corpsetype = 3 ;
coraap.bos:     return corpsetype;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
coraca.bos:Killed(severity, corpsetype)
coraca.bos:             corpsetype = 1 ;
coraca.bos:             return(corpsetype);
coraca.bos:             corpsetype = 2 ;
coraca.bos:             return(corpsetype);
coraca.bos:             corpsetype = 3 ;
coraca.bos:             return(corpsetype);
coraca.bos:     corpsetype = 3 ;
coraca.bos:     return corpsetype;
corack.bos:     set-signal-mask SIG_WALK;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
corack.bos:     set-signal-mask SIG_BUILD;
corack.bos:     set-signal-mask 0;
corack.bos:Killed(severity, corpsetype)
corack.bos:             corpsetype = 1 ;
corack.bos:             return(corpsetype);
corack.bos:             corpsetype = 2 ;
corack.bos:             return(corpsetype);
corack.bos:             corpsetype = 3 ;
corack.bos:             return(corpsetype);
corack.bos:     corpsetype = 3 ;
corack.bos:     return corpsetype;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set-signal-mask SIG_MOVE;
coracsub.bos:   set INBUILDSTANCE to 1;
coracsub.bos:   set-signal-mask SIG_BUILD;
coracsub.bos:   set-signal-mask 0;
coracsub.bos:Killed(severity, corpsetype)
coracsub.bos:           corpsetype = 1 ;
coracsub.bos:           return(corpsetype);
coracsub.bos:           corpsetype = 2 ;
coracsub.bos:           return(corpsetype);
coracsub.bos:           corpsetype = 3 ;
coracsub.bos:           return(corpsetype);
coracsub.bos:   corpsetype = 3 ;
coracsub.bos:   return corpsetype;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:setSFXoccupy(state)
coracv.bos:     set INBUILDSTANCE to 1;
coracv.bos:     set-signal-mask SIG_BUILD;
coracv.bos:     set-signal-mask 0;
coracv.bos:Killed(severity, corpsetype)
coracv.bos:             corpsetype = 1 ;
coracv.bos:             return(corpsetype);
coracv.bos:             corpsetype = 2 ;
coracv.bos:             return(corpsetype);
coracv.bos:             corpsetype = 3 ;
coracv.bos:             return(corpsetype);
coracv.bos:     corpsetype = 3 ;
coracv.bos:     return corpsetype;
Binary file coracv.cob matches
coradvsol.bos:// OffsetToScriptCodeIndexArray        54c
coradvsol.bos:// OffsetToScriptNameOffsetArray       568
coradvsol.bos:// OffsetToPieceNameOffsetArray        584
coradvsol.bos:// OffsetToScriptCode                  2c
coradvsol.bos:// OffsetToNameArray                   59c
coradvsol.bos:// OffsetToFirstName                   59c
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    78:*/       set-signal-mask 2;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
coradvsol.bos:Killed(severity, corpsetype)
coradvsol.bos:          corpsetype = 1 ;
coradvsol.bos:          return(corpsetype);
coradvsol.bos:          corpsetype = 2 ;
coradvsol.bos:          return(corpsetype);
coradvsol.bos:          corpsetype = 3 ;
coradvsol.bos:          return(corpsetype);
coradvsol.bos:  corpsetype = 3 ;
coradvsol.bos:  return corpsetype;
corafus.bos:// OffsetToScriptCodeIndexArray        730
corafus.bos:// OffsetToScriptNameOffsetArray       758
corafus.bos:// OffsetToPieceNameOffsetArray        780
corafus.bos:// OffsetToScriptCode                  2c
corafus.bos:// OffsetToNameArray                   794
corafus.bos:// OffsetToFirstName                   794
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
corafus.bos:Killed(severity, corpsetype)
corafus.bos:/*   133:*/         corpsetype = 1;
corafus.bos:/*   14c:*/         return (corpsetype);
corafus.bos:/*   156:*/         corpsetype = 2;
corafus.bos:/*   16f:*/         return (corpsetype);
corafus.bos:/*   179:*/         corpsetype = 3;
corafus.bos:/*   19b:*/         return (corpsetype);
corafus.bos:/*   19e:*/ corpsetype = 3;
corafus.bos:/*   1c0:*/ return (corpsetype);
corageo.lua:            return 1 -- corpsetype
corageo.lua:            return 2 -- corpsetype
corageo.lua:            return 3 -- corpsetype
corah.bos:              // Set values for tilt
corah.bos:      set-signal-mask SIG_MOVE;
corah.bos:setSFXoccupy(Func_Var_1)
corah.bos:SetStunned(State)
corah.bos:      set-signal-mask 2;
corah.bos:Killed(severity, corpsetype)
corah.bos:              corpsetype = 1 ;
corah.bos:              return(corpsetype);
corah.bos:              corpsetype = 2 ;
corah.bos:              return(corpsetype);
corah.bos:              corpsetype = 3 ;
corah.bos:              return(corpsetype);
corah.bos:      corpsetype = 3 ;
corah.bos:      return corpsetype;
Binary file corah.cob matches
corak.bos:      set-signal-mask SIG_WALK;
corak.bos:      set-signal-mask SIG_WALK | SIG_AIM; //you might need this
corak.bos:SetStunned(State)
corak.bos:      set-signal-mask SIG_AIM;
corak.bos:Killed(severity, corpsetype)
corak.bos:              corpsetype = 1 ;
corak.bos:              return(corpsetype);
corak.bos:              corpsetype = 2 ;
corak.bos:              return(corpsetype);
corak.bos:              corpsetype = 3 ;
corak.bos:              return(corpsetype);
corak.bos:      corpsetype = 3 ;
corak.bos:      return corpsetype;
Binary file corak.cob matches
coralab.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE);
coralab.lua:    UnitScript.SetUnitValue(COB.INBUILDSTANCE, 1);
coralab.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE);
coralab.lua:    UnitScript.SetUnitValue(COB.INBUILDSTANCE, 0);
coralab.lua:    UnitScript.SetSignalMask(SIG_ACTIVATE);
coralab.lua:    UnitScript.SetSignalMask(SIG_BUILD);
coralab.lua:    local corpsetype;
coralab.lua:            corpsetype = 1;
coralab.lua:            return corpsetype;
coralab.lua:            corpsetype = 2;
coralab.lua:            return corpsetype;
coralab.lua:            corpsetype = 3;
coralab.lua:            return corpsetype;
coralab.lua:    corpsetype = 1;
coralab.lua:    return corpsetype;
coramph.bos:    set-signal-mask SIG_MOVE;
coramph.bos:SetMaxReloadTime(Func_Var_1)
coramph.bos:SetStunned(State)
coramph.bos:    set-signal-mask SIG_AIM;
coramph.bos:Killed(severity, corpsetype)
coramph.bos:            corpsetype = 1 ;
coramph.bos:            return(corpsetype);
coramph.bos:            corpsetype = 2 ;
coramph.bos:            return(corpsetype);
coramph.bos:            corpsetype = 3 ;
coramph.bos:            return(corpsetype);
coramph.bos:    corpsetype = 3 ;
coramph.bos:    return corpsetype;
Binary file coramph.cob matches
coramsub.bos:// OffsetToScriptCodeIndexArray        bc0
coramsub.bos:// OffsetToScriptNameOffsetArray       c00
coramsub.bos:// OffsetToPieceNameOffsetArray        c40
coramsub.bos:// OffsetToScriptCode                  2c
coramsub.bos:// OffsetToNameArray                   c78
coramsub.bos:// OffsetToFirstName                   c78
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
coramsub.bos:/*   176:*/        set-signal-mask SIG_ACTIVATE;
coramsub.bos:/*   181:*/        set-signal-mask 0;
coramsub.bos:Killed(severity, corpsetype)
coramsub.bos:           corpsetype = 1 ;
coramsub.bos:           return(corpsetype);
coramsub.bos:           corpsetype = 2 ;
coramsub.bos:           return(corpsetype);
coramsub.bos:           corpsetype = 3 ;
coramsub.bos:           return(corpsetype);
coramsub.bos:   corpsetype = 3 ;
coramsub.bos:   return corpsetype;
corap.bos:// OffsetToScriptCodeIndexArray        11f0
corap.bos:// OffsetToScriptNameOffsetArray       123c
corap.bos:// OffsetToPieceNameOffsetArray        1288
corap.bos:// OffsetToScriptCode                  2c
corap.bos:// OffsetToNameArray                   12ac
corap.bos:// OffsetToFirstName                   12ac
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
corap.bos:/*   2af:*/   set-signal-mask SIG_ACTIVATE;
corap.bos:/*   2ba:*/   set-signal-mask 0;
corap.bos:Killed(severity, corpsetype)
corap.bos:              corpsetype = 1 ;
corap.bos:              return(corpsetype);
corap.bos:              corpsetype = 2 ;
corap.bos:              return(corpsetype);
corap.bos:              corpsetype = 3 ;
corap.bos:              return(corpsetype);
corap.bos:      corpsetype = 3 ;
corap.bos:      return corpsetype;
corape.bos://SetMaxReloadTime(Func_Var_1)
corape.bos://SetStunned(State)
corape.bos:     set-signal-mask SIG_AIM;
corape.bos:     set-signal-mask 0;
corape.bos:     set-signal-mask SIG_AIM;
corape.bos:Killed(severity, corpsetype)
corape.bos:             corpsetype = 1 ;
corape.bos:             return(corpsetype);
corape.bos:             corpsetype = 2 ;
corape.bos:             return(corpsetype);
corape.bos:             corpsetype = 3 ;
corape.bos:             return(corpsetype);
corape.bos:     corpsetype = 3 ;
corape.bos:     return corpsetype;
corarad.bos:// OffsetToScriptCodeIndexArray        624
corarad.bos:// OffsetToScriptNameOffsetArray       64c
corarad.bos:// OffsetToPieceNameOffsetArray        674
corarad.bos:// OffsetToScriptCode                  2c
corarad.bos:// OffsetToNameArray                   680
corarad.bos:// OffsetToFirstName                   680
corarad.bos:Killed(severity, corpsetype)
corarad.bos:            corpsetype = 1 ;
corarad.bos:            return(corpsetype);
corarad.bos:            corpsetype = 2 ;
corarad.bos:            return(corpsetype);
corarad.bos:            corpsetype = 3 ;
corarad.bos:            return(corpsetype);
corarad.bos:    corpsetype = 3 ;
corarad.bos:    return corpsetype;
corarch.bos:SetMaxReloadTime(Func_Var_1)
corarch.bos:    set-signal-mask 0;
corarch.bos:SetStunned(State)
corarch.bos:    set-signal-mask SIG_MOVE;
corarch.bos:    set-signal-mask SIG_AIM_2;
corarch.bos:    set-signal-mask SIG_AIM_3;
corarch.bos:Killed(severity, corpsetype)
corarch.bos:            corpsetype = 1 ;
corarch.bos:            return(corpsetype);
corarch.bos:            corpsetype = 2 ;
corarch.bos:            return(corpsetype);
corarch.bos:            corpsetype = 3 ;
corarch.bos:            return(corpsetype);
corarch.bos:    corpsetype = 3 ;
corarch.bos:    return corpsetype;
Binary file corarch.cob matches
corason.bos:Killed(severity, corpsetype)
corason.bos:            corpsetype = 1 ;
corason.bos:            return(corpsetype);
corason.bos:            corpsetype = 2 ;
corason.bos:            return(corpsetype);
corason.bos:            corpsetype = 3 ;
corason.bos:            return(corpsetype);
corason.bos:    corpsetype = 3 ;
corason.bos:    return corpsetype;
corasp.bos:// OffsetToScriptCodeIndexArray        a94
corasp.bos:// OffsetToScriptNameOffsetArray       aac
corasp.bos:// OffsetToPieceNameOffsetArray        ac4
corasp.bos:// OffsetToScriptCode                  2c
corasp.bos:// OffsetToNameArray                   b04
corasp.bos:// OffsetToFirstName                   b04
corasp.bos:Killed(severity, corpsetype)
corasp.bos:             corpsetype = 1 ;
corasp.bos:             return(corpsetype);
corasp.bos:             corpsetype = 2 ;
corasp.bos:             return(corpsetype);
corasp.bos:             corpsetype = 3 ;
corasp.bos:             return(corpsetype);
corasp.bos:     corpsetype = 3 ;
corasp.bos:     return corpsetype;
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasy.bos:     set-signal-mask SIG_ACTIVATE;
corasy.bos:     set-signal-mask 0;
corasy.bos:Killed(severity, corpsetype)
corasy.bos:             corpsetype = 1 ;
corasy.bos:             return(corpsetype);
corasy.bos:             corpsetype = 2 ;
corasy.bos:             return(corpsetype);
corasy.bos:             corpsetype = 3 ;
corasy.bos:             return(corpsetype);
corasy.bos:     corpsetype = 3 ;
corasy.bos:     return corpsetype;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
corasye.bos:    set-signal-mask SIG_ACTIVATE;
corasye.bos:    set-signal-mask 0;
corasye.bos:Killed(severity, corpsetype)
corasye.bos:            corpsetype = 1;
corasye.bos:            return (corpsetype);
corasye.bos:            corpsetype = 2;
corasye.bos:            return (corpsetype);
corasye.bos:            corpsetype = 3;
corasye.bos:            return (corpsetype);
corasye.bos:    corpsetype = 3;
corasye.bos:    return (corpsetype);
coratl.bos:     set-signal-mask SIG_AIM;
coratl.bos:Killed(severity, corpsetype)
coratl.bos:             corpsetype = 1 ;
coratl.bos:             return(corpsetype);
coratl.bos:             corpsetype = 2 ;
coratl.bos:             return(corpsetype);
coratl.bos:             corpsetype = 3 ;
coratl.bos:             return(corpsetype);
coratl.bos:     corpsetype = 3 ;
coratl.bos:     return corpsetype;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
coravp.bos:     set-signal-mask SIG_ACTIVATE;
coravp.bos:     set-signal-mask 0;
coravp.bos:Killed(severity, corpsetype)
coravp.bos:             corpsetype = 1 ;
coravp.bos:             return(corpsetype);
coravp.bos:             corpsetype = 2 ;
coravp.bos:             return(corpsetype);
coravp.bos:             corpsetype = 3 ;
coravp.bos:             return(corpsetype);
coravp.bos:     corpsetype = 3 ;
coravp.bos:     return corpsetype;
corawac.bos:Killed(severity, corpsetype)
corawac.bos:    corpsetype = 1 ;
corawac.bos:            return(corpsetype);
corawac.bos:    corpsetype = 2 ;
corawac.bos:            return(corpsetype);
corawac.bos:    corpsetype = 3 ;
corawac.bos:            return(corpsetype);
corawac.bos:    corpsetype = 3 ;
corawac.bos:            return corpsetype;
corban.bos:setSFXoccupy(state)
corban.bos:SetMaxReloadTime(Func_Var_1)
corban.bos:SetStunned(State)
corban.bos:     set-signal-mask SIG_AIM;
corban.bos:Killed(severity, corpsetype)
corban.bos:             corpsetype = 1 ;
corban.bos:             return(corpsetype);
corban.bos:             corpsetype = 2 ;
corban.bos:             return(corpsetype);
corban.bos:             corpsetype = 3 ;
corban.bos:             return(corpsetype);
corban.bos:     corpsetype = 3 ;
corban.bos:     return corpsetype;
Binary file corban.cob matches
corbats.bos:    set-signal-mask 16;
corbats.bos:SetMaxReloadTime(Func_Var_1)
corbats.bos:SetStunned(State)
corbats.bos:    set-signal-mask SIG_AIM;
corbats.bos:    set-signal-mask 0;
corbats.bos:    set-signal-mask SIG_MOVE;
corbats.bos:    set-signal-mask SIG_AIM_2;
corbats.bos:Killed(severity, corpsetype)
corbats.bos:            corpsetype = 1 ;
corbats.bos:            return(corpsetype);
corbats.bos:            corpsetype = 2 ;
corbats.bos:            return(corpsetype);
corbats.bos:            corpsetype = 3 ;
corbats.bos:            return(corpsetype);
corbats.bos:    corpsetype = 3 ;
corbats.bos:    return corpsetype;
Binary file corbats.cob matches
corbhmth.bos:   set-signal-mask 4;
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corbhmth.bos:   set-signal-mask 0;
corbhmth.bos:ResetFiretube()
corbhmth.bos:   set-signal-mask SIG_AIM;
corbhmth.bos:   set-signal-mask SIG_AIM;
corbhmth.bos:   start-script ResetFiretube();
corbhmth.bos:   set-signal-mask SIG_AIM;
corbhmth.bos:Killed(severity, corpsetype)
corbhmth.bos:           corpsetype = 1 ;
corbhmth.bos:           return(corpsetype);
corbhmth.bos:           corpsetype = 2 ;
corbhmth.bos:           return(corpsetype);
corbhmth.bos:           corpsetype = 3 ;
corbhmth.bos:           return(corpsetype);
corbhmth.bos:   corpsetype = 3 ;
corbhmth.bos:   return corpsetype;
Binary file corbhmth.cob matches
corblackhy.bos: set-signal-mask 16;
corblackhy.bos: set ARMORED to 1;
corblackhy.bos:SetMaxReloadTime(Func_Var_1)
corblackhy.bos:SetStunned(State)
corblackhy.bos: set-signal-mask SIG_MOVE;
corblackhy.bos: set-signal-mask SIG_AIM;
corblackhy.bos: set-signal-mask 2;
corblackhy.bos: set-signal-mask 4;
corblackhy.bos: set-signal-mask 8;
corblackhy.bos: set-signal-mask 16;
corblackhy.bos: set-signal-mask 32;
corblackhy.bos: set-signal-mask 64;
corblackhy.bos:Killed(severity, corpsetype)
corblackhy.bos:         corpsetype = 1 ;
corblackhy.bos:         return(corpsetype);
corblackhy.bos:         corpsetype = 2 ;
corblackhy.bos:         return(corpsetype);
corblackhy.bos:         corpsetype = 3 ;
corblackhy.bos:         return(corpsetype);
corblackhy.bos: corpsetype = 3 ;
corblackhy.bos: return corpsetype;
Binary file corblackhy.cob matches
corbuzz.lua:    SetSignalMask( SIG_AIM)
corbuzz.lua:                    return 1 -- corpsetype
corbuzz.lua:                    return 2 -- corpsetype
corbuzz.lua:                    return 3 -- corpsetype
corbw.bos:      set-signal-mask SIG_AIM;
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corbw.bos:Killed(severity, corpsetype)
corbw.bos:              corpsetype = 1 ;
corbw.bos:              return(corpsetype);
corbw.bos:              corpsetype = 2 ;
corbw.bos:              return(corpsetype);
corbw.bos:              corpsetype = 3 ;
corbw.bos:              return(corpsetype);
corbw.bos:      corpsetype = 3 ;
corbw.bos:      return corpsetype;
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
corca.bos:Killed(severity, corpsetype)
corca.bos:              corpsetype = 1 ;
corca.bos:              return(corpsetype);
corca.bos:              corpsetype = 2 ;
corca.bos:              return(corpsetype);
corca.bos:              corpsetype = 3 ;
corca.bos:              return(corpsetype);
corca.bos:      corpsetype = 3 ;
corca.bos:      return corpsetype;
corcan.bos:     set-signal-mask SIG_WALK;
corcan.bos:SetMaxReloadTime(Func_Var_1)
corcan.bos:SetStunned(State)
corcan.bos:     set-signal-mask SIG_AIM;
corcan.bos:Killed(severity, corpsetype)
corcan.bos:             corpsetype = 1 ;
corcan.bos:             return(corpsetype);
corcan.bos:             corpsetype = 2 ;
corcan.bos:             return(corpsetype);
corcan.bos:             corpsetype = 3 ;
corcan.bos:             return(corpsetype);
corcan.bos:     corpsetype = 3 ;
corcan.bos:     return corpsetype;
Binary file corcan.cob matches
corcarry.bos:   set-signal-mask SIG_MOVE;
corcarry.bos:   set-signal-mask 0;
corcarry.bos:SetStunned(State)
corcarry.bos:   set-signal-mask SIG_AIM;
corcarry.bos:Killed(severity, corpsetype)
corcarry.bos:           corpsetype = 1 ;
corcarry.bos:           return(corpsetype);
corcarry.bos:           corpsetype = 2 ;
corcarry.bos:           return(corpsetype);
corcarry.bos:           corpsetype = 3 ;
corcarry.bos:           return(corpsetype);
corcarry.bos:   corpsetype = 3 ;
corcarry.bos:   return corpsetype;
Binary file corcarry.cob matches
corcat.bos:     set-signal-mask SIG_WALK;
corcat.bos:SetStunned(State)
corcat.bos:     set-signal-mask SIG_AIM;
corcat.bos:Killed(severity, corpsetype)
corcat.bos:             corpsetype = 1 ;
corcat.bos:             return(corpsetype);
corcat.bos:             corpsetype = 2 ;
corcat.bos:             return(corpsetype);
corcat.bos:             corpsetype = 3 ;
corcat.bos:             return(corpsetype);
corcat.bos:     corpsetype = 3 ;
corcat.bos:     return corpsetype;
Binary file corcat.cob matches
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:              // Set values for tilt
corch.bos:      set-signal-mask SIG_MOVE;
corch.bos:setSFXoccupy(state)
corch.bos:      set INBUILDSTANCE to 1;
corch.bos:      set-signal-mask SIG_BUILD;
corch.bos:      set-signal-mask 0;
corch.bos:Killed(severity, corpsetype)
corch.bos:              corpsetype = 1 ;
corch.bos:              return(corpsetype);
corch.bos:              corpsetype = 2 ;
corch.bos:              return(corpsetype);
corch.bos:              corpsetype = 3 ;
corch.bos:              return(corpsetype);
corch.bos:      corpsetype = 3 ;
corch.bos:      return corpsetype;
Binary file corch.cob matches
corck.bos:      set-signal-mask SIG_WALK;
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
corck.bos:      set-signal-mask SIG_BUILD;
corck.bos:      set-signal-mask 0;
corck.bos:Killed(severity, corpsetype)
corck.bos:              corpsetype = 1 ;
corck.bos:              return(corpsetype);
corck.bos:              corpsetype = 2 ;
corck.bos:              return(corpsetype);
corck.bos:              corpsetype = 3 ;
corck.bos:              return(corpsetype);
corck.bos:      corpsetype = 3 ;
corck.bos:      return corpsetype;
corcom.bos:     set-signal-mask SIG_WALK;
corcom.bos:     set-signal-mask SIG_AIM;
corcom.bos:     set-signal-mask SIG_AIM;
corcom.bos:     set-signal-mask SIG_AIM;
corcom.bos:     set-signal-mask SIG_AIM;
corcom.bos:     //set-signal-mask SIG_AIM;
corcom.bos:     set INBUILDSTANCE to 1;
corcom.bos:     set-signal-mask SIG_AIM;
corcom.bos:     set INBUILDSTANCE to 0;
corcom.bos:     set-signal-mask SIG_AIM;
corcom.bos:Killed( severity, corpsetype )
corcom.bos:     corpsetype = 1;
corcom.bos:     return(corpsetype);
corcom_lus.lua: SetSignalMask(SIG_WALK)
corcom_lus.lua: SetSignalMask(SIG_AIM)
corcom_lus.lua:                 SetSignalMask(SIG_AIM)
corcom_lus.lua:                 SetSignalMask(SIG_AIM)
corcom_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, true)
corcom_lus.lua: Spring.UnitScript.SetUnitValue(COB.INBUILDSTANCE, false)
corcom_lus.lua: SetSignalMask(SIG_AIM)
corcom_lus.lua: SetSignalMask(SIG_AIM)
corcomboss.bos: set-signal-mask SIG_WALK;
corcomboss.bos: set-signal-mask SIG_AIM;
corcomboss.bos: set-signal-mask SIG_AIM;
corcomboss.bos: set-signal-mask SIG_AIM;
corcomboss.bos: set-signal-mask SIG_AIM;
corcomboss.bos: //set-signal-mask SIG_AIM;
corcomboss.bos: set INBUILDSTANCE to 1;
corcomboss.bos: set-signal-mask SIG_AIM;
corcomboss.bos: set INBUILDSTANCE to 0;
corcomboss.bos: set-signal-mask SIG_AIM;
corcomboss.bos:Killed( severity, corpsetype )
corcomboss.bos: corpsetype = 1;
corcomboss.bos: return(corpsetype);
corcrash.bos:   set-signal-mask SIG_WALK;
corcrash.bos:SetMaxReloadTime(Func_Var_1)
corcrash.bos:SetStunned(State)
corcrash.bos:   set-signal-mask SIG_AIM_3;
corcrash.bos:Killed(severity, corpsetype)
corcrash.bos:           corpsetype = 1 ;
corcrash.bos:           return(corpsetype);
corcrash.bos:           corpsetype = 2 ;
corcrash.bos:           return(corpsetype);
corcrash.bos:           corpsetype = 3 ;
corcrash.bos:           return(corpsetype);
corcrash.bos:   corpsetype = 3 ;
corcrash.bos:   return corpsetype;
Binary file corcrash.cob matches
corcrus.bos:SetMaxReloadTime(Func_Var_1)
corcrus.bos:    set-signal-mask 0;
corcrus.bos:SetStunned(State)
corcrus.bos:    set-signal-mask 0;
corcrus.bos:    set-signal-mask SIG_MOVE;
corcrus.bos:    set-signal-mask SIG_AIM_2;
corcrus.bos:    set-signal-mask SIG_AIM;
corcrus.bos:Killed(severity, corpsetype)
corcrus.bos:            corpsetype = 1 ;
corcrus.bos:            return(corpsetype);
corcrus.bos:            corpsetype = 2 ;
corcrus.bos:            return(corpsetype);
corcrus.bos:            corpsetype = 3 ;
corcrus.bos:            return(corpsetype);
corcrus.bos:    corpsetype = 3 ;
corcrus.bos:    return corpsetype;
Binary file corcrus.cob matches
corcrw.bos:SetMaxReloadTime(Func_Var_1)
corcrw.bos:SetStunned(State)
corcrw.bos:     set-signal-mask SIG_AIM;
corcrw.bos:     set-signal-mask SIG_AIM_2;
corcrw.bos:     set-signal-mask SIG_AIM_3;
corcrw.bos:Killed(severity, corpsetype)
corcrw.bos:             corpsetype = 1 ;
corcrw.bos:             return(corpsetype);
corcrw.bos:             corpsetype = 2 ;
corcrw.bos:             return(corpsetype);
corcrw.bos:             corpsetype = 3 ;
corcrw.bos:             return(corpsetype);
corcrw.bos:     corpsetype = 3 ;
corcrw.bos:     return corpsetype;
Binary file corcrw.cob matches
corcs.bos:      set-signal-mask SIG_MOVE;
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcs.bos:Killed(severity, corpsetype)
corcs.bos:              corpsetype = 1 ;
corcs.bos:              return(corpsetype);
corcs.bos:              corpsetype = 2 ;
corcs.bos:              return(corpsetype);
corcs.bos:              corpsetype = 3 ;
corcs.bos:              return(corpsetype);
corcs.bos:      corpsetype = 3 ;
corcs.bos:      return corpsetype;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
corcsa.bos:Killed(severity, corpsetype)
corcsa.bos:             corpsetype = 1 ;
corcsa.bos:             return(corpsetype);
corcsa.bos:             corpsetype = 2 ;
corcsa.bos:             return(corpsetype);
corcsa.bos:             corpsetype = 3 ;
corcsa.bos:             return(corpsetype);
corcsa.bos:     corpsetype = 3 ;
corcsa.bos:     return corpsetype;
corcut.bos:     set-signal-mask 0;
corcut.bos:SetStunned(State)
corcut.bos:setSFXoccupy(Func_Var_1)
corcut.bos:Killed(severity, corpsetype)
corcut.bos:             corpsetype = 1 ;
corcut.bos:             return(corpsetype);
corcut.bos:             corpsetype = 2 ;
corcut.bos:             return(corpsetype);
corcut.bos:             corpsetype = 3 ;
corcut.bos:             return(corpsetype);
corcut.bos:     corpsetype = 3 ;
corcut.bos:     return corpsetype;
Binary file corcut.cob matches
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
corcv.bos:      set-signal-mask SIG_BUILD;
corcv.bos:      set-signal-mask 0;
corcv.bos:Killed(severity, corpsetype)
corcv.bos:              corpsetype = 1 ;
corcv.bos:              return(corpsetype);
corcv.bos:              corpsetype = 2 ;
corcv.bos:              return(corpsetype);
corcv.bos:              corpsetype = 3 ;
corcv.bos:              return(corpsetype);
corcv.bos:      corpsetype = 3 ;
corcv.bos:      return corpsetype;
cordl.bos:// OffsetToScriptCodeIndexArray        77c
cordl.bos:// OffsetToScriptNameOffsetArray       79c
cordl.bos:// OffsetToPieceNameOffsetArray        7bc
cordl.bos:// OffsetToScriptCode                  2c
cordl.bos:// OffsetToNameArray                   7cc
cordl.bos:// OffsetToFirstName                   7cc
cordl.bos:/*    95:*/   set-signal-mask SIG_AIM;
cordl.bos:Killed(severity, corpsetype)
cordl.bos:              corpsetype = 1 ;
cordl.bos:              return(corpsetype);
cordl.bos:              corpsetype = 2 ;
cordl.bos:              return(corpsetype);
cordl.bos:              corpsetype = 3 ;
cordl.bos:              return(corpsetype);
cordl.bos:      corpsetype = 3 ;
cordl.bos:      return corpsetype;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
cordoom.bos:SetMaxReloadTime(Func_Var_1)
cordoom.bos:    set-signal-mask SIG_AIM;
cordoom.bos:    set-signal-mask SIG_AIM_2;
cordoom.bos:    set-signal-mask SIG_AIM;
cordoom.bos:    set-signal-mask SIG_AIM_2;
cordoom.bos:    set-signal-mask SIG_AIM_3;
cordoom.bos:Killed(severity, corpsetype)
cordoom.bos:            corpsetype = 1 ;
cordoom.bos:            return(corpsetype);
cordoom.bos:            corpsetype = 2 ;
cordoom.bos:            return(corpsetype);
cordoom.bos:            corpsetype = 3 ;
cordoom.bos:            return(corpsetype);
cordoom.bos:    corpsetype = 3 ;
cordoom.bos:    return corpsetype;
Binary file cordoom.cob matches
cordrag.bos:// OffsetToScriptCodeIndexArray        38
cordrag.bos:// OffsetToScriptNameOffsetArray       3c
cordrag.bos:// OffsetToPieceNameOffsetArray        40
cordrag.bos:// OffsetToScriptCode                  2c
cordrag.bos:// OffsetToNameArray                   40
cordrag.bos:// OffsetToFirstName                   40
corenaa.bos:SetMaxReloadTime(Func_Var_1)
corenaa.bos:SetStunned(State)
corenaa.bos:    set-signal-mask SIG_AIM;
corenaa.bos:Killed(severity, corpsetype)
corenaa.bos:            corpsetype = 1 ;
corenaa.bos:            return(corpsetype);
corenaa.bos:            corpsetype = 2 ;
corenaa.bos:            return(corpsetype);
corenaa.bos:            corpsetype = 3 ;
corenaa.bos:            return(corpsetype);
corenaa.bos:    corpsetype = 3 ;
corenaa.bos:    return corpsetype;
Binary file corenaa.cob matches
corerad.bos:SetStunned(State)
corerad.bos:    set-signal-mask SIG_AIM;
corerad.bos:            set CHANGE_TARGET to 1;
corerad.bos:Killed(severity, corpsetype)
corerad.bos:            corpsetype = 1 ;
corerad.bos:            return(corpsetype);
corerad.bos:            corpsetype = 2 ;
corerad.bos:            return(corpsetype);
corerad.bos:            corpsetype = 3 ;
corerad.bos:            return(corpsetype);
corerad.bos:    corpsetype = 3 ;
corerad.bos:    return corpsetype;
Binary file corerad.cob matches
corestor.bos:// OffsetToScriptCodeIndexArray        3e8
corestor.bos:// OffsetToScriptNameOffsetArray       3f8
corestor.bos:// OffsetToPieceNameOffsetArray        408
corestor.bos:// OffsetToScriptCode                  2c
corestor.bos:// OffsetToNameArray                   414
corestor.bos:// OffsetToFirstName                   414
corestor.bos:Killed(severity, corpsetype)
corestor.bos:           corpsetype = 1 ;
corestor.bos:           return(corpsetype);
corestor.bos:           corpsetype = 2 ;
corestor.bos:           return(corpsetype);
corestor.bos:           corpsetype = 3 ;
corestor.bos:           return(corpsetype);
corestor.bos:   corpsetype = 3 ;
corestor.bos:   return corpsetype;
coresupp.bos:SetMaxReloadTime(Func_Var_1)
coresupp.bos:SetStunned(State)
coresupp.bos:   set-signal-mask SIG_MOVE;
coresupp.bos:   set-signal-mask SIG_AIM;
coresupp.bos:   set-signal-mask SIG_AIM_2;
coresupp.bos:Killed(severity, corpsetype)
coresupp.bos:           corpsetype = 1 ;
coresupp.bos:           return(corpsetype);
coresupp.bos:           corpsetype = 2 ;
coresupp.bos:           return(corpsetype);
coresupp.bos:           corpsetype = 3 ;
coresupp.bos:           return(corpsetype);
coresupp.bos:   corpsetype = 3 ;
coresupp.bos:   return corpsetype;
Binary file coresupp.cob matches
coreter.bos:            set ACTIVATION to 0;
coreter.bos:SetStunned(State)
coreter.bos:            set-signal-mask 2;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
coreter.bos:Killed(severity, corpsetype)
coreter.bos:            corpsetype = 1 ;
coreter.bos:            return(corpsetype);
coreter.bos:            corpsetype = 2 ;
coreter.bos:            return(corpsetype);
coreter.bos:            corpsetype = 3 ;
coreter.bos:            return(corpsetype);
coreter.bos:    corpsetype = 3 ;
coreter.bos:    return corpsetype;
Binary file coreter.cob matches
corexp.bos:SetMaxReloadTime(Func_Var_1)
corexp.bos:     set-signal-mask 0;
corexp.bos:SetStunned(State)
corexp.bos:SetSpeed(Func_Var_1)
corexp.bos:     set-signal-mask SIG_AIM;
corexp.bos:Killed(severity, corpsetype)
corexp.bos:             corpsetype = 1 ;
corexp.bos:             return(corpsetype);
corexp.bos:             corpsetype = 2 ;
corexp.bos:             return(corpsetype);
corexp.bos:             corpsetype = 3 ;
corexp.bos:             return(corpsetype);
corexp.bos:     corpsetype = 3 ;
corexp.bos:     return corpsetype;
Binary file corexp.cob matches
coreyes.bos:Killed(severity, corpsetype)
coreyes.bos:    corpsetype = 3;
coreyes.bos:    return (corpsetype);
corfast.bos:    set-signal-mask SIG_BUILD;
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set-signal-mask SIG_BUILD;
corfast.bos:    set INBUILDSTANCE to 0;
corfast.bos:Killed(severity, corpsetype)
corfast.bos:            corpsetype = 1 ;
corfast.bos:            return(corpsetype);
corfast.bos:            corpsetype = 2 ;
corfast.bos:            return(corpsetype);
corfast.bos:            corpsetype = 3 ;
corfast.bos:            return(corpsetype);
corfast.bos:    corpsetype = 3 ;
corfast.bos:    return corpsetype;
corfatf.bos:Killed(severity, corpsetype)
corfatf.bos:            corpsetype = 1 ;
corfatf.bos:            return(corpsetype);
corfatf.bos:            corpsetype = 2 ;
corfatf.bos:            return(corpsetype);
corfatf.bos:            corpsetype = 3 ;
corfatf.bos:            return(corpsetype);
corfatf.bos:    corpsetype = 3 ;
corfatf.bos:    return corpsetype;
corfav.bos:SetMaxReloadTime(Func_Var_1)
corfav.bos:SetStunned(State)
corfav.bos:     set-signal-mask SIG_AIM;
corfav.bos:Killed(severity, corpsetype)
corfav.bos:             corpsetype = 1 ;
corfav.bos:             return(corpsetype);
corfav.bos:             corpsetype = 2 ;
corfav.bos:             return(corpsetype);
corfav.bos:             corpsetype = 3 ;
corfav.bos:             return(corpsetype);
corfav.bos:     corpsetype = 3 ;
corfav.bos:     return corpsetype;
Binary file corfav.cob matches
corfgate.bos:Killed(severity, corpsetype)
corfgate.bos:           corpsetype = 1 ;
corfgate.bos:           return(corpsetype);
corfgate.bos:           corpsetype = 2 ;
corfgate.bos:           return(corpsetype);
corfgate.bos:           corpsetype = 3 ;
corfgate.bos:           return(corpsetype);
corfgate.bos:   corpsetype = 3 ;
corfgate.bos:   return corpsetype;
corfhlt.bos:    set-signal-mask SIG_AIM;
corfhlt.bos:Killed(severity, corpsetype)
corfhlt.bos:            corpsetype = 1 ;
corfhlt.bos:            return(corpsetype);
corfhlt.bos:            corpsetype = 2 ;
corfhlt.bos:            return(corpsetype);
corfhlt.bos:            corpsetype = 3 ;
corfhlt.bos:            return(corpsetype);
corfhlt.bos:    corpsetype = 3 ;
corfhlt.bos:    return corpsetype;
corfhp.bos:// OffsetToScriptCodeIndexArray        11e4
corfhp.bos:// OffsetToScriptNameOffsetArray       1230
corfhp.bos:// OffsetToPieceNameOffsetArray        127c
corfhp.bos:// OffsetToScriptCode                  2c
corfhp.bos:// OffsetToNameArray                   12a4
corfhp.bos:// OffsetToFirstName                   12a4
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
corfhp.bos:/*   28c:*/  set-signal-mask SIG_ACTIVATE;
corfhp.bos:/*   297:*/  set-signal-mask 0;
corfhp.bos:Killed(severity, corpsetype)
corfhp.bos:             corpsetype = 1 ;
corfhp.bos:             return(corpsetype);
corfhp.bos:             corpsetype = 2 ;
corfhp.bos:             return(corpsetype);
corfhp.bos:             corpsetype = 3 ;
corfhp.bos:             return(corpsetype);
corfhp.bos:     corpsetype = 3 ;
corfhp.bos:     return corpsetype;
corfink.bos:Killed(severity, corpsetype)
corfink.bos:            corpsetype = 1 ;
corfink.bos:            return(corpsetype);
corfink.bos:            corpsetype = 2 ;
corfink.bos:            return(corpsetype);
corfink.bos:            corpsetype = 3 ;
corfink.bos:            return(corpsetype);
corfink.bos:    corpsetype = 3 ;
corfink.bos:    return corpsetype;
corflak.bos:SetStunned(State)
corflak.bos:    set-signal-mask SIG_AIM;
corflak.bos:Killed(severity, corpsetype)
corflak.bos:            corpsetype = 1 ;
corflak.bos:            return(corpsetype);
corflak.bos:            corpsetype = 2 ;
corflak.bos:            return(corpsetype);
corflak.bos:            corpsetype = 3 ;
corflak.bos:            return(corpsetype);
corflak.bos:    corpsetype = 3 ;
corflak.bos:    return corpsetype;
Binary file corflak.cob matches
corfmd.bos:SetMaxReloadTime(Func_Var_1)
corfmd.bos:/*   1d4:*/  set-signal-mask SIG_AIM;
corfmd.bos:Killed(severity, corpsetype)
corfmd.bos:             corpsetype = 1 ;
corfmd.bos:             return(corpsetype);
corfmd.bos:             corpsetype = 2 ;
corfmd.bos:             return(corpsetype);
corfmd.bos:             corpsetype = 3 ;
corfmd.bos:             return(corpsetype);
corfmd.bos:     corpsetype = 3 ;
corfmd.bos:     return corpsetype;
Binary file corfmd.cob matches
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
corfmkr.bos:Killed(severity, corpsetype)
corfmkr.bos:            corpsetype = 1 ;
corfmkr.bos:            return(corpsetype);
corfmkr.bos:            corpsetype = 2 ;
corfmkr.bos:            return(corpsetype);
corfmkr.bos:            corpsetype = 3 ;
corfmkr.bos:            return(corpsetype);
corfmkr.bos:    corpsetype = 3 ;
corfmkr.bos:    return corpsetype;
corfrad.bos:Killed(severity, corpsetype)
corfrad.bos:            corpsetype = 1 ;
corfrad.bos:            return(corpsetype);
corfrad.bos:            corpsetype = 2 ;
corfrad.bos:            return(corpsetype);
corfrad.bos:            corpsetype = 3 ;
corfrad.bos:            return(corpsetype);
corfrad.bos:    corpsetype = 3 ;
corfrad.bos:    return corpsetype;
corfrock.bos:SetStunned(State)
corfrock.bos:   set-signal-mask SIG_AIM;
corfrock.bos:Killed(severity, corpsetype)
corfrock.bos:           corpsetype = 1;
corfrock.bos:           return (corpsetype);
corfrock.bos:           corpsetype = 2;
corfrock.bos:           return (corpsetype);
corfrock.bos:           corpsetype = 3;
corfrock.bos:           return (corpsetype);
corfrock.bos:   corpsetype = 3;
corfrock.bos:   return (corpsetype);
Binary file corfrock.cob matches
corfrt.bos:SetStunned(State)
corfrt.bos:     set-signal-mask SIG_AIM;
corfrt.bos:Killed(severity, corpsetype)
corfrt.bos:             corpsetype = 1 ;
corfrt.bos:             return(corpsetype);
corfrt.bos:             corpsetype = 2 ;
corfrt.bos:             return(corpsetype);
corfrt.bos:             corpsetype = 3 ;
corfrt.bos:             return(corpsetype);
corfrt.bos:     corpsetype = 3 ;
corfrt.bos:     return corpsetype;
Binary file corfrt.cob matches
corfus.bos:// OffsetToScriptCodeIndexArray        52c
corfus.bos:// OffsetToScriptNameOffsetArray       53c
corfus.bos:// OffsetToPieceNameOffsetArray        54c
corfus.bos:// OffsetToScriptCode                  2c
corfus.bos:// OffsetToNameArray                   564
corfus.bos:// OffsetToFirstName                   564
corfus.bos:Killed(severity, corpsetype)
corfus.bos:             corpsetype = 1 ;
corfus.bos:             return(corpsetype);
corfus.bos:             corpsetype = 2 ;
corfus.bos:             return(corpsetype);
corfus.bos:             corpsetype = 3 ;
corfus.bos:             return(corpsetype);
corfus.bos:     corpsetype = 3 ;
corfus.bos:     return corpsetype;
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
corgant.bos:    set-signal-mask SIG_ACTIVATE;
corgant.bos:    set-signal-mask 0;
corgant.bos:Killed(severity, corpsetype)
corgant.bos:            corpsetype = 1 ;
corgant.bos:            return(corpsetype);
corgant.bos:            corpsetype = 2 ;
corgant.bos:            return(corpsetype);
corgant.bos:            corpsetype = 3 ;
corgant.bos:            return(corpsetype);
corgant.bos:    corpsetype = 3 ;
corgant.bos:    return corpsetype;
corgarp.bos:SetMaxReloadTime(Func_Var_1)
corgarp.bos:SetStunned(State)
corgarp.bos:    set-signal-mask SIG_AIM;
corgarp.bos:Killed(severity, corpsetype)
corgarp.bos:            corpsetype = 1 ;
corgarp.bos:            return(corpsetype);
corgarp.bos:            corpsetype = 2 ;
corgarp.bos:            return(corpsetype);
corgarp.bos:            corpsetype = 3 ;
corgarp.bos:            return(corpsetype);
corgarp.bos:    corpsetype = 3 ;
corgarp.bos:    return corpsetype;
Binary file corgarp.cob matches
corgate.bos:Killed(severity, corpsetype)
corgate.bos:            corpsetype = 1 ;
corgate.bos:            return(corpsetype);
corgate.bos:            corpsetype = 2 ;
corgate.bos:            return(corpsetype);
corgate.bos:            corpsetype = 3 ;
corgate.bos:            return(corpsetype);
corgate.bos:    corpsetype = 3 ;
corgate.bos:    return corpsetype;
corgator.bos:SetMaxReloadTime(Func_Var_1)
corgator.bos:SetStunned(State)
corgator.bos:   set-signal-mask SIG_AIM;
corgator.bos:Killed(severity, corpsetype)
corgator.bos:           corpsetype = 1 ;
corgator.bos:           return(corpsetype);
corgator.bos:           corpsetype = 2 ;
corgator.bos:           return(corpsetype);
corgator.bos:           corpsetype = 3 ;
corgator.bos:           return(corpsetype);
corgator.bos:   corpsetype = 3 ;
corgator.bos:   return corpsetype;
Binary file corgator.cob matches
corgeo.lua:             return 1 -- corpsetype
corgeo.lua:             return 2 -- corpsetype
corgeo.lua:             return 3 -- corpsetype
corgol.bos:SetMaxReloadTime(Func_Var_1)
corgol.bos:SetStunned(State)
corgol.bos:     set-signal-mask SIG_AIM;
corgol.bos:Killed(severity, corpsetype)
corgol.bos:             corpsetype = 1 ;
corgol.bos:             return(corpsetype);
corgol.bos:             corpsetype = 2 ;
corgol.bos:             return(corpsetype);
corgol.bos:             corpsetype = 3 ;
corgol.bos:             return(corpsetype);
corgol.bos:     corpsetype = 3 ;
corgol.bos:     return corpsetype;
Binary file corgol.cob matches
corgplat.bos:   set-signal-mask SIG_AIM;
corgplat.bos:Killed(severity, corpsetype)
corgplat.bos:           corpsetype = 1 ;
corgplat.bos:           return(corpsetype);
corgplat.bos:           corpsetype = 2 ;
corgplat.bos:           return(corpsetype);
corgplat.bos:           corpsetype = 3 ;
corgplat.bos:           return(corpsetype);
corgplat.bos:   corpsetype = 3 ;
corgplat.bos:   return corpsetype;
corhal.bos:             // Set values for tilt
corhal.bos:     set-signal-mask SIG_MOVE;
corhal.bos:setSFXoccupy(Func_Var_1)
corhal.bos:SetMaxReloadTime(Func_Var_1)
corhal.bos:SetStunned(State)
corhal.bos:     set-signal-mask SIG_AIM;
corhal.bos:Killed(severity, corpsetype)
corhal.bos:             corpsetype = 1 ;
corhal.bos:             return(corpsetype);
corhal.bos:             corpsetype = 2 ;
corhal.bos:             return(corpsetype);
corhal.bos:             corpsetype = 3 ;
corhal.bos:             return(corpsetype);
corhal.bos:     corpsetype = 3 ;
corhal.bos:     return corpsetype;
Binary file corhal.cob matches
corhllt.bos:SetMaxReloadTime(Func_Var_1)
corhllt.bos:    set-signal-mask SIG_AIM;
corhllt.bos:    set-signal-mask SIG_AIM_2;
corhllt.bos:Killed(severity, corpsetype)
corhllt.bos:            corpsetype = 1 ;
corhllt.bos:            return(corpsetype);
corhllt.bos:            corpsetype = 2 ;
corhllt.bos:            return(corpsetype);
corhllt.bos:            corpsetype = 3 ;
corhllt.bos:            return(corpsetype);
corhllt.bos:    corpsetype = 3 ;
corhllt.bos:    return corpsetype;
Binary file corhllt.cob matches
corhlt.bos:     set-signal-mask SIG_AIM;
corhlt.bos:     set-signal-mask SIG_AIM;
corhlt.bos:Killed(severity, corpsetype)
corhlt.bos:             corpsetype = 1 ;
corhlt.bos:             return(corpsetype);
corhlt.bos:             corpsetype = 2 ;
corhlt.bos:             return(corpsetype);
corhlt.bos:             corpsetype = 3 ;
corhlt.bos:             return(corpsetype);
corhlt.bos:     corpsetype = 3 ;
corhlt.bos:     return corpsetype;
corhp.bos:// OffsetToScriptCodeIndexArray        11e4
corhp.bos:// OffsetToScriptNameOffsetArray       1230
corhp.bos:// OffsetToPieceNameOffsetArray        127c
corhp.bos:// OffsetToScriptCode                  2c
corhp.bos:// OffsetToNameArray                   12a4
corhp.bos:// OffsetToFirstName                   12a4
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
corhp.bos:/*   28c:*/   set-signal-mask SIG_ACTIVATE;
corhp.bos:/*   297:*/   set-signal-mask 0;
corhp.bos:Killed(severity, corpsetype)
corhp.bos:              corpsetype = 1 ;
corhp.bos:              return(corpsetype);
corhp.bos:              corpsetype = 2 ;
corhp.bos:              return(corpsetype);
corhp.bos:              corpsetype = 3 ;
corhp.bos:              return(corpsetype);
corhp.bos:      corpsetype = 3 ;
corhp.bos:      return corpsetype;
corhrk.bos:     //set-signal-mask SIG_WALK;
corhrk.bos:SetMaxReloadTime(Func_Var_1)
corhrk.bos:SetStunned(State)
corhrk.bos:     set-signal-mask SIG_AIM;
corhrk.bos:Killed(severity, corpsetype)
corhrk.bos:             corpsetype = 1 ;
corhrk.bos:             return(corpsetype);
corhrk.bos:             corpsetype = 2 ;
corhrk.bos:             return(corpsetype);
corhrk.bos:             corpsetype = 3 ;
corhrk.bos:             return(corpsetype);
corhrk.bos:     corpsetype = 3 ;
corhrk.bos:     return corpsetype;
Binary file corhrk.cob matches
corhunt.bos:Killed(severity, corpsetype)
corhunt.bos:            corpsetype = 1 ;
corhunt.bos:            return(corpsetype);
corhunt.bos:            corpsetype = 2 ;
corhunt.bos:            return(corpsetype);
corhunt.bos:            corpsetype = 3 ;
corhunt.bos:            return(corpsetype);
corhunt.bos:    corpsetype = 3 ;
corhunt.bos:    return corpsetype;
corhurc.bos:Killed(severity, corpsetype)
corhurc.bos:            corpsetype = 1 ;
corhurc.bos:            return(corpsetype);
corhurc.bos:            corpsetype = 2 ;
corhurc.bos:            return(corpsetype);
corhurc.bos:            corpsetype = 3 ;
corhurc.bos:            return(corpsetype);
corhurc.bos:    corpsetype = 3 ;
corhurc.bos:    return corpsetype;
corint.bos:     set-signal-mask SIG_AIM;
corint.bos:Killed(severity, corpsetype)
corint.bos:             corpsetype = 1 ;
corint.bos:             return(corpsetype);
corint.bos:             corpsetype = 2 ;
corint.bos:             return(corpsetype);
corint.bos:             corpsetype = 3 ;
corint.bos:             return(corpsetype);
corint.bos:     corpsetype = 3 ;
corint.bos:     return corpsetype;
corintr.bos:    set ARMORED to 1;
corintr.bos:    set-signal-mask SIG_MOVE;
corintr.bos:BoomReset()
corintr.bos:    set-signal-mask 2;
corintr.bos:            set BUSY to 1;
corintr.bos:            call-script BoomReset();
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    start-script BoomReset();
corintr.bos:    set BUSY to 0;
corintr.bos:Killed(severity, corpsetype)
corintr.bos:            corpsetype = 1 ;
corintr.bos:            return(corpsetype);
corintr.bos:            corpsetype = 2 ;
corintr.bos:            return(corpsetype);
corintr.bos:            corpsetype = 3 ;
corintr.bos:            return(corpsetype);
corintr.bos:    corpsetype = 3 ;
corintr.bos:    return corpsetype;
Binary file corintr.cob matches
corjamt.bos:// OffsetToScriptCodeIndexArray        744
corjamt.bos:// OffsetToScriptNameOffsetArray       76c
corjamt.bos:// OffsetToPieceNameOffsetArray        794
corjamt.bos:// OffsetToScriptCode                  2c
corjamt.bos:// OffsetToNameArray                   7a8
corjamt.bos:// OffsetToFirstName                   7a8
corjamt.bos:Killed(severity, corpsetype)
corjamt.bos:            corpsetype = 1 ;
corjamt.bos:            return(corpsetype);
corjamt.bos:            corpsetype = 2 ;
corjamt.bos:            return(corpsetype);
corjamt.bos:            corpsetype = 3 ;
corjamt.bos:            return(corpsetype);
corjamt.bos:    corpsetype = 3 ;
corjamt.bos:    return corpsetype;
corjugg.bos:    set-signal-mask SIG_WALK;
corjugg.bos:SetMaxReloadTime(Func_Var_1)
corjugg.bos:    set-signal-mask 4 | 8 | 16 | 32;
corjugg.bos:    set-signal-mask 4;
corjugg.bos:    set-signal-mask 8;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set-signal-mask 16;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set-signal-mask 32;
corjugg.bos:    set CHANGE_TARGET to 4;
corjugg.bos:Killed(severity, corpsetype)
corjugg.bos:            corpsetype = 1;
corjugg.bos:            return (corpsetype);
corjugg.bos:            corpsetype = 2;
corjugg.bos:            return (corpsetype);
corjugg.bos:            corpsetype = 3;
corjugg.bos:            return (corpsetype);
corjugg.bos:    corpsetype = 3;
corjugg.bos:    return corpsetype;
Binary file corjugg.cob matches
corjugg.lua_old:        SetSignalMask( SIG_walk )
corjugg.lua_old:        SetSignalMask( SIG_stop )
corjugg.lua_old:        SetSignalMask( SIG_aim1 )
corjugg.lua_old:        SetSignalMask( SIG_aim2 )
corjugg.lua_old:        SetSignalMask( SIG_aim3 )
corjugg.lua_old:        SetSignalMask( SIG_aim4 )
corjuno.bos:// OffsetToScriptCodeIndexArray        d80
corjuno.bos:// OffsetToScriptNameOffsetArray       dc4
corjuno.bos:// OffsetToPieceNameOffsetArray        e08
corjuno.bos:// OffsetToScriptCode                  2c
corjuno.bos:// OffsetToNameArray                   e4c
corjuno.bos:// OffsetToFirstName                   e4c
corjuno.bos:SetMaxReloadTime(Func_Var_1)
corjuno.bos:/*   1f1:*/ set-signal-mask 0;
corjuno.bos:/*   206:*/ set-signal-mask SIG_AIM;
corjuno.bos:Killed(severity, corpsetype)
corjuno.bos:            corpsetype = 1 ;
corjuno.bos:            return(corpsetype);
corjuno.bos:            corpsetype = 2 ;
corjuno.bos:            return(corpsetype);
corjuno.bos:            corpsetype = 3 ;
corjuno.bos:            return(corpsetype);
corjuno.bos:    corpsetype = 3 ;
corjuno.bos:    return corpsetype;
Binary file corjuno.cob matches
corkarg.bos:    //set-signal-mask SIG_WALK;
corkarg.bos:    set-signal-mask SIG_AIM;
corkarg.bos:Killed(severity, corpsetype)
corkarg.bos:            corpsetype = 1 ;
corkarg.bos:            corpsetype = 2 ;
corkarg.bos:            corpsetype = 3 ;
corkarg.bos:    corpsetype = 3 ;
corkarg.lua_old:        SetSignalMask(SIG_WALK)
corkarg.lua_old:        SetSignalMask(SIG_RESTORE)
corkarg.lua_old:                SetSignalMask(SIG_AIM)
corkorg.bos:    set-signal-mask SIG_WALK;
corkorg.bos:    set ARMORED to 1;
corkorg.bos:SetMaxReloadTime(Func_Var_1)
corkorg.bos:setSFXoccupy(Func_Var_1)
corkorg.bos:    set-signal-mask SIG_HEAD; //sets what signals kill the current t
hread
corkorg.bos:    set-signal-mask SIG_BODY;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
corkorg.bos:Killed(severity, corpsetype)
corkorg.bos:            corpsetype = 1 ;
corkorg.bos:            return(corpsetype);
corkorg.bos:            corpsetype = 2 ;
corkorg.bos:            return(corpsetype);
corkorg.bos:            corpsetype = 3 ;
corkorg.bos:            return(corpsetype);
corkorg.bos:    corpsetype = 3 ;
corkorg.bos:    return corpsetype;
Binary file corkorg.cob matches
corlab.lua:     UnitScript.SetSignalMask(SIG_OPENCLOSE);
corlab.lua:     UnitScript.SetUnitValue(COB.INBUILDSTANCE, 1);
corlab.lua:     UnitScript.SetSignalMask(SIG_OPENCLOSE);
corlab.lua:     UnitScript.SetUnitValue(COB.INBUILDSTANCE, 0);
corlab.lua:     UnitScript.SetSignalMask(SIG_ACTIVATE);
corlab.lua:    SetSignalMask(SIG_CRANE1);
corlab.lua:    SetSignalMask(SIG_CRANE2);
corlab.lua:     local corpsetype;
corlab.lua:             corpsetype = 1;
corlab.lua:             return corpsetype;
corlab.lua:             corpsetype = 2;
corlab.lua:             return corpsetype;
corlab.lua:             corpsetype = 3;
corlab.lua:             return corpsetype;
corlab.lua:     corpsetype = 3;
corlab.lua:     return corpsetype;
corlevlr.bos:SetMaxReloadTime(Func_Var_1)
corlevlr.bos:SetStunned(State)
corlevlr.bos:   set-signal-mask SIG_AIM;
corlevlr.bos:Killed(severity, corpsetype)
corlevlr.bos:           corpsetype = 1 ;
corlevlr.bos:           return(corpsetype);
corlevlr.bos:           corpsetype = 2 ;
corlevlr.bos:           return(corpsetype);
corlevlr.bos:           corpsetype = 3 ;
corlevlr.bos:           return(corpsetype);
corlevlr.bos:   corpsetype = 3 ;
corlevlr.bos:   return corpsetype;
Binary file corlevlr.cob matches
corllt.bos:     set-signal-mask SIG_AIM;
corllt.bos:Killed(severity, corpsetype)
corllt.bos:             corpsetype = 1 ;
corllt.bos:             return(corpsetype);
corllt.bos:             corpsetype = 2 ;
corllt.bos:             return(corpsetype);
corllt.bos:             corpsetype = 3 ;
corllt.bos:             return(corpsetype);
corllt.bos:     corpsetype = 3 ;
corllt.bos:     return corpsetype;
cormabm.bos:    set-signal-mask 0;
cormabm.bos:SetStunned(State)
cormabm.bos:    set-signal-mask SIG_AIM;
cormabm.bos:Killed(severity, corpsetype)
cormabm.bos:            corpsetype = 1 ;
cormabm.bos:            return(corpsetype);
cormabm.bos:            corpsetype = 2 ;
cormabm.bos:            return(corpsetype);
cormabm.bos:            corpsetype = 3 ;
cormabm.bos:            return(corpsetype);
cormabm.bos:    corpsetype = 3 ;
cormabm.bos:    return corpsetype;
Binary file cormabm.cob matches
cormadsam.lua:                SetSignalMask(SIG_AIM)
cormadsam.lua:                  return 1 -- corpsetype
cormadsam.lua:                  return 2 -- corpsetype
cormadsam.lua:                  return 3 -- corpsetype
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormakr.bos:Killed(severity, corpsetype)
cormakr.bos:            corpsetype = 1 ;
cormakr.bos:            return(corpsetype);
cormakr.bos:            corpsetype = 2 ;
cormakr.bos:            return(corpsetype);
cormakr.bos:            corpsetype = 3 ;
cormakr.bos:            return(corpsetype);
cormakr.bos:    corpsetype = 3 ;
cormakr.bos:    return corpsetype;
cormando.bos:   set-signal-mask SIG_WALK;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
cormando.bos:   set-signal-mask SIG_BUILD;
cormando.bos:   set-signal-mask 0;
cormando.bos:Killed(severity, corpsetype)
cormando.bos:           corpsetype = 1 ;
cormando.bos:           return(corpsetype);
cormando.bos:           corpsetype = 2 ;
cormando.bos:           return(corpsetype);
cormando.bos:           corpsetype = 3 ;
cormando.bos:           return(corpsetype);
cormando.bos:   corpsetype = 3 ;
cormando.bos:   return corpsetype;
cormart.bos:SetMaxReloadTime(Func_Var_1)
cormart.bos:SetStunned(State)
cormart.bos:    set-signal-mask SIG_AIM;
cormart.bos:Killed(severity, corpsetype)
cormart.bos:            corpsetype = 1 ;
cormart.bos:            return(corpsetype);
cormart.bos:            corpsetype = 2 ;
cormart.bos:            return(corpsetype);
cormart.bos:            corpsetype = 3 ;
cormart.bos:            return(corpsetype);
cormart.bos:    corpsetype = 3 ;
cormart.bos:    return corpsetype;
Binary file cormart.cob matches
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
cormaw.bos:SetMaxReloadTime(Func_Var_1)
cormaw.bos:     set-signal-mask 0;
cormaw.bos:SetStunned(State)
cormaw.bos:     set-signal-mask SIG_AIM;
cormaw.bos:Killed(severity, corpsetype)
cormaw.bos:             corpsetype = 1 ;
cormaw.bos:             return(corpsetype);
cormaw.bos:             corpsetype = 2 ;
cormaw.bos:             return(corpsetype);
cormaw.bos:             corpsetype = 3 ;
cormaw.bos:             return(corpsetype);
cormaw.bos:     corpsetype = 3 ;
cormaw.bos:     return corpsetype;
Binary file cormaw.cob matches
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormex.bos:SetStunned(State)
cormex.bos:SetSpeed(Func_Var_1)
cormex.bos:Killed(severity, corpsetype)
cormex.bos:             corpsetype = 1 ;
cormex.bos:             return(corpsetype);
cormex.bos:             corpsetype = 2 ;
cormex.bos:             return(corpsetype);
cormex.bos:             corpsetype = 3 ;
cormex.bos:             return(corpsetype);
cormex.bos:     corpsetype = 3 ;
cormex.bos:     return corpsetype;
Binary file cormex.cob matches
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set-signal-mask 0;
cormexp.bos:SetStunned(State)
cormexp.bos:SetMaxReloadTime(Func_Var_1)
cormexp.bos:    set-signal-mask SIG_AIM;
cormexp.bos:    set-signal-mask 8;
cormexp.bos:    set-signal-mask SIG_AIM_2;
cormexp.bos:SetSpeed(Func_Var_1)
cormexp.bos:Killed(severity, corpsetype)
cormexp.bos:            corpsetype = 1 ;
cormexp.bos:            return(corpsetype);
cormexp.bos:            corpsetype = 2 ;
cormexp.bos:            return(corpsetype);
cormexp.bos:            corpsetype = 3 ;
cormexp.bos:            return(corpsetype);
cormexp.bos:    corpsetype = 3 ;
cormexp.bos:    return corpsetype;
Binary file cormexp.cob matches
cormh.bos:              // Set values for tilt
cormh.bos:SetMaxReloadTime(Func_Var_1)
cormh.bos:      set-signal-mask 0;
cormh.bos:SetStunned(State)
cormh.bos:      set-signal-mask SIG_RESTORE;
cormh.bos:      set-signal-mask SIG_MOVE;
cormh.bos:setSFXoccupy(Func_Var_1)
cormh.bos:      set-signal-mask SIG_AIM;
cormh.bos:Killed(severity, corpsetype)
cormh.bos:              corpsetype = 1 ;
cormh.bos:              return(corpsetype);
cormh.bos:              corpsetype = 2 ;
cormh.bos:              return(corpsetype);
cormh.bos:              corpsetype = 3 ;
cormh.bos:              return(corpsetype);
cormh.bos:      corpsetype = 3 ;
cormh.bos:      return corpsetype;
Binary file cormh.cob matches
cormist.bos:SetMaxReloadTime(Func_Var_1)
cormist.bos:SetStunned(State)
cormist.bos:    set-signal-mask SIG_AIM;
cormist.bos:Killed(severity, corpsetype)
cormist.bos:            corpsetype = 1 ;
cormist.bos:            return(corpsetype);
cormist.bos:            corpsetype = 2 ;
cormist.bos:            return(corpsetype);
cormist.bos:            corpsetype = 3 ;
cormist.bos:            return(corpsetype);
cormist.bos:    corpsetype = 3 ;
cormist.bos:    return corpsetype;
Binary file cormist.cob matches
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormls.bos:     set-signal-mask SIG_MOVE;
cormls.bos:Killed(severity, corpsetype)
cormls.bos:             corpsetype = 1 ;
cormls.bos:             return(corpsetype);
cormls.bos:             corpsetype = 2 ;
cormls.bos:             return(corpsetype);
cormls.bos:             corpsetype = 3 ;
cormls.bos:             return(corpsetype);
cormls.bos:     corpsetype = 3 ;
cormls.bos:     return corpsetype;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormlv.bos:     set-signal-mask SIG_BUILD;
cormlv.bos:     set-signal-mask 0;
cormlv.bos:Killed(severity, corpsetype)
cormlv.bos:             corpsetype = 1 ;
cormlv.bos:             return(corpsetype);
cormlv.bos:             corpsetype = 2 ;
cormlv.bos:             return(corpsetype);
cormlv.bos:             corpsetype = 3 ;
cormlv.bos:             return(corpsetype);
cormlv.bos:     corpsetype = 3 ;
cormlv.bos:             return corpsetype;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormmkr.bos:Killed(severity, corpsetype)
cormmkr.bos:            corpsetype = 1 ;
cormmkr.bos:            return(corpsetype);
cormmkr.bos:            corpsetype = 2 ;
cormmkr.bos:            return(corpsetype);
cormmkr.bos:            corpsetype = 3 ;
cormmkr.bos:            return(corpsetype);
cormmkr.bos:    corpsetype = 3 ;
cormmkr.bos:    return corpsetype;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:SetStunned(State)
cormoho.bos:    set ARMORED to 1;
cormoho.bos:SetSpeed(Func_Var_1)
cormoho.bos:Killed(severity, corpsetype)
cormoho.bos:            corpsetype = 1 ;
cormoho.bos:            return(corpsetype);
cormoho.bos:            corpsetype = 2 ;
cormoho.bos:            return(corpsetype);
cormoho.bos:            corpsetype = 3 ;
cormoho.bos:            return(corpsetype);
cormoho.bos:    corpsetype = 3 ;
cormoho.bos:    return corpsetype;
Binary file cormoho.cob matches
cormort.bos:    set-signal-mask SIG_WALK;
cormort.bos:SetMaxReloadTime(Func_Var_1)
cormort.bos:SetStunned(State)
cormort.bos:    set-signal-mask SIG_AIM;
cormort.bos:Killed(severity, corpsetype)
cormort.bos:            corpsetype = 1 ;
cormort.bos:            return(corpsetype);
cormort.bos:            corpsetype = 2 ;
cormort.bos:            return(corpsetype);
cormort.bos:            corpsetype = 3 ;
cormort.bos:            return(corpsetype);
cormort.bos:    corpsetype = 3 ;
cormort.bos:    return corpsetype;
Binary file cormort.cob matches
cormship.bos:SetMaxReloadTime(Func_Var_1)
cormship.bos:SetStunned(State)
cormship.bos:   set-signal-mask SIG_MOVE;
cormship.bos:   set-signal-mask SIG_AIM;
cormship.bos:   set-signal-mask SIG_AIM_3;
cormship.bos:Killed(severity, corpsetype)
cormship.bos:           corpsetype = 1 ;
cormship.bos:           return(corpsetype);
cormship.bos:           corpsetype = 2 ;
cormship.bos:           return(corpsetype);
cormship.bos:           corpsetype = 3 ;
cormship.bos:           return(corpsetype);
cormship.bos:   corpsetype = 3 ;
cormship.bos:   return corpsetype;
Binary file cormship.cob matches
cormstor.bos:// OffsetToScriptCodeIndexArray        2f8
cormstor.bos:// OffsetToScriptNameOffsetArray       308
cormstor.bos:// OffsetToPieceNameOffsetArray        318
cormstor.bos:// OffsetToScriptCode                  2c
cormstor.bos:// OffsetToNameArray                   31c
cormstor.bos:// OffsetToFirstName                   31c
cormstor.bos:Killed(severity, corpsetype)
cormstor.bos:           corpsetype = 1 ;
cormstor.bos:           return(corpsetype);
cormstor.bos:           corpsetype = 2 ;
cormstor.bos:           return(corpsetype);
cormstor.bos:           corpsetype = 3 ;
cormstor.bos:           return(corpsetype);
cormstor.bos:   corpsetype = 3 ;
cormstor.bos:   return corpsetype;
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set-signal-mask SIG_BUILD;
cormuskrat.bos: set-signal-mask 0;
cormuskrat.bos:Killed(severity, corpsetype)
cormuskrat.bos:         corpsetype = 1 ;
cormuskrat.bos:         return(corpsetype);
cormuskrat.bos:         corpsetype = 2 ;
cormuskrat.bos:         return(corpsetype);
cormuskrat.bos:         corpsetype = 3 ;
cormuskrat.bos:         return(corpsetype);
cormuskrat.bos: corpsetype = 3 ;
cormuskrat.bos: return corpsetype;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
cornanotc.bos:SetStunned(State)
cornanotc.bos:Killed(severity, corpsetype)
cornanotc.bos:          corpsetype = 1 ;
cornanotc.bos:          return(corpsetype);
cornanotc.bos:          corpsetype = 2 ;
cornanotc.bos:          return(corpsetype);
cornanotc.bos:          corpsetype = 3 ;
cornanotc.bos:          return(corpsetype);
cornanotc.bos:  corpsetype = 3 ;
cornanotc.bos:  return corpsetype;
Binary file cornanotc.cob matches
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
cornanotcplat.bos:SetStunned(State)
cornanotcplat.bos:Killed(severity, corpsetype)
cornanotcplat.bos:              corpsetype = 1 ;
cornanotcplat.bos:              return(corpsetype);
cornanotcplat.bos:              corpsetype = 2 ;
cornanotcplat.bos:              return(corpsetype);
cornanotcplat.bos:              corpsetype = 3 ;
cornanotcplat.bos:              return(corpsetype);
cornanotcplat.bos:      corpsetype = 3 ;
cornanotcplat.bos:      return corpsetype;
Binary file cornanotcplat.cob matches
cornecro.bos:   set-signal-mask SIG_WALK;
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set-signal-mask SIG_BUILD;
cornecro.bos:   set INBUILDSTANCE to 1;
cornecro.bos:   set-signal-mask SIG_BUILD;
cornecro.bos:Killed(severity, corpsetype)
cornecro.bos:           corpsetype = 1 ;
cornecro.bos:           return(corpsetype);
cornecro.bos:           corpsetype = 2 ;
cornecro.bos:           return(corpsetype);
cornecro.bos:           corpsetype = 3 ;
cornecro.bos:           return(corpsetype);
cornecro.bos:   corpsetype = 3 ;
cornecro.bos:   return corpsetype;
corparrow.bos:setSFXoccupy(state)
corparrow.bos:SetMaxReloadTime(Func_Var_1)
corparrow.bos:SetStunned(State)
corparrow.bos:  set-signal-mask SIG_AIM;
corparrow.bos:Killed(severity, corpsetype)
corparrow.bos:          corpsetype = 1 ;
corparrow.bos:          return(corpsetype);
corparrow.bos:          corpsetype = 2 ;
corparrow.bos:          return(corpsetype);
corparrow.bos:          corpsetype = 3 ;
corparrow.bos:          return(corpsetype);
corparrow.bos:  corpsetype = 3 ;
corparrow.bos:  return corpsetype;
Binary file corparrow.cob matches
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set-signal-mask SIG_ACTIVATE;
corplat.bos:    set-signal-mask 0;
corplat.bos:Killed(severity, corpsetype)
corplat.bos:            corpsetype = 1 ;
corplat.bos:            return(corpsetype);
corplat.bos:            corpsetype = 2 ;
corplat.bos:            return(corpsetype);
corplat.bos:            corpsetype = 3 ;
corplat.bos:            return(corpsetype);
corplat.bos:    corpsetype = 3 ;
corplat.bos:    return corpsetype;
corpship.bos:SetDirection(heading)
corpship.bos:   set-signal-mask 4096;
corpship.bos:SetMaxReloadTime(Func_Var_1)
corpship.bos:SetStunned(State)
corpship.bos:   set-signal-mask 0;
corpship.bos:   set-signal-mask SIG_MOVE;
corpship.bos:   set-signal-mask SIG_AIM;
corpship.bos:Killed(severity, corpsetype)
corpship.bos:           corpsetype = 1;
corpship.bos:           return (corpsetype);
corpship.bos:           corpsetype = 2;
corpship.bos:           return (corpsetype);
corpship.bos:   corpsetype = 3;
corpship.bos:   return corpsetype;
Binary file corpship.cob matches
corpt.bos:SetMaxReloadTime(Func_Var_1)
corpt.bos:      set-signal-mask 0;
corpt.bos:SetStunned(State)
corpt.bos:      set-signal-mask SIG_MOVE;
corpt.bos:      set-signal-mask SIG_AIM_3;
corpt.bos:      set-signal-mask SIG_AIM;
corpt.bos:Killed(severity, corpsetype)
corpt.bos:              corpsetype = 1 ;
corpt.bos:              return(corpsetype);
corpt.bos:              corpsetype = 2 ;
corpt.bos:              return(corpsetype);
corpt.bos:              corpsetype = 3 ;
corpt.bos:              return(corpsetype);
corpt.bos:      corpsetype = 3 ;
corpt.bos:      return corpsetype;
Binary file corpt.cob matches
corptl.bos:     set-signal-mask SIG_AIM;
corptl.bos:Killed(severity, corpsetype)
corptl.bos:             corpsetype = 1;
corptl.bos:             return (corpsetype);
corptl.bos:             corpsetype = 2;
corptl.bos:             return (corpsetype);
corptl.bos:             corpsetype = 3;
corptl.bos:             return (corpsetype);
corptl.bos:     corpsetype = 3;
corptl.bos:     return corpsetype;
corpun.lua:             SetSignalMask(SIG_AIM)
corpun.lua:             return 1 -- corpsetype
corpun.lua:             return 2 -- corpsetype
corpun.lua:             return 3 -- corpsetype
corpyro.bos:    //set-signal-mask SIG_WALK;
corpyro.bos:SetMaxReloadTime(Func_Var_1)
corpyro.bos:SetStunned(State)
corpyro.bos:    set-signal-mask SIG_AIM;
corpyro.bos:Killed(severity, corpsetype)
corpyro.bos:            corpsetype = 1 ;
corpyro.bos:            return(corpsetype);
corpyro.bos:            corpsetype = 2 ;
corpyro.bos:            return(corpsetype);
corpyro.bos:            corpsetype = 3 ;
corpyro.bos:            return(corpsetype);
corpyro.bos:    corpsetype = 3 ;
corpyro.bos:    return corpsetype;
Binary file corpyro.cob matches
corrad.bos:// OffsetToScriptCodeIndexArray        54c
corrad.bos:// OffsetToScriptNameOffsetArray       574
corrad.bos:// OffsetToPieceNameOffsetArray        59c
corrad.bos:// OffsetToScriptCode                  2c
corrad.bos:// OffsetToNameArray                   5a4
corrad.bos:// OffsetToFirstName                   5a4
corrad.bos:Killed(severity, corpsetype)
corrad.bos:             corpsetype = 1 ;
corrad.bos:             return(corpsetype);
corrad.bos:             corpsetype = 2 ;
corrad.bos:             return(corpsetype);
corrad.bos:             corpsetype = 3 ;
corrad.bos:             return(corpsetype);
corrad.bos:     corpsetype = 3 ;
corrad.bos:     return corpsetype;
corraid.bos:SetMaxReloadTime(Func_Var_1)
corraid.bos:    set-signal-mask 0;
corraid.bos:SetStunned(State)
corraid.bos:    set-signal-mask SIG_AIM;
corraid.bos:Killed(severity, corpsetype)
corraid.bos:            corpsetype = 1 ;
corraid.bos:            return(corpsetype);
corraid.bos:            corpsetype = 2 ;
corraid.bos:            return(corpsetype);
corraid.bos:            corpsetype = 3 ;
corraid.bos:            return(corpsetype);
corraid.bos:    corpsetype = 3 ;
corraid.bos:    return corpsetype;
Binary file corraid.cob matches
correap.bos:setSFXoccupy(state)
correap.bos:SetMaxReloadTime(Func_Var_1)
correap.bos:SetStunned(State)
correap.bos:    set-signal-mask SIG_AIM;
correap.bos:Killed(severity, corpsetype)
correap.bos:            corpsetype = 1 ;
correap.bos:            return(corpsetype);
correap.bos:            corpsetype = 2 ;
correap.bos:            return(corpsetype);
correap.bos:            corpsetype = 3 ;
correap.bos:            return(corpsetype);
correap.bos:    corpsetype = 3 ;
correap.bos:    return corpsetype;
Binary file correap.cob matches
correcl.bos:    set-signal-mask SIG_MOVE;
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
correcl.bos:Killed(severity, corpsetype)
correcl.bos:            corpsetype = 1 ;
correcl.bos:            return(corpsetype);
correcl.bos:            corpsetype = 2 ;
correcl.bos:            return(corpsetype);
correcl.bos:            corpsetype = 3 ;
correcl.bos:            return(corpsetype);
correcl.bos:    corpsetype = 3 ;
correcl.bos:    return corpsetype;
corrl.bos:// OffsetToScriptCodeIndexArray        9cc
corrl.bos:// OffsetToScriptNameOffsetArray       9ec
corrl.bos:// OffsetToPieceNameOffsetArray        a0c
corrl.bos:// OffsetToScriptCode                  2c
corrl.bos:// OffsetToNameArray                   a2c
corrl.bos:// OffsetToFirstName                   a2c
corrl.bos:SetStunned(State)
corrl.bos:Killed(severity, corpsetype)
corrl.bos:              corpsetype = 1 ;
corrl.bos:              return(corpsetype);
corrl.bos:              corpsetype = 2 ;
corrl.bos:              return(corpsetype);
corrl.bos:              corpsetype = 3 ;
corrl.bos:              return(corpsetype);
corrl.bos:      corpsetype = 3 ;
corrl.bos:      return corpsetype;
Binary file corrl.cob matches
corroach.bos:Killed(severity, corpsetype)
corroach.bos:           corpsetype = 1 ;
corroach.bos:           return(corpsetype);
corroach.bos:           corpsetype = 2 ;
corroach.bos:           return(corpsetype);
corroach.bos:           corpsetype = 3 ;
corroach.bos:           return(corpsetype);
corroach.bos:   corpsetype = 3 ;
corroach.bos:   return corpsetype;
corroy.bos:SetMaxReloadTime(Func_Var_1)
corroy.bos:SetStunned(State)
corroy.bos:     set-signal-mask SIG_MOVE;
corroy.bos:     set-signal-mask 2;
corroy.bos:     set-signal-mask 4;
corroy.bos:Killed(severity, corpsetype)
corroy.bos:             corpsetype = 1 ;
corroy.bos:             return(corpsetype);
corroy.bos:             corpsetype = 2 ;
corroy.bos:             return(corpsetype);
corroy.bos:             corpsetype = 3 ;
corroy.bos:             return(corpsetype);
corroy.bos:     corpsetype = 3 ;
corroy.bos:     return corpsetype;
Binary file corroy.cob matches
corsb.bos:setSFXoccupy(Func_Var_1)
corsb.bos:Killed(severity, corpsetype)
corsb.bos:              corpsetype = 1 ;
corsb.bos:              return(corpsetype);
corsb.bos:              corpsetype = 2 ;
corsb.bos:              return(corpsetype);
corsb.bos:              corpsetype = 3 ;
corsb.bos:              return(corpsetype);
corsb.bos:      corpsetype = 3 ;
corsb.bos:      return corpsetype;
Binary file corsb.cob matches
corscreamer.bos:SetStunned(State)
corscreamer.bos:        set-signal-mask SIG_AIM;
corscreamer.bos:Killed(severity, corpsetype)
corscreamer.bos:                corpsetype = 1 ;
corscreamer.bos:                return(corpsetype);
corscreamer.bos:                corpsetype = 2 ;
corscreamer.bos:                return(corpsetype);
corscreamer.bos:                corpsetype = 3 ;
corscreamer.bos:                return(corpsetype);
corscreamer.bos:        corpsetype = 3 ;
corscreamer.bos:        return corpsetype;
Binary file corscreamer.cob matches
corsd.bos:// OffsetToScriptCodeIndexArray        43c
corsd.bos:// OffsetToScriptNameOffsetArray       44c
corsd.bos:// OffsetToPieceNameOffsetArray        45c
corsd.bos:// OffsetToScriptCode                  2c
corsd.bos:// OffsetToNameArray                   460
corsd.bos:// OffsetToFirstName                   460
corsd.bos:Killed(severity, corpsetype)
corsd.bos:              corpsetype = 1 ;
corsd.bos:              return(corpsetype);
corsd.bos:              corpsetype = 2 ;
corsd.bos:              return(corpsetype);
corsd.bos:              corpsetype = 3 ;
corsd.bos:              return(corpsetype);
corsd.bos:      corpsetype = 3 ;
corsd.bos:      return corpsetype;
corseah.bos:    set-signal-mask 8;
corseah.bos:    set-signal-mask 8;
corseah.bos:    set-signal-mask 8;
corseah.bos:Killed(severity, corpsetype)
corseah.bos:            corpsetype = 1 ;
corseah.bos:            return(corpsetype);
corseah.bos:            corpsetype = 2 ;
corseah.bos:            return(corpsetype);
corseah.bos:            corpsetype = 3 ;
corseah.bos:            return(corpsetype);
corseah.bos:    corpsetype = 3 ;
corseah.bos:    return corpsetype;
corseal.bos:setSFXoccupy(state)
corseal.bos:SetMaxReloadTime(Func_Var_1)
corseal.bos:SetStunned(State)
corseal.bos:    set-signal-mask SIG_AIM;
corseal.bos:Killed(severity, corpsetype)
corseal.bos:            corpsetype = 1 ;
corseal.bos:            return(corpsetype);
corseal.bos:            corpsetype = 2 ;
corseal.bos:            return(corpsetype);
corseal.bos:            corpsetype = 3 ;
corseal.bos:            return(corpsetype);
corseal.bos:    corpsetype = 3 ;
corseal.bos:    return corpsetype;
Binary file corseal.cob matches
corseap.bos:Killed(severity, corpsetype)
corseap.bos:            corpsetype = 1 ;
corseap.bos:            return(corpsetype);
corseap.bos:            corpsetype = 2 ;
corseap.bos:            return(corpsetype);
corseap.bos:            corpsetype = 3 ;
corseap.bos:            return(corpsetype);
corseap.bos:    corpsetype = 3 ;
corseap.bos:    return corpsetype;
corsent.bos:SetMaxReloadTime(Func_Var_1)
corsent.bos:    set-signal-mask 0;
corsent.bos:SetStunned(State)
corsent.bos:    set-signal-mask SIG_AIM_3;
corsent.bos:Killed(severity, corpsetype)
corsent.bos:            corpsetype = 1 ;
corsent.bos:            return(corpsetype);
corsent.bos:            corpsetype = 2 ;
corsent.bos:            return(corpsetype);
corsent.bos:            corpsetype = 3 ;
corsent.bos:            return(corpsetype);
corsent.bos:    corpsetype = 3 ;
corsent.bos:    return corpsetype;
Binary file corsent.cob matches
corsfig.bos:    set-signal-mask SIG_MOVE;
corsfig.bos:Killed(severity, corpsetype)
corsfig.bos:            corpsetype = 1 ;
corsfig.bos:            return(corpsetype);
corsfig.bos:            corpsetype = 2 ;
corsfig.bos:            return(corpsetype);
corsfig.bos:            corpsetype = 3 ;
corsfig.bos:            return(corpsetype);
corsfig.bos:    corpsetype = 3 ;
corsfig.bos:    return corpsetype;
corsh.bos:              // Set values for tilt
corsh.bos:      set-signal-mask SIG_MOVE;
corsh.bos:setSFXoccupy(Func_Var_1)
corsh.bos:SetMaxReloadTime(Func_Var_1)
corsh.bos:SetStunned(State)
corsh.bos:      set-signal-mask SIG_AIM;
corsh.bos:Killed(severity, corpsetype)
corsh.bos:              corpsetype = 1 ;
corsh.bos:              return(corpsetype);
corsh.bos:              corpsetype = 2 ;
corsh.bos:              return(corpsetype);
corsh.bos:              corpsetype = 3 ;
corsh.bos:              return(corpsetype);
corsh.bos:      corpsetype = 3 ;
corsh.bos:      return corpsetype;
Binary file corsh.cob matches
corshad.bos:Killed(severity, corpsetype)
corshad.bos:            corpsetype = 1 ;
corshad.bos:            return(corpsetype);
corshad.bos:            corpsetype = 2 ;
corshad.bos:            return(corpsetype);
corshad.bos:            corpsetype = 3 ;
corshad.bos:            return(corpsetype);
corshad.bos:    corpsetype = 3 ;
corshad.bos:    return corpsetype;
corshark.bos:   set-signal-mask SIG_MOVE;
corshark.bos:Killed(severity, corpsetype)
corshark.bos:           corpsetype = 1 ;
corshark.bos:           return(corpsetype);
corshark.bos:           corpsetype = 2 ;
corshark.bos:           return(corpsetype);
corshark.bos:           corpsetype = 3 ;
corshark.bos:           return(corpsetype);
corshark.bos:   corpsetype = 3 ;
corshark.bos:   return corpsetype;
corshiva.bos:   set ARMORED to 1;
corshiva.bos:SetMaxReloadTime(maxtime_ms) //this is called by engine immediately
 after Create(), and returns the longest of all weapon reload times in ms
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set-signal-mask SIG_AIM;
corshiva.bos:   set-signal-mask SIG_AIM;
corshiva.bos:   set-signal-mask SIG_AIM_3;
corshiva.bos:Killed(severity, corpsetype)
Binary file corshiva.cob matches
corshiva.lua_old:       SetSignalMask( SIG_walk )
corshiva.lua_old:                               UnitScript.SetUnitValue(COB.ARMO
RED, 1);
corshiva.lua_old:                               UnitScript.SetUnitValue(COB.ARMO
RED, 0);
corshiva.lua_old:       SetSignalMask( SIG_swim )
corshiva.lua_old:    SetSignalMask( SIG_wake )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:    SetSignalMask( SIG_open )
corshiva.lua_old:       SetSignalMask( SIG_aim1 )
corshiva.lua_old:       SetSignalMask( SIG_aim3 )
corshroud.bos:// OffsetToScriptCodeIndexArray        898
corshroud.bos:// OffsetToScriptNameOffsetArray       8c4
corshroud.bos:// OffsetToPieceNameOffsetArray        8f0
corshroud.bos:// OffsetToScriptCode                  2c
corshroud.bos:// OffsetToNameArray                   904
corshroud.bos:// OffsetToFirstName                   904
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   133:*/               set-signal-mask 2;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
corshroud.bos:Killed(severity, corpsetype)
corshroud.bos:          corpsetype = 1 ;
corshroud.bos:          return(corpsetype);
corshroud.bos:          corpsetype = 2 ;
corshroud.bos:          return(corpsetype);
corshroud.bos:          corpsetype = 3 ;
corshroud.bos:          return(corpsetype);
corshroud.bos:  corpsetype = 3 ;
corshroud.bos:  return corpsetype;
corsilo.bos:// OffsetToScriptCodeIndexArray        c08
corsilo.bos:// OffsetToScriptNameOffsetArray       c4c
corsilo.bos:// OffsetToPieceNameOffsetArray        c90
corsilo.bos:// OffsetToScriptCode                  2c
corsilo.bos:// OffsetToNameArray                   ca4
corsilo.bos:// OffsetToFirstName                   ca4
corsilo.bos:SetMaxReloadTime(Func_Var_1)
corsilo.bos:/*   217:*/ set-signal-mask 0;
corsilo.bos:/*   22c:*/ set-signal-mask SIG_AIM;
corsilo.bos:Killed(severity, corpsetype)
corsilo.bos:            corpsetype = 1 ;
corsilo.bos:            return(corpsetype);
corsilo.bos:            corpsetype = 2 ;
corsilo.bos:            return(corpsetype);
corsilo.bos:            corpsetype = 3 ;
corsilo.bos:            return(corpsetype);
corsilo.bos:    corpsetype = 3 ;
corsilo.bos:    return corpsetype;
Binary file corsilo.cob matches
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set-signal-mask 4;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
corsjam.bos:    set-signal-mask SIG_MOVE;
corsjam.bos:Killed(severity, corpsetype)
corsjam.bos:            corpsetype = 1 ;
corsjam.bos:            return(corpsetype);
corsjam.bos:            corpsetype = 2 ;
corsjam.bos:            return(corpsetype);
corsjam.bos:            corpsetype = 3 ;
corsjam.bos:            return(corpsetype);
corsjam.bos:    corpsetype = 3 ;
corsjam.bos:    return corpsetype;
corsktl.bos:Killed(severity, corpsetype)
corsktl.bos:            corpsetype = 1 ;
corsktl.bos:            return(corpsetype);
corsktl.bos:            corpsetype = 2 ;
corsktl.bos:            return(corpsetype);
corsktl.bos:            corpsetype = 3 ;
corsktl.bos:            return(corpsetype);
corsktl.bos:    corpsetype = 3 ;
corsktl.bos:    return corpsetype;
corsnap.bos:            // Set values for tilt
corsnap.bos:    set-signal-mask SIG_MOVE;
corsnap.bos:setSFXoccupy(Func_Var_1)
corsnap.bos:SetMaxReloadTime(Func_Var_1)
corsnap.bos:SetStunned(State)
corsnap.bos:    set-signal-mask SIG_AIM;
corsnap.bos:Killed(severity, corpsetype)
corsnap.bos:            corpsetype = 1 ;
corsnap.bos:            return(corpsetype);
corsnap.bos:            corpsetype = 2 ;
corsnap.bos:            return(corpsetype);
corsnap.bos:            corpsetype = 3 ;
corsnap.bos:            return(corpsetype);
corsnap.bos:    corpsetype = 3 ;
corsnap.bos:    return corpsetype;
Binary file corsnap.cob matches
corsok.bos:     set-signal-mask SIG_MOVE;
corsok.bos:setSFXoccupy(state)
corsok.bos:SetStunned(State)
corsok.bos:     set-signal-mask SIG_AIM;
corsok.bos:     set-signal-mask SIG_AIM_3;
corsok.bos:Killed(severity, corpsetype)
corsok.bos:                     corpsetype = 1;
corsok.bos:                     return (corpsetype);
corsok.bos:             corpsetype = 2;
corsok.bos:             return (corpsetype);
corsok.bos:             corpsetype = 3;
corsok.bos:             return (corpsetype);
corsok.bos:     corpsetype = 3;
corsok.bos:     return (corpsetype);
Binary file corsok.cob matches
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set-signal-mask 2;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corsolar.bos:Killed(severity, corpsetype)
corsolar.bos:           corpsetype = 1 ;
corsolar.bos:           return(corpsetype);
corsolar.bos:           corpsetype = 2 ;
corsolar.bos:           return(corpsetype);
corsolar.bos:           corpsetype = 3 ;
corsolar.bos:           return(corpsetype);
corsolar.bos:   corpsetype = 3 ;
corsolar.bos:   return corpsetype;
corsonar.bos:// OffsetToScriptCodeIndexArray        42c
corsonar.bos:// OffsetToScriptNameOffsetArray       450
corsonar.bos:// OffsetToPieceNameOffsetArray        474
corsonar.bos:// OffsetToScriptCode                  2c
corsonar.bos:// OffsetToNameArray                   47c
corsonar.bos:// OffsetToFirstName                   47c
corsonar.bos:Killed(severity, corpsetype)
corsonar.bos:           corpsetype = 1 ;
corsonar.bos:           return(corpsetype);
corsonar.bos:           corpsetype = 2 ;
corsonar.bos:           return(corpsetype);
corsonar.bos:           corpsetype = 3 ;
corsonar.bos:           return(corpsetype);
corsonar.bos:   corpsetype = 3 ;
corsonar.bos:   return corpsetype;
corspec.bos:    set-signal-mask SIG_WALK;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:    set-signal-mask SIG_ACTIVATE;
corspec.bos:    set-signal-mask SIG_ACTIVATE;
corspec.bos:            set-signal-mask 4;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
corspec.bos:SetStunned(State)
corspec.bos:Killed(severity, corpsetype)
corspec.bos:            corpsetype = 1 ;
corspec.bos:            return(corpsetype);
corspec.bos:            corpsetype = 2 ;
corspec.bos:            return(corpsetype);
corspec.bos:            corpsetype = 3 ;
corspec.bos:            return(corpsetype);
corspec.bos:    corpsetype = 3 ;
corspec.bos:    return corpsetype;
Binary file corspec.cob matches
corspy.bos:     //set-signal-mask SIG_WALK;
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
corspy.bos:setSFXoccupy(Func_Var_1)
corspy.bos:Killed(severity, corpsetype)
corspy.bos:             corpsetype = 1 ;
corspy.bos:             return(corpsetype);
corspy.bos:             corpsetype = 2 ;
corspy.bos:             return(corpsetype);
corspy.bos:             corpsetype = 3 ;
corspy.bos:             return(corpsetype);
corspy.bos:     corpsetype = 3 ;
corspy.bos:     return corpsetype;
Binary file corspy.cob matches
corssub.bos:    set-signal-mask SIG_MOVE;
corssub.bos:Killed(severity, corpsetype)
corssub.bos:            corpsetype = 1 ;
corssub.bos:            return(corpsetype);
corssub.bos:            corpsetype = 2 ;
corssub.bos:            return(corpsetype);
corssub.bos:            corpsetype = 3 ;
corssub.bos:            return(corpsetype);
corssub.bos:    corpsetype = 3 ;
corssub.bos:    return corpsetype;
corstorm.bos:   set-signal-mask SIG_WALK;       if (bMoving) { //Frame:4
corstorm.bos:   set-signal-mask SIG_MOVE;
corstorm.bos:SetStunned(State)
corstorm.bos:   set-signal-mask SIG_AIM;
corstorm.bos:Killed(severity, corpsetype)
corstorm.bos:           corpsetype = 1 ;
corstorm.bos:           return(corpsetype);
corstorm.bos:           corpsetype = 2 ;
corstorm.bos:           return(corpsetype);
corstorm.bos:           corpsetype = 3 ;
corstorm.bos:           return(corpsetype);
corstorm.bos:   corpsetype = 3 ;
corstorm.bos:   return corpsetype;
Binary file corstorm.cob matches
corsub.bos:     set-signal-mask SIG_MOVE;
corsub.bos:Killed(severity, corpsetype)
corsub.bos:             corpsetype = 1 ;
corsub.bos:             return(corpsetype);
corsub.bos:             corpsetype = 2 ;
corsub.bos:             return(corpsetype);
corsub.bos:             corpsetype = 3 ;
corsub.bos:             return(corpsetype);
corsub.bos:     corpsetype = 3 ;
corsub.bos:     return corpsetype;
corsumo.bos:    set-signal-mask SIG_WALK;
corsumo.bos:SetMaxReloadTime(Func_Var_1)
corsumo.bos:    set-signal-mask SIG_AIM;
corsumo.bos:Killed(severity, corpsetype)
corsumo.bos:            corpsetype = 1;
corsumo.bos:            return (corpsetype);
corsumo.bos:            corpsetype = 2;
corsumo.bos:            return (corpsetype);
corsumo.bos:            corpsetype = 3;
corsumo.bos:            return (corpsetype);
corsumo.bos:    corpsetype = 3;
corsumo.bos:    return (corpsetype);
Binary file corsumo.cob matches
corsumo.lua_old:        SetSignalMask(SIG_WALK)
corsumo.lua_old:    SetSignalMask(SIG_RESTORE)
corsumo.lua_old:                SetSignalMask(SIG_AIM)
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
corsy.bos:      set-signal-mask SIG_ACTIVATE;
corsy.bos:      set-signal-mask 0;
corsy.bos:Killed(severity, corpsetype)
corsy.bos:              corpsetype = 1 ;
corsy.bos:              return(corpsetype);
corsy.bos:              corpsetype = 2 ;
corsy.bos:              return(corpsetype);
corsy.bos:              corpsetype = 3 ;
corsy.bos:              return(corpsetype);
corsy.bos:      corpsetype = 3 ;
corsy.bos:      return corpsetype;
cortarg.bos:// OffsetToScriptCodeIndexArray        d6c
cortarg.bos:// OffsetToScriptNameOffsetArray       d98
cortarg.bos:// OffsetToPieceNameOffsetArray        dc4
cortarg.bos:// OffsetToScriptCode                  2c
cortarg.bos:// OffsetToNameArray                   dec
cortarg.bos:// OffsetToFirstName                   dec
cortarg.bos:/*   1a1:*/ set-signal-mask 2;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
cortarg.bos:Killed(severity, corpsetype)
cortarg.bos:            corpsetype = 1 ;
cortarg.bos:            return(corpsetype);
cortarg.bos:            corpsetype = 2 ;
cortarg.bos:            return(corpsetype);
cortarg.bos:            corpsetype = 3 ;
cortarg.bos:            return(corpsetype);
cortarg.bos:    corpsetype = 3 ;
cortarg.bos:    return corpsetype;
cortermite.bos: set-signal-mask SIG_MOVE;
cortermite.bos: set-signal-mask SIG_MOVE;
cortermite.bos:SetMaxReloadTime(Func_Var_1)
cortermite.bos:SetStunned(State)
cortermite.bos: set-signal-mask SIG_AIM;
cortermite.bos:Killed(severity, corpsetype)
cortermite.bos:         corpsetype = 1 ;
cortermite.bos:         return(corpsetype);
cortermite.bos:         corpsetype = 2 ;
cortermite.bos:         return(corpsetype);
cortermite.bos:         corpsetype = 3 ;
cortermite.bos:         return(corpsetype);
cortermite.bos: corpsetype = 3 ;
cortermite.bos: return corpsetype;
Binary file cortermite.cob matches
corthovr.bos:           // Set values for tilt
corthovr.bos:   set-signal-mask SIG_MOVE;
corthovr.bos:setSFXoccupy(Func_Var_1)
corthovr.bos:   set-signal-mask 4;
corthovr.bos:BoomReset()
corthovr.bos:           set BUSY to 1;
corthovr.bos:           call-script BoomReset();
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           call-script BoomReset();
corthovr.bos:           set BUSY to 0;
corthovr.bos:Killed(severity, corpsetype)
corthovr.bos:           corpsetype = 1 ;
corthovr.bos:           return(corpsetype);
corthovr.bos:           corpsetype = 2 ;
corthovr.bos:           return(corpsetype);
corthovr.bos:           corpsetype = 3 ;
corthovr.bos:           return(corpsetype);
corthovr.bos:   corpsetype = 3 ;
corthovr.bos:   return corpsetype;
Binary file corthovr.cob matches
corthud.bos:    set-signal-mask SIG_WALK;
corthud.bos:SetStunned(State)
corthud.bos:    set-signal-mask SIG_AIM;
corthud.bos:Killed(severity, corpsetype)
corthud.bos:            corpsetype = 1 ;
corthud.bos:            return(corpsetype);
corthud.bos:            corpsetype = 2 ;
corthud.bos:            return(corpsetype);
corthud.bos:            corpsetype = 3 ;
corthud.bos:            return(corpsetype);
corthud.bos:    corpsetype = 3 ;
corthud.bos:    return corpsetype;
Binary file corthud.cob matches
cortide.bos:Killed(severity, corpsetype)
cortide.bos:            corpsetype = 1 ;
cortide.bos:            return(corpsetype);
cortide.bos:            corpsetype = 2 ;
cortide.bos:            return(corpsetype);
cortide.bos:            corpsetype = 3 ;
cortide.bos:            return(corpsetype);
cortide.bos:    corpsetype = 3 ;
cortide.bos:    return corpsetype;
cortitan.bos:Killed(severity, corpsetype)
cortitan.bos:           corpsetype = 1 ;
cortitan.bos:           return(corpsetype);
cortitan.bos:           corpsetype = 2 ;
cortitan.bos:           return(corpsetype);
cortitan.bos:           corpsetype = 3 ;
cortitan.bos:           return(corpsetype);
cortitan.bos:   corpsetype = 3 ;
cortitan.bos:   return corpsetype;
cortl.bos:      set-signal-mask SIG_AIM;
cortl.bos:Killed(severity, corpsetype)
cortl.bos:              corpsetype = 1 ;
cortl.bos:              return(corpsetype);
cortl.bos:              corpsetype = 2 ;
cortl.bos:              return(corpsetype);
cortl.bos:              corpsetype = 3 ;
cortl.bos:              return(corpsetype);
cortl.bos:      corpsetype = 3 ;
cortl.bos:      return corpsetype;
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
cortoast.bos:   set-signal-mask 0;
cortoast.bos:SetStunned(State)
cortoast.bos:   set-signal-mask SIG_AIM;
cortoast.bos:   set-signal-mask 2;
cortoast.bos:/*SetMaxReloadTime(Func_Var_1)
cortoast.bos:Killed(severity, corpsetype)
cortoast.bos:           corpsetype = 1 ;
cortoast.bos:           return(corpsetype);
cortoast.bos:           corpsetype = 2 ;
cortoast.bos:           return(corpsetype);
cortoast.bos:           corpsetype = 3 ;
cortoast.bos:           return(corpsetype);
cortoast.bos:   corpsetype = 3 ;
cortoast.bos:   return corpsetype;
Binary file cortoast.cob matches
cortrem.bos:SetStunned(State)
cortrem.bos:    set-signal-mask SIG_AIM;
cortrem.bos:Killed(severity, corpsetype)
cortrem.bos:            corpsetype = 1 ;
cortrem.bos:            return(corpsetype);
cortrem.bos:            corpsetype = 2 ;
cortrem.bos:            return(corpsetype);
cortrem.bos:            corpsetype = 3 ;
cortrem.bos:            return(corpsetype);
cortrem.bos:    corpsetype = 3 ;
cortrem.bos:    return corpsetype;
Binary file cortrem.cob matches
cortron.bos:// OffsetToScriptCodeIndexArray        c08
cortron.bos:// OffsetToScriptNameOffsetArray       c4c
cortron.bos:// OffsetToPieceNameOffsetArray        c90
cortron.bos:// OffsetToScriptCode                  2c
cortron.bos:// OffsetToNameArray                   ca4
cortron.bos:// OffsetToFirstName                   ca4
cortron.bos:SetMaxReloadTime(Func_Var_1)
cortron.bos:/*   217:*/ set-signal-mask 0;
cortron.bos:/*   22c:*/ set-signal-mask SIG_AIM;
cortron.bos:Killed(severity, corpsetype)
cortron.bos:            corpsetype = 1 ;
cortron.bos:            return(corpsetype);
cortron.bos:            corpsetype = 2 ;
cortron.bos:            return(corpsetype);
cortron.bos:            corpsetype = 3 ;
cortron.bos:            return(corpsetype);
cortron.bos:    corpsetype = 3 ;
cortron.bos:    return corpsetype;
Binary file cortron.cob matches
cortship.bos:SetDirection(heading)
cortship.bos:   set-signal-mask SIG_MOVE;
cortship.bos:   set-signal-mask 4;
cortship.bos:BoomReset()
cortship.bos:           set BUSY to 1;
cortship.bos:           call-script BoomReset();
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           call-script BoomReset();
cortship.bos:           set BUSY to 0;
cortship.bos:Killed(severity, corpsetype)
cortship.bos:           corpsetype = 1 ;
cortship.bos:           return(corpsetype);
cortship.bos:           corpsetype = 2 ;
cortship.bos:           return(corpsetype);
cortship.bos:           corpsetype = 3 ;
cortship.bos:           return(corpsetype);
cortship.bos:   corpsetype = 3 ;
cortship.bos:   return corpsetype;
Binary file cortship.cob matches
coruwadves.bos:// OffsetToScriptCodeIndexArray        5b0
coruwadves.bos:// OffsetToScriptNameOffsetArray       5c0
coruwadves.bos:// OffsetToPieceNameOffsetArray        5d0
coruwadves.bos:// OffsetToScriptCode                  2c
coruwadves.bos:// OffsetToNameArray                   5e4
coruwadves.bos:// OffsetToFirstName                   5e4
coruwadves.bos:Killed(severity, corpsetype)
coruwadves.bos:         corpsetype = 1 ;
coruwadves.bos:         return(corpsetype);
coruwadves.bos:         corpsetype = 2 ;
coruwadves.bos:         return(corpsetype);
coruwadves.bos:         corpsetype = 3 ;
coruwadves.bos:         return(corpsetype);
coruwadves.bos: corpsetype = 3 ;
coruwadves.bos: return corpsetype;
coruwadvms.bos:// OffsetToScriptCodeIndexArray        420
coruwadvms.bos:// OffsetToScriptNameOffsetArray       430
coruwadvms.bos:// OffsetToPieceNameOffsetArray        440
coruwadvms.bos:// OffsetToScriptCode                  2c
coruwadvms.bos:// OffsetToNameArray                   448
coruwadvms.bos:// OffsetToFirstName                   448
coruwadvms.bos:Killed(severity, corpsetype)
coruwadvms.bos:         corpsetype = 1 ;
coruwadvms.bos:         return(corpsetype);
coruwadvms.bos:         corpsetype = 2 ;
coruwadvms.bos:         return(corpsetype);
coruwadvms.bos:         corpsetype = 3 ;
coruwadvms.bos:         return(corpsetype);
coruwadvms.bos: corpsetype = 3 ;
coruwadvms.bos: return corpsetype;
coruwes.bos:// OffsetToScriptCodeIndexArray        2f4
coruwes.bos:// OffsetToScriptNameOffsetArray       304
coruwes.bos:// OffsetToPieceNameOffsetArray        314
coruwes.bos:// OffsetToScriptCode                  2c
coruwes.bos:// OffsetToNameArray                   31c
coruwes.bos:// OffsetToFirstName                   31c
coruwes.bos:Killed(severity, corpsetype)
coruwes.bos:            corpsetype = 1 ;
coruwes.bos:            return(corpsetype);
coruwes.bos:            corpsetype = 2 ;
coruwes.bos:            return(corpsetype);
coruwes.bos:            corpsetype = 3 ;
coruwes.bos:            return(corpsetype);
coruwes.bos:    corpsetype = 3 ;
coruwes.bos:    return corpsetype;
coruwfus.bos:// OffsetToScriptCodeIndexArray        1f0
coruwfus.bos:// OffsetToScriptNameOffsetArray       200
coruwfus.bos:// OffsetToPieceNameOffsetArray        210
coruwfus.bos:// OffsetToScriptCode                  2c
coruwfus.bos:// OffsetToNameArray                   218
coruwfus.bos:// OffsetToFirstName                   218
coruwfus.bos:Killed(severity, corpsetype)
coruwfus.bos:           corpsetype = 1 ;
coruwfus.bos:           return(corpsetype);
coruwfus.bos:           corpsetype = 2 ;
coruwfus.bos:           return(corpsetype);
coruwfus.bos:           corpsetype = 3 ;
coruwfus.bos:           return(corpsetype);
coruwfus.bos:   corpsetype = 3 ;
coruwfus.bos:   return corpsetype;
coruwmex.bos:   set-signal-mask SIG_ACTIVATE;
coruwmex.bos:SetSpeed(Func_Var_1)
coruwmex.bos:Killed(severity, corpsetype)
coruwmex.bos:           corpsetype = 1 ;
coruwmex.bos:           return(corpsetype);
coruwmex.bos:           corpsetype = 2 ;
coruwmex.bos:           return(corpsetype);
coruwmex.bos:           corpsetype = 3 ;
coruwmex.bos:           return(corpsetype);
coruwmex.bos:   corpsetype = 3 ;
coruwmex.bos:   return corpsetype;
Binary file coruwmex.cob matches
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set-signal-mask SIG_ACTIVATE;
coruwmme.bos:SetSpeed(Func_Var_1)
coruwmme.bos:Killed(severity, corpsetype)
coruwmme.bos:           corpsetype = 1 ;
coruwmme.bos:           return(corpsetype);
coruwmme.bos:           corpsetype = 2 ;
coruwmme.bos:           return(corpsetype);
coruwmme.bos:           corpsetype = 3 ;
coruwmme.bos:           return(corpsetype);
coruwmme.bos:   corpsetype = 3 ;
coruwmme.bos:   return corpsetype;
Binary file coruwmme.cob matches
coruwmmm.bos:Killed(severity, corpsetype)
coruwmmm.bos:           corpsetype = 1;
coruwmmm.bos:           return (corpsetype);
coruwmmm.bos:           corpsetype = 2;
coruwmmm.bos:           return (corpsetype);
coruwmmm.bos:           corpsetype = 3;
coruwmmm.bos:           return (corpsetype);
coruwmmm.bos:   corpsetype = 3;
coruwmmm.bos:   return (corpsetype);
coruwms.bos:// OffsetToScriptCodeIndexArray        2ec
coruwms.bos:// OffsetToScriptNameOffsetArray       2fc
coruwms.bos:// OffsetToPieceNameOffsetArray        30c
coruwms.bos:// OffsetToScriptCode                  2c
coruwms.bos:// OffsetToNameArray                   310
coruwms.bos:// OffsetToFirstName                   310
coruwms.bos:Killed(severity, corpsetype)
coruwms.bos:            corpsetype = 1 ;
coruwms.bos:            return(corpsetype);
coruwms.bos:            corpsetype = 2 ;
coruwms.bos:            return(corpsetype);
coruwms.bos:            corpsetype = 3 ;
coruwms.bos:            return(corpsetype);
coruwms.bos:    corpsetype = 3 ;
coruwms.bos:    return corpsetype;
corvalk.bos:    set-signal-mask 8;
corvalk.bos:    set-signal-mask 8;
corvalk.bos:    set-signal-mask 8;
corvalk.bos:Killed(severity, corpsetype)
corvalk.bos:            corpsetype = 1 ;
corvalk.bos:            return(corpsetype);
corvalk.bos:            corpsetype = 2 ;
corvalk.bos:            return(corpsetype);
corvalk.bos:            corpsetype = 3 ;
corvalk.bos:            return(corpsetype);
corvalk.bos:    corpsetype = 3 ;
corvalk.bos:    return corpsetype;
corvamp.bos:Killed(severity, corpsetype)
corvamp.bos:            corpsetype = 1 ;
corvamp.bos:            return(corpsetype);
corvamp.bos:            corpsetype = 2 ;
corvamp.bos:            return(corpsetype);
corvamp.bos:            corpsetype = 3 ;
corvamp.bos:            return(corpsetype);
corvamp.bos:    corpsetype = 3 ;
corvamp.bos:    return corpsetype;
corveng.bos:Killed(severity, corpsetype)
corveng.bos:            corpsetype = 1 ;
corveng.bos:            return(corpsetype);
corveng.bos:            corpsetype = 2 ;
corveng.bos:            return(corpsetype);
corveng.bos:            corpsetype = 3 ;
corveng.bos:            return(corpsetype);
corveng.bos:    corpsetype = 3 ;
corveng.bos:    return corpsetype;
corvipe.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE + SIG_AIM);
corvipe.lua:    UnitScript.SetUnitValue(COB.ARMORED, 1);
corvipe.lua:    UnitScript.SetSignalMask(SIG_OPENCLOSE);
corvipe.lua:    UnitScript.SetUnitValue(COB.ARMORED, 0);
corvipe.lua:    UnitScript.SetSignalMask(SIG_AIM);
corvipe.lua:    local corpsetype;
corvipe.lua:            if (not is_open) then corpsetype = 1; end
corvipe.lua:            if (is_open) then corpsetype = 2; end
corvipe.lua:            return corpsetype;
corvipe.lua:            if (not is_open) then corpsetype = 2; end
corvipe.lua:            if (is_open) then corpsetype = 3; end
corvipe.lua:            return corpsetype;
corvipe.lua:            if (not is_open) then corpsetype = 3; end
corvipe.lua:            if (is_open) then corpsetype = 3; end
corvipe.lua:            return corpsetype;
corvipe.lua:    corpsetype = 3;
corvipe.lua:    return corpsetype;
corvoyr.bos:    set-signal-mask SIG_WALK;
corvoyr.bos:    set-signal-mask SIG_ACTIVATE;
corvoyr.bos:    set-signal-mask SIG_ACTIVATE;
corvoyr.bos:SetStunned(State)
corvoyr.bos:Killed(severity, corpsetype)
corvoyr.bos:            corpsetype = 1 ;
corvoyr.bos:            return(corpsetype);
corvoyr.bos:            corpsetype = 2 ;
corvoyr.bos:            return(corpsetype);
corvoyr.bos:            corpsetype = 3 ;
corvoyr.bos:            return(corpsetype);
corvoyr.bos:    corpsetype = 3 ;
corvoyr.bos:    return corpsetype;
Binary file corvoyr.cob matches
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvp.bos:      set-signal-mask SIG_ACTIVATE;
corvp.bos:      set-signal-mask 0;
corvp.bos:Killed(severity, corpsetype)
corvp.bos:              corpsetype = 1 ;
corvp.bos:              return(corpsetype);
corvp.bos:              corpsetype = 2 ;
corvp.bos:              return(corpsetype);
corvp.bos:              corpsetype = 3 ;
corvp.bos:              return(corpsetype);
corvp.bos:      corpsetype = 3 ;
corvp.bos:      return corpsetype;
corvp.lua:      UnitScript.SetSignalMask(SIG_OPENCLOSE);
corvp.lua:      UnitScript.SetUnitValue(COB.INBUILDSTANCE, 1);
corvp.lua:      UnitScript.SetSignalMask(SIG_OPENCLOSE);
corvp.lua:      UnitScript.SetUnitValue(COB.INBUILDSTANCE, 0);
corvp.lua:      UnitScript.SetSignalMask(SIG_ACTIVATE);
corvp.lua:      local corpsetype;
corvp.lua:              corpsetype = 1;
corvp.lua:              return corpsetype;
corvp.lua:              corpsetype = 2;
corvp.lua:              return corpsetype;
corvp.lua:              corpsetype = 3;
corvp.lua:              return corpsetype;
corvp.lua:      corpsetype = 3;
corvp.lua:      return corpsetype;
corvrad.bos:    set-signal-mask SIG_ACTIVATE;
corvrad.bos:    set-signal-mask SIG_ACTIVATE;
corvrad.bos:SetStunned(State)
corvrad.bos:Killed(severity, corpsetype)
corvrad.bos:            corpsetype = 1 ;
corvrad.bos:            return(corpsetype);
corvrad.bos:            corpsetype = 2 ;
corvrad.bos:            return(corpsetype);
corvrad.bos:            corpsetype = 3 ;
corvrad.bos:            return(corpsetype);
corvrad.bos:    corpsetype = 3 ;
corvrad.bos:    return corpsetype;
Binary file corvrad.cob matches
corvroc.bos:SetMaxReloadTime(Func_Var_1)
corvroc.bos:    set-signal-mask 0;
corvroc.bos:SetStunned(State)
corvroc.bos:    set-signal-mask SIG_RESTORE;
corvroc.bos:    set-signal-mask SIG_AIM;
corvroc.bos:Killed(severity, corpsetype)
corvroc.bos:            corpsetype = 1 ;
corvroc.bos:            return(corpsetype);
corvroc.bos:            corpsetype = 2 ;
corvroc.bos:            return(corpsetype);
corvroc.bos:            corpsetype = 3 ;
corvroc.bos:            return(corpsetype);
corvroc.bos:    corpsetype = 3 ;
corvroc.bos:    return corpsetype;
Binary file corvroc.cob matches
corwin.bos:SetSpeed(windSpd) //called every 450 frames
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:SetDirection(windDir) //called every 450 frames
corwin.bos:SetStunned(State)
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
corwin.bos:Killed(severity, corpsetype)
corwin.bos:             corpsetype = 1 ;
corwin.bos:             return(corpsetype);
corwin.bos:             corpsetype = 2 ;
corwin.bos:             return(corpsetype);
corwin.bos:             corpsetype = 3 ;
corwin.bos:             return(corpsetype);
corwin.bos:     corpsetype = 3 ;
corwin.bos:     return corpsetype;
Binary file corwin.cob matches
corwolv.bos:SetMaxReloadTime(Func_Var_1)
corwolv.bos:SetStunned(State)
corwolv.bos:    set-signal-mask SIG_AIM;
corwolv.bos:Killed(severity, corpsetype)
corwolv.bos:            corpsetype = 1 ;
corwolv.bos:            return(corpsetype);
corwolv.bos:            corpsetype = 2 ;
corwolv.bos:            return(corpsetype);
corwolv.bos:            corpsetype = 3 ;
corwolv.bos:            return(corpsetype);
corwolv.bos:    corpsetype = 3 ;
corwolv.bos:    return corpsetype;
Binary file corwolv.cob matches
exptype.h:** EXPtype.h -- Explosion Type information and GET/SET constants for s
cripts
exptype.h:#define ACTIVATION           1  // set or get
exptype.h:#define STANDINGMOVEORDERS   2  // set or get
exptype.h:#define STANDINGFIREORDERS   3  // set or get
exptype.h:#define INBUILDSTANCE        5  // set or get
exptype.h:#define BUSY                 6  // set or get (used by misc. special c
ase missions like transport ships)
exptype.h:#define YARD_OPEN           18  // set or get (change which plots we o
ccupy when building opens and closes)
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define ARMORED             20  // set or get
exptype.h:#define UPRIGHT                   79 // set or get
exptype.h:#define LOS_RADIUS                85 // set or get
exptype.h:#define AIR_LOS_RADIUS            86 // set or get
exptype.h:#define RADAR_RADIUS              87 // set or get
exptype.h:#define JAMMER_RADIUS             88 // set or get
exptype.h:#define SONAR_RADIUS              89 // set or get
exptype.h:#define SONAR_JAM_RADIUS          90 // set or get
exptype.h:#define SEISMIC_RADIUS            91 // set or get
exptype.h:#define CURRENT_FUEL              93 // set or get
exptype.h:#define SHIELD_POWER              95 // set or get
exptype.h:#define STEALTH                   96 // set or get
exptype.h:#define CRASHING                  97 // set or get, returns whether ai
rcraft isCrashing state
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
exptype.h:#define CEG_DAMAGE                99 // set
exptype.h:#define ALPHA_THRESHOLD          103 // set or get
exptype.h:#define SET_WEAPON_UNIT_TARGET   106 // get (fake set)
exptype.h:#define SET_WEAPON_GROUND_TARGET 107 // get (fake set)
exptype.h:#define SONAR_STEALTH            108 // set or get
exptype.h:// Indices for SET, GET, and GET_UNIT_VALUE for LUA return values
exptype.h:#define FLANK_B_MODE          120 // set or get
exptype.h:#define FLANK_B_DIR           121 // set or get, set is through get fo
r multiple args
exptype.h:#define FLANK_B_MOBILITY_ADD  122 // set or get
exptype.h:#define FLANK_B_MAX_DAMAGE    123 // set or get
exptype.h:#define FLANK_B_MIN_DAMAGE    124 // set or get
exptype.h:#define WEAPON_RELOADSTATE    125 // get (with fake set)  get WEAPON_R
ELOADSTATE(weaponNum)           for GET
exptype.h:#define WEAPON_RELOADTIME     126 // get (with fake set)  get WEAPON_R
ELOADSTATE(-weaponNum,val)      for SET
exptype.h:#define WEAPON_ACCURACY               127 // get (with fake set)
exptype.h:#define WEAPON_SPRAY          128 // get (with fake set)
exptype.h:#define WEAPON_RANGE          129 // get (with fake set)
exptype.h:#define WEAPON_PROJECTILE_SPEED       130 // get (with fake set)
exptype.h:#define WEAPON_STOCKPILE_COUNT  139 // get (with fake set)
exptype.h:#define ENERGY_MAKE             140 // set or get (100*E production)
exptype.h:#define METAL_MAKE              141 // set or get (100*M production)
Binary file fgrep.exe matches
LICENSE:organization, or substantially all assets of one, or subdividing an
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
meteor.bos:Killed(severity, corpsetype)
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
roost.bos:Killed(severity, corpsetype)
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:// Indices for set/get value
standard_commands_gpl.h:#define ACTIVATION              1       // set or get
standard_commands_gpl.h:#define STANDINGMOVEORDERS      2       // set or get
standard_commands_gpl.h:#define STANDINGFIREORDERS      3       // set or get
standard_commands_gpl.h:#define INBUILDSTANCE           5       // set or get
standard_commands_gpl.h:#define BUSY                    6       // set or get (u
sed by misc. special case missions like transport ships)
standard_commands_gpl.h:#define YARD_OPEN                       18      // set o
r get (change which plots we occupy when building opens and closes)
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
standard_commands_gpl.h:#define ARMORED                 20      // SET or GET.
Turns on the Armored state.
standard_commands_gpl.h:#define CURRENT_SPEED           29      // SET only, if
I'm reading the code right.  Gives us a new speed for the next frame ONLY.
standard_commands_gpl.h:#define VETERAN_LEVEL           32      // SET or GET.
Can make units super-accurate, or keep them inaccurate.
standard_commands_gpl.h:#define MAX_SPEED                       75      // SET o
nly.  Alters MaxVelocity for the given unit.
teleport.bos:Killed(severity, corpsetype)
unitDefsTurretSpeeds.h:/* unitDefsTurretSpeeds.h -- sets turret speed via unitDe
fs (through lua gadget Spring.CallCOBScript())
unitDefsTurretSpeeds.h:SetWeapon1TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon2TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon3TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon4TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon5TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon6TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon7TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon8TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon9TurretSpeed(var1,var2)
unitDefsTurretSpeeds.h:SetWeapon10TurretSpeed(var1,var2)
weapon1control.h:       start-script InitialSetup1();
weapon1control.h:       start-script Weapon1SetWtdAim(heading, pitch);
weapon1control.h:SetStunned(State)
weapon1control.h:- Weapon1Control moves the aim pieces depending on turretSpeeds
, sets pitch = 1 when pitch reached and head = 1 when head reached
weapon1control.h:- Weapon1Drawn allows unit to fire by setting wpnReady1 = 1
weapon1control.h:InitialSetup1()
weapon1control.h:Weapon1SetWtdAim(pitch, heading)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i " SET " *
armah.bos:              // Set values for tilt
armanac.bos:            // Set values for tilt
armch.bos:              // Set values for tilt
armjam.bos:             // Set values for tilt
armjam.bos:             // Set Values for differential system
fgrep: armmar_lus: Is a directory
armmh.bos:              // Set values for tilt
armserp.bos:            // Set values for tilt
armsh.bos:              // Set values for tilt
armthovr.bos:           // Set values for tilt
constants.h:#define ACTIVATION           1  // set or get
constants.h:#define STANDINGMOVEORDERS   2  // set or get
constants.h:#define STANDINGFIREORDERS   3  // set or get
constants.h:#define INBUILDSTANCE        5  // set or get
constants.h:#define BUSY                 6  // set or get (used by misc. special
 case missions like transport ships)
constants.h:#define YARD_OPEN           18  // set or get (change which plots we
 occupy when building opens and closes)
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define ARMORED             20  // set or get
constants.h:#define UPRIGHT                   79 // set or get
constants.h:#define LOS_RADIUS                85 // set or get
constants.h:#define AIR_LOS_RADIUS            86 // set or get
constants.h:#define RADAR_RADIUS              87 // set or get
constants.h:#define JAMMER_RADIUS             88 // set or get
constants.h:#define SONAR_RADIUS              89 // set or get
constants.h:#define SONAR_JAM_RADIUS          90 // set or get
constants.h:#define SEISMIC_RADIUS            91 // set or get
constants.h:#define CURRENT_FUEL              93 // set or get
constants.h:#define SHIELD_POWER              95 // set or get
constants.h:#define STEALTH                   96 // set or get
constants.h:#define CRASHING                  97 // set or get, returns whether
aircraft isCrashing state
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
constants.h:#define ALPHA_THRESHOLD          103 // set or get
constants.h:#define SONAR_STEALTH            108 // set or get
constants.h:#define FLANK_B_MODE                120 // set or get
constants.h:#define FLANK_B_DIR         121 // set or get, set is through get fo
r multiple args
constants.h:#define FLANK_B_MOBILITY_ADD        122 // set or get
constants.h:#define FLANK_B_MAX_DAMAGE  123 // set or get
constants.h:#define FLANK_B_MIN_DAMAGE  124 // set or get
constants.h:#define ENERGY_MAKE             140 // set or get (100*E production)

constants.h:#define METAL_MAKE              141 // set or get (100*M production)

corah.bos:              // Set values for tilt
corch.bos:              // Set values for tilt
corhal.bos:             // Set values for tilt
cormh.bos:              // Set values for tilt
corsh.bos:              // Set values for tilt
corsnap.bos:            // Set values for tilt
corthovr.bos:           // Set values for tilt
exptype.h:#define ACTIVATION           1  // set or get
exptype.h:#define STANDINGMOVEORDERS   2  // set or get
exptype.h:#define STANDINGFIREORDERS   3  // set or get
exptype.h:#define INBUILDSTANCE        5  // set or get
exptype.h:#define BUSY                 6  // set or get (used by misc. special c
ase missions like transport ships)
exptype.h:#define YARD_OPEN           18  // set or get (change which plots we o
ccupy when building opens and closes)
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define ARMORED             20  // set or get
exptype.h:#define UPRIGHT                   79 // set or get
exptype.h:#define LOS_RADIUS                85 // set or get
exptype.h:#define AIR_LOS_RADIUS            86 // set or get
exptype.h:#define RADAR_RADIUS              87 // set or get
exptype.h:#define JAMMER_RADIUS             88 // set or get
exptype.h:#define SONAR_RADIUS              89 // set or get
exptype.h:#define SONAR_JAM_RADIUS          90 // set or get
exptype.h:#define SEISMIC_RADIUS            91 // set or get
exptype.h:#define CURRENT_FUEL              93 // set or get
exptype.h:#define SHIELD_POWER              95 // set or get
exptype.h:#define STEALTH                   96 // set or get
exptype.h:#define CRASHING                  97 // set or get, returns whether ai
rcraft isCrashing state
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
exptype.h:#define ALPHA_THRESHOLD          103 // set or get
exptype.h:#define SONAR_STEALTH            108 // set or get
exptype.h:#define FLANK_B_MODE          120 // set or get
exptype.h:#define FLANK_B_DIR           121 // set or get, set is through get fo
r multiple args
exptype.h:#define FLANK_B_MOBILITY_ADD  122 // set or get
exptype.h:#define FLANK_B_MAX_DAMAGE    123 // set or get
exptype.h:#define FLANK_B_MIN_DAMAGE    124 // set or get
exptype.h:#define ENERGY_MAKE             140 // set or get (100*E production)
exptype.h:#define METAL_MAKE              141 // set or get (100*M production)
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define ACTIVATION              1       // set or get
standard_commands_gpl.h:#define STANDINGMOVEORDERS      2       // set or get
standard_commands_gpl.h:#define STANDINGFIREORDERS      3       // set or get
standard_commands_gpl.h:#define INBUILDSTANCE           5       // set or get
standard_commands_gpl.h:#define BUSY                    6       // set or get (u
sed by misc. special case missions like transport ships)
standard_commands_gpl.h:#define YARD_OPEN                       18      // set o
r get (change which plots we occupy when building opens and closes)
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
standard_commands_gpl.h:#define ARMORED                 20      // SET or GET.
Turns on the Armored state.
standard_commands_gpl.h:#define CURRENT_SPEED           29      // SET only, if
I'm reading the code right.  Gives us a new speed for the next frame ONLY.
standard_commands_gpl.h:#define VETERAN_LEVEL           32      // SET or GET.
Can make units super-accurate, or keep them inaccurate.
standard_commands_gpl.h:#define MAX_SPEED                       75      // SET o
nly.  Alters MaxVelocity for the given unit.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i "SET " *
armaap.bos:     set YARD_OPEN to 1;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 1;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set YARD_OPEN to 0;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 0;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set INBUILDSTANCE to 1;
armaap.bos:     set INBUILDSTANCE to 0;
armaca.bos:     set INBUILDSTANCE to 1;
armaca.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 1;
armacsub.bos:   set INBUILDSTANCE to 0;
armacsub.bos:   set INBUILDSTANCE to 1;
armacv.bos:     set INBUILDSTANCE to 0;
armacv.bos:     set INBUILDSTANCE to 1;
armadvsol.bos:  set ARMORED to 0;
armadvsol.bos:  set ARMORED to 1;
armafus.bos:    set ARMORED to 1;
armafus.bos:    set ARMORED to 0;
armah.bos:              // Set values for tilt
armalab.bos:    set YARD_OPEN to 1;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 1;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set YARD_OPEN to 0;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 0;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set INBUILDSTANCE to 1;
armalab.bos:    set INBUILDSTANCE to 0;
armamb.bos:     set ARMORED to 0;
armamb.bos:     set ARMORED to 1;
armamex.bos:    set ARMORED to 0;
armamex.bos:    set ARMORED to 1;
armamex.bos:    set ACTIVATION to 0;
armamex.bos:    set ACTIVATION to 100;
armamsub.bos:   set YARD_OPEN to 1;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 1;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set YARD_OPEN to 0;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 0;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set INBUILDSTANCE to 1;
armamsub.bos:   set INBUILDSTANCE to 0;
armanac.bos:            // Set values for tilt
armanni.bos:    set ARMORED to 0;
armanni.bos:    set ARMORED to 1;
armap.bos:      set YARD_OPEN to 1;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 1;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set YARD_OPEN to 0;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 0;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set INBUILDSTANCE to 1;
armap.bos:      set INBUILDSTANCE to 0;
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 100;
armasy.bos:     set YARD_OPEN to 1;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 1;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set YARD_OPEN to 0;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 0;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set INBUILDSTANCE to 1;
armasy.bos:     set INBUILDSTANCE to 0;
armavp.bos:     set YARD_OPEN to 1;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 1;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set YARD_OPEN to 0;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 0;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set INBUILDSTANCE to 1;
armavp.bos:     set INBUILDSTANCE to 0;
armbeaver.bos:  set INBUILDSTANCE to 0;
armbeaver.bos:  set INBUILDSTANCE to 1;
armca.bos:      set INBUILDSTANCE to 1;
armca.bos:      set INBUILDSTANCE to 0;
armch.bos:              // Set values for tilt
armch.bos:      set INBUILDSTANCE to 0;
armch.bos:      set INBUILDSTANCE to 1;
armck.bos:      set INBUILDSTANCE to 0;
armck.bos:      set INBUILDSTANCE to 1;
armckfus.bos:   set ARMORED to 1;
armckfus.bos:   set ARMORED to 0;
armclaw.bos:    set ARMORED to 0;
armclaw.bos:    set ARMORED to 1;
armcom.bos:     set INBUILDSTANCE to 1;
armcom.bos:     set INBUILDSTANCE to 0;
armcomboss.bos: set INBUILDSTANCE to 1;
armcomboss.bos: set INBUILDSTANCE to 0;
armconsul.bos:  set INBUILDSTANCE to 1;
armconsul.bos:  set INBUILDSTANCE to 0;
armcs.bos:      set INBUILDSTANCE to 0;
armcs.bos:      set INBUILDSTANCE to 1;
armcsa.bos:     set INBUILDSTANCE to 1;
armcsa.bos:     set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 1;
armdecom.lua:   -- reset parts
armdf.bos:      set ARMORED to 1;
armdf.bos:      set ARMORED to 0;
armepoch.bos:   set ARMORED to 1;
armfark.bos:    set INBUILDSTANCE to 0;
armfark.bos:    set INBUILDSTANCE to 1;
armferret.bos:  set ARMORED to 0;
armferret.bos:  set ARMORED to 1;
armfhp.bos:     set YARD_OPEN to 1;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 1;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set YARD_OPEN to 0;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 0;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set INBUILDSTANCE to 1;
armfhp.bos:     set INBUILDSTANCE to 0;
armfus.bos:     set ARMORED to 1;
armfus.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 1;
armhp.bos:      set YARD_OPEN to 1;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 1;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set YARD_OPEN to 0;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 0;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set INBUILDSTANCE to 1;
armhp.bos:      set INBUILDSTANCE to 0;
armjam.bos:             // Set values for tilt
armjam.bos:             // Set Values for differential system
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 100;
armlab.bos:     set YARD_OPEN to 1;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 1;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set YARD_OPEN to 0;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 0;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set INBUILDSTANCE to 1;
armlab.bos:     set INBUILDSTANCE to 0;
fgrep: armmar_lus: Is a directory
armmercury.bos: set DELAY_UNIT_VAR to 0;
armmerl.bos:    set ARMORED to 1;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set ARMORED to 0;
armmh.bos:              // Set values for tilt
armmls.bos:     set INBUILDSTANCE to 1;
armmls.bos:     set INBUILDSTANCE to 0;
armmlv.bos:     set INBUILDSTANCE to 1;
armmlv.bos:     set INBUILDSTANCE to 0;
armmmkr.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armmmkr.bos:    set ARMORED to 1;
armnanotc.bos:  set INBUILDSTANCE to 1;
armnanotc.bos:  set INBUILDSTANCE to 0;
armnanotcplat.bos:      set INBUILDSTANCE to 1;
armnanotcplat.bos:      set INBUILDSTANCE to 0;
armpb.bos:      set ARMORED to 0;
armpb.bos:      set ARMORED to 1;
armplat.bos:    set ARMORED to 0;
armplat.bos:    set ARMORED to 1;
armplat.bos:    set YARD_OPEN to 1;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 1;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set YARD_OPEN to 0;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 0;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set INBUILDSTANCE to 1;
armplat.bos:    set INBUILDSTANCE to 0;
armplat.bos:    set ARMORED to 1;
armrecl.bos:    set INBUILDSTANCE to 1;
armrecl.bos:    set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
armserp.bos:            // Set values for tilt
armsh.bos:              // Set values for tilt
armshltx.bos:   set YARD_OPEN to 1;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 1;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set YARD_OPEN to 0;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 0;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set INBUILDSTANCE to 1;
armshltx.bos:   set INBUILDSTANCE to 0;
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 100;
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 1;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 0;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:   set ARMORED to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:   set ARMORED to 1;
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 100;
armspy.bos:             set ACTIVATION to 0;
armspy.bos:     set INBUILDSTANCE to 1;
armspy.bos:     set INBUILDSTANCE to 0;
armspy.bos:             set ACTIVATION to 0;
armspy.bos:             set ACTIVATION to 100;
armsy.bos:      set YARD_OPEN to 1;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 1;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set YARD_OPEN to 0;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 0;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set INBUILDSTANCE to 1;
armsy.bos:      set INBUILDSTANCE to 0;
armtarg.bos:    set ARMORED to 1;
armtarg.bos:    set ACTIVATION to 0;
armtarg.bos:    set ACTIVATION to 1;
armthovr.bos:           // Set values for tilt
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
armvp.bos:      set ARMORED to 0;
armvp.bos:      set ARMORED to 1;
armvp.bos:      set YARD_OPEN to 1;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 1;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set YARD_OPEN to 0;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 0;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set INBUILDSTANCE to 1;
armvp.bos:      set INBUILDSTANCE to 0;
armvp.bos:      set ARMORED to 1;
armwin.bos:                     set ACTIVATION to 100;
armwin.bos:             set ACTIVATION to 0;
armwin.bos:             set ACTIVATION to 100;
constants.h:** EXPtype.h -- Explosion Type information and GET/SET constants for
 scripts
constants.h:#define ACTIVATION           1  // set or get
constants.h:#define STANDINGMOVEORDERS   2  // set or get
constants.h:#define STANDINGFIREORDERS   3  // set or get
constants.h:#define INBUILDSTANCE        5  // set or get
constants.h:#define BUSY                 6  // set or get (used by misc. special
 case missions like transport ships)
constants.h:#define YARD_OPEN           18  // set or get (change which plots we
 occupy when building opens and closes)
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define ARMORED             20  // set or get
constants.h:#define UPRIGHT                   79 // set or get
constants.h:#define LOS_RADIUS                85 // set or get
constants.h:#define AIR_LOS_RADIUS            86 // set or get
constants.h:#define RADAR_RADIUS              87 // set or get
constants.h:#define JAMMER_RADIUS             88 // set or get
constants.h:#define SONAR_RADIUS              89 // set or get
constants.h:#define SONAR_JAM_RADIUS          90 // set or get
constants.h:#define SEISMIC_RADIUS            91 // set or get
constants.h:#define CURRENT_FUEL              93 // set or get
constants.h:#define SHIELD_POWER              95 // set or get
constants.h:#define STEALTH                   96 // set or get
constants.h:#define CRASHING                  97 // set or get, returns whether
aircraft isCrashing state
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
constants.h:#define ALPHA_THRESHOLD          103 // set or get
constants.h:#define SONAR_STEALTH            108 // set or get
constants.h:#define FLANK_B_MODE                120 // set or get
constants.h:#define FLANK_B_DIR         121 // set or get, set is through get fo
r multiple args
constants.h:#define FLANK_B_MOBILITY_ADD        122 // set or get
constants.h:#define FLANK_B_MAX_DAMAGE  123 // set or get
constants.h:#define FLANK_B_MIN_DAMAGE  124 // set or get
constants.h:#define ENERGY_MAKE             140 // set or get (100*E production)

constants.h:#define METAL_MAKE              141 // set or get (100*M production)

coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
corah.bos:              // Set values for tilt
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:              // Set values for tilt
corch.bos:      set INBUILDSTANCE to 1;
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 0;
corcomboss.bos: set INBUILDSTANCE to 1;
corcomboss.bos: set INBUILDSTANCE to 0;
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
corerad.bos:            set CHANGE_TARGET to 1;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
corhal.bos:             // Set values for tilt
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
corkorg.bos:    set ARMORED to 1;
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
cormh.bos:              // Set values for tilt
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
corsh.bos:              // Set values for tilt
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
corsnap.bos:            // Set values for tilt
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
corthovr.bos:           // Set values for tilt
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
exptype.h:** EXPtype.h -- Explosion Type information and GET/SET constants for s
cripts
exptype.h:#define ACTIVATION           1  // set or get
exptype.h:#define STANDINGMOVEORDERS   2  // set or get
exptype.h:#define STANDINGFIREORDERS   3  // set or get
exptype.h:#define INBUILDSTANCE        5  // set or get
exptype.h:#define BUSY                 6  // set or get (used by misc. special c
ase missions like transport ships)
exptype.h:#define YARD_OPEN           18  // set or get (change which plots we o
ccupy when building opens and closes)
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define ARMORED             20  // set or get
exptype.h:#define UPRIGHT                   79 // set or get
exptype.h:#define LOS_RADIUS                85 // set or get
exptype.h:#define AIR_LOS_RADIUS            86 // set or get
exptype.h:#define RADAR_RADIUS              87 // set or get
exptype.h:#define JAMMER_RADIUS             88 // set or get
exptype.h:#define SONAR_RADIUS              89 // set or get
exptype.h:#define SONAR_JAM_RADIUS          90 // set or get
exptype.h:#define SEISMIC_RADIUS            91 // set or get
exptype.h:#define CURRENT_FUEL              93 // set or get
exptype.h:#define SHIELD_POWER              95 // set or get
exptype.h:#define STEALTH                   96 // set or get
exptype.h:#define CRASHING                  97 // set or get, returns whether ai
rcraft isCrashing state
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
exptype.h:#define ALPHA_THRESHOLD          103 // set or get
exptype.h:#define SONAR_STEALTH            108 // set or get
exptype.h:#define FLANK_B_MODE          120 // set or get
exptype.h:#define FLANK_B_DIR           121 // set or get, set is through get fo
r multiple args
exptype.h:#define FLANK_B_MOBILITY_ADD  122 // set or get
exptype.h:#define FLANK_B_MAX_DAMAGE    123 // set or get
exptype.h:#define FLANK_B_MIN_DAMAGE    124 // set or get
exptype.h:#define ENERGY_MAKE             140 // set or get (100*E production)
exptype.h:#define METAL_MAKE              141 // set or get (100*M production)
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define ACTIVATION              1       // set or get
standard_commands_gpl.h:#define STANDINGMOVEORDERS      2       // set or get
standard_commands_gpl.h:#define STANDINGFIREORDERS      3       // set or get
standard_commands_gpl.h:#define INBUILDSTANCE           5       // set or get
standard_commands_gpl.h:#define BUSY                    6       // set or get (u
sed by misc. special case missions like transport ships)
standard_commands_gpl.h:#define YARD_OPEN                       18      // set o
r get (change which plots we occupy when building opens and closes)
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
standard_commands_gpl.h:#define ARMORED                 20      // SET or GET.
Turns on the Armored state.
standard_commands_gpl.h:#define CURRENT_SPEED           29      // SET only, if
I'm reading the code right.  Gives us a new speed for the next frame ONLY.
standard_commands_gpl.h:#define VETERAN_LEVEL           32      // SET or GET.
Can make units super-accurate, or keep them inaccurate.
standard_commands_gpl.h:#define MAX_SPEED                       75      // SET o
nly.  Alters MaxVelocity for the given unit.
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i "SET.*to" *
fgrep: armmar_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i SET.*to *
fgrep: armmar_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i set.*to *
fgrep: armmar_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep
Usage: fgrep [OPTION]... PATTERN [FILE]...
Try `fgrep --help' for more information.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>man fgrep
'man' is not recognized as an internal or external command,
operable program or batch file.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep --help
Usage: fgrep [OPTION]... PATTERN [FILE] ...
Search for PATTERN in each FILE or standard input.

Regexp selection and interpretation:
  -E, --extended-regexp     PATTERN is an extended regular expression
  -F, --fixed-regexp        PATTERN is a fixed string separated by newlines
  -G, --basic-regexp        PATTERN is a basic regular expression
  -e, --regexp=PATTERN      use PATTERN as a regular expression
  -f, --file=FILE           obtain PATTERN from FILE
  -i, --ignore-case         ignore case distinctions
  -w, --word-regexp         force PATTERN to match only whole words
  -x, --line-regexp         force PATTERN to match only whole lines

Miscellaneous:
  -s, --no-messages         suppress error messages
  -v, --revert-match        select non-matching lines
  -V, --version             print version information and exit
      --help                display this help and exit

Output control:
  -b, --byte-offset         print the byte offset with output lines
  -n, --line-number         print line number with output lines
  -H, --with-filename       print the filename for each match
  -h, --no-filename         suppress the prefixing filename on output
  -q, --quiet, --silent     suppress all normal output
  -a, --text                do not suppress binary output
  -d, --directories=ACTION  how to handle directories
                            ACTION is 'read', 'recurse', or 'skip'.
  -r, --recursive           equivalent to --directories=recurse.
  -L, --files-without-match only print FILE names containing no match
  -l, --files-with-matches  only print FILE names containing matches
  -c, --count               only print a count of matching lines per FILE

Context control:
  -B, --before-context=NUM  print NUM lines of leading context
  -A, --after-context=NUM   print NUM lines of trailing context
  -C, --context[=NUM]       print NUM (default 2) lines of output context
                            unless overriden by -A or -B
  -NUM                      same as --context=NUM
  -U, --binary              do not strip CR characters at EOL (MSDOS)
  -u, --unix-byte-offsets   report offsets as if CRs were not there (MSDOS)

If no -[GEF], then `egrep' assumes -E, `fgrep' -F, else -G.
With no FILE, or when FILE is -, read standard input. If less than
two FILEs given, assume -h. Exit with 0 if matches, with 1 if none.
Exit with 2 if syntax errors or system errors.

Report bugs to <bug-gnu-utils@gnu.org>.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -e set.*to *
fgrep: armmar_lus: Is a directory
fgrep: New folder: Is a directory
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.*to *
Binary file armaak.cob matches
armaap.bos:     set YARD_OPEN to 1;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 1;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set YARD_OPEN to 0;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 0;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set INBUILDSTANCE to 1;
armaap.bos:     set INBUILDSTANCE to 0;
Binary file armaas.cob matches
armaca.bos:     set INBUILDSTANCE to 1;
armaca.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 1;
armacsub.bos:   set INBUILDSTANCE to 0;
armacsub.bos:   set INBUILDSTANCE to 1;
armacv.bos:     set INBUILDSTANCE to 0;
armacv.bos:     set INBUILDSTANCE to 1;
Binary file armacv.cob matches
armadvsol.bos:  set ARMORED to 0;
armadvsol.bos:  set ARMORED to 1;
armafus.bos:    set ARMORED to 1;
armafus.bos:    set ARMORED to 0;
Binary file armah.cob matches
armalab.bos:    set YARD_OPEN to 1;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 1;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set YARD_OPEN to 0;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 0;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set INBUILDSTANCE to 1;
armalab.bos:    set INBUILDSTANCE to 0;
armamb.bos:     set ARMORED to 0;
armamb.bos:     set ARMORED to 1;
Binary file armamb.cob matches
armamd.bos:// OffsetToScriptCodeIndexArray        f64
armamd.bos:// OffsetToScriptNameOffsetArray       fa8
armamd.bos:// OffsetToPieceNameOffsetArray        fec
armamd.bos:// OffsetToScriptCode                  2c
armamd.bos:// OffsetToNameArray                   1010
armamd.bos:// OffsetToFirstName                   1010
armamex.bos:    set ARMORED to 0;
armamex.bos:    set ARMORED to 1;
armamex.bos:    set ACTIVATION to 0;
armamex.bos:    set ACTIVATION to 100;
Binary file armamph.cob matches
armamsub.bos:   set YARD_OPEN to 1;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 1;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set YARD_OPEN to 0;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 0;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set INBUILDSTANCE to 1;
armamsub.bos:   set INBUILDSTANCE to 0;
Binary file armanac.cob matches
armanni.bos:    set ARMORED to 0;
armanni.bos:    set ARMORED to 1;
armap.bos:      set YARD_OPEN to 1;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 1;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set YARD_OPEN to 0;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 0;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set INBUILDSTANCE to 1;
armap.bos:      set INBUILDSTANCE to 0;
Binary file armart.cob matches
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 100;
Binary file armaser.cob matches
armasy.bos:     set YARD_OPEN to 1;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 1;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set YARD_OPEN to 0;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 0;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set INBUILDSTANCE to 1;
armasy.bos:     set INBUILDSTANCE to 0;
Binary file armatl.cob matches
armavp.bos:     set YARD_OPEN to 1;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 1;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set YARD_OPEN to 0;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 0;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set INBUILDSTANCE to 1;
armavp.bos:     set INBUILDSTANCE to 0;
Binary file armbanth.cob matches
Binary file armbats.cob matches
armbeaver.bos:  set INBUILDSTANCE to 0;
armbeaver.bos:  set INBUILDSTANCE to 1;
Binary file armbrawl.cob matches
Binary file armbull.cob matches
armca.bos:      set INBUILDSTANCE to 1;
armca.bos:      set INBUILDSTANCE to 0;
Binary file armcarry.cob matches
armch.bos:      set INBUILDSTANCE to 0;
armch.bos:      set INBUILDSTANCE to 1;
Binary file armch.cob matches
Binary file armcir.cob matches
armck.bos:      set INBUILDSTANCE to 0;
armck.bos:      set INBUILDSTANCE to 1;
armckfus.bos:   set ARMORED to 1;
armckfus.bos:   set ARMORED to 0;
armclaw.bos:    set ARMORED to 0;
armclaw.bos:    set ARMORED to 1;
Binary file armclaw.cob matches
armcom.bos:     set INBUILDSTANCE to 1;
armcom.bos:     set INBUILDSTANCE to 0;
armcomboss.bos: set INBUILDSTANCE to 1;
armcomboss.bos: set INBUILDSTANCE to 0;
armconsul.bos:  set INBUILDSTANCE to 1;
armconsul.bos:  set INBUILDSTANCE to 0;
Binary file armcroc.cob matches
Binary file armcrus.cob matches
armcs.bos:      set INBUILDSTANCE to 0;
armcs.bos:      set INBUILDSTANCE to 1;
Binary file armcs.cob matches
armcsa.bos:     set INBUILDSTANCE to 1;
armcsa.bos:     set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 1;
Binary file armdecade.cob matches
armdf.bos:      set ARMORED to 1;
armdf.bos:      set ARMORED to 0;
Binary file armemp.cob matches
armepoch.bos:   set ARMORED to 1;
Binary file armepoch.cob matches
armfark.bos:    set INBUILDSTANCE to 0;
armfark.bos:    set INBUILDSTANCE to 1;
Binary file armfast.cob matches
Binary file armfav.cob matches
Binary file armfboy.cob matches
armferret.bos:  set ARMORED to 0;
armferret.bos:  set ARMORED to 1;
Binary file armferret.cob matches
Binary file armfflak.cob matches
armfhp.bos:     set YARD_OPEN to 1;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 1;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set YARD_OPEN to 0;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 0;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set INBUILDSTANCE to 1;
armfhp.bos:     set INBUILDSTANCE to 0;
Binary file armfido.cob matches
Binary file armflak.cob matches
Binary file armflash.cob matches
Binary file armflea.cob matches
Binary file armfrt.cob matches
armfus.bos:     set ARMORED to 1;
armfus.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 1;
Binary file armgplat.cob matches
Binary file armgremlin.cob matches
Binary file armham.cob matches
armhp.bos:      set YARD_OPEN to 1;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 1;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set YARD_OPEN to 0;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 0;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set INBUILDSTANCE to 1;
armhp.bos:      set INBUILDSTANCE to 0;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 100;
Binary file armjanus.cob matches
Binary file armjeth.cob matches
Binary file armjuno.cob matches
Binary file armkam.cob matches
armlab.bos:     set YARD_OPEN to 1;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 1;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set YARD_OPEN to 0;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 0;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set INBUILDSTANCE to 1;
armlab.bos:     set INBUILDSTANCE to 0;
Binary file armlatnk.cob matches
Binary file armlun.cob matches
Binary file armmanni.cob matches
Binary file armmar.cob matches
fgrep: armmar_lus: Is a directory
Binary file armmark.cob matches
Binary file armmart.cob matches
Binary file armmav.cob matches
armmercury.bos: set DELAY_UNIT_VAR to 0;
Binary file armmercury.cob matches
armmerl.bos:    set ARMORED to 1;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set-signal-mask SIG_RESTORE;
Binary file armmerl.cob matches
armmh.bos:      set-signal-mask SIG_RESTORE;
Binary file armmh.cob matches
armmls.bos:     set INBUILDSTANCE to 1;
armmls.bos:     set INBUILDSTANCE to 0;
Binary file armmls.cob matches
armmlv.bos:     set INBUILDSTANCE to 1;
armmlv.bos:     set INBUILDSTANCE to 0;
armmmkr.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armmmkr.bos:    set ARMORED to 1;
Binary file armmship.cob matches
armnanotc.bos:  set INBUILDSTANCE to 1;
armnanotc.bos:  set INBUILDSTANCE to 0;
Binary file armnanotc.cob matches
armnanotcplat.bos:      set INBUILDSTANCE to 1;
armnanotcplat.bos:      set INBUILDSTANCE to 0;
Binary file armnanotcplat.cob matches
armpb.bos:      set ARMORED to 0;
armpb.bos:      set ARMORED to 1;
armpb.bos:      set-signal-mask SIG_RESTORE;
Binary file armpb.cob matches
Binary file armpincer.cob matches
armplat.bos:    set ARMORED to 0;
armplat.bos:    set ARMORED to 1;
armplat.bos:    set YARD_OPEN to 1;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 1;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set YARD_OPEN to 0;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 0;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set INBUILDSTANCE to 1;
armplat.bos:    set INBUILDSTANCE to 0;
armplat.bos:    set ARMORED to 1;
Binary file armpship.cob matches
Binary file armpt.cob matches
Binary file armptl.cob matches
armpw.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
Binary file armpw.cob matches
armrecl.bos:    set INBUILDSTANCE to 1;
armrecl.bos:    set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
Binary file armrl.cob matches
Binary file armrock.cob matches
Binary file armroy.cob matches
Binary file armsaber.cob matches
Binary file armsam.cob matches
Binary file armsb.cob matches
Binary file armscab.cob matches
Binary file armserp.cob matches
Binary file armsh.cob matches
armshltx.bos:   set YARD_OPEN to 1;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 1;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set YARD_OPEN to 0;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 0;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set INBUILDSTANCE to 1;
armshltx.bos:   set INBUILDSTANCE to 0;
armsilo.bos:// OffsetToScriptCodeIndexArray        c08
armsilo.bos:// OffsetToScriptNameOffsetArray       c4c
armsilo.bos:// OffsetToPieceNameOffsetArray        c90
armsilo.bos:// OffsetToScriptCode                  2c
armsilo.bos:// OffsetToNameArray                   ca4
armsilo.bos:// OffsetToFirstName                   ca4
Binary file armsilo.cob matches
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 100;
Binary file armsjam.cob matches
Binary file armsnipe.cob matches
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 1;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 0;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:   set ARMORED to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:   set ARMORED to 1;
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 100;
Binary file armspid.cob matches
Binary file armsptk.cob matches
armspy.bos:             set ACTIVATION to 0;
armspy.bos:     set INBUILDSTANCE to 1;
armspy.bos:     set INBUILDSTANCE to 0;
armspy.bos:             set ACTIVATION to 0;
armspy.bos:             set ACTIVATION to 100;
Binary file armstump.cob matches
Binary file armsub.cob matches
armsy.bos:      set YARD_OPEN to 1;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 1;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set YARD_OPEN to 0;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 0;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set INBUILDSTANCE to 1;
armsy.bos:      set INBUILDSTANCE to 0;
armtarg.bos:    set ARMORED to 1;
armtarg.bos:    set ACTIVATION to 0;
armtarg.bos:    set ACTIVATION to 1;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
Binary file armthovr.cob matches
Binary file armtl.cob matches
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
Binary file armtship.cob matches
Binary file armvang.cob matches
armvp.bos:      set ARMORED to 0;
armvp.bos:      set ARMORED to 1;
armvp.bos:      set YARD_OPEN to 1;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 1;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set YARD_OPEN to 0;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 0;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set INBUILDSTANCE to 1;
armvp.bos:      set INBUILDSTANCE to 0;
armvp.bos:      set ARMORED to 1;
Binary file armwar.cob matches
armwin.bos:                     set ACTIVATION to 100;
armwin.bos:             set ACTIVATION to 0;
armwin.bos:             set ACTIVATION to 100;
Binary file armwin.cob matches
Binary file armyork.cob matches
Binary file armzeus.cob matches
Binary file cob_file.pyc matches
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
Binary file coracv.cob matches
coradvsol.bos:// OffsetToScriptCodeIndexArray        54c
coradvsol.bos:// OffsetToScriptNameOffsetArray       568
coradvsol.bos:// OffsetToPieceNameOffsetArray        584
coradvsol.bos:// OffsetToScriptCode                  2c
coradvsol.bos:// OffsetToNameArray                   59c
coradvsol.bos:// OffsetToFirstName                   59c
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:// OffsetToScriptCodeIndexArray        730
corafus.bos:// OffsetToScriptNameOffsetArray       758
corafus.bos:// OffsetToPieceNameOffsetArray        780
corafus.bos:// OffsetToScriptCode                  2c
corafus.bos:// OffsetToNameArray                   794
corafus.bos:// OffsetToFirstName                   794
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
Binary file corah.cob matches
Binary file corak.cob matches
Binary file coramph.cob matches
coramsub.bos:// OffsetToScriptCodeIndexArray        bc0
coramsub.bos:// OffsetToScriptNameOffsetArray       c00
coramsub.bos:// OffsetToPieceNameOffsetArray        c40
coramsub.bos:// OffsetToScriptCode                  2c
coramsub.bos:// OffsetToNameArray                   c78
coramsub.bos:// OffsetToFirstName                   c78
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:// OffsetToScriptCodeIndexArray        11f0
corap.bos:// OffsetToScriptNameOffsetArray       123c
corap.bos:// OffsetToPieceNameOffsetArray        1288
corap.bos:// OffsetToScriptCode                  2c
corap.bos:// OffsetToNameArray                   12ac
corap.bos:// OffsetToFirstName                   12ac
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
corarad.bos:// OffsetToScriptCodeIndexArray        624
corarad.bos:// OffsetToScriptNameOffsetArray       64c
corarad.bos:// OffsetToPieceNameOffsetArray        674
corarad.bos:// OffsetToScriptCode                  2c
corarad.bos:// OffsetToNameArray                   680
corarad.bos:// OffsetToFirstName                   680
Binary file corarch.cob matches
corasp.bos:// OffsetToScriptCodeIndexArray        a94
corasp.bos:// OffsetToScriptNameOffsetArray       aac
corasp.bos:// OffsetToPieceNameOffsetArray        ac4
corasp.bos:// OffsetToScriptCode                  2c
corasp.bos:// OffsetToNameArray                   b04
corasp.bos:// OffsetToFirstName                   b04
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
Binary file corban.cob matches
Binary file corbats.cob matches
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
Binary file corblackhy.cob matches
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
Binary file corcan.cob matches
Binary file corcarry.cob matches
Binary file corcat.cob matches
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 1;
Binary file corch.cob matches
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 0;
corcomboss.bos: set INBUILDSTANCE to 1;
corcomboss.bos: set INBUILDSTANCE to 0;
Binary file corcrash.cob matches
Binary file corcrus.cob matches
Binary file corcrw.cob matches
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
Binary file corcut.cob matches
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordl.bos:// OffsetToScriptCodeIndexArray        77c
cordl.bos:// OffsetToScriptNameOffsetArray       79c
cordl.bos:// OffsetToPieceNameOffsetArray        7bc
cordl.bos:// OffsetToScriptCode                  2c
cordl.bos:// OffsetToNameArray                   7cc
cordl.bos:// OffsetToFirstName                   7cc
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
cordrag.bos:// OffsetToScriptCodeIndexArray        38
cordrag.bos:// OffsetToScriptNameOffsetArray       3c
cordrag.bos:// OffsetToPieceNameOffsetArray        40
cordrag.bos:// OffsetToScriptCode                  2c
cordrag.bos:// OffsetToNameArray                   40
cordrag.bos:// OffsetToFirstName                   40
Binary file corenaa.cob matches
corerad.bos:            set CHANGE_TARGET to 1;
Binary file corerad.cob matches
corestor.bos:// OffsetToScriptCodeIndexArray        3e8
corestor.bos:// OffsetToScriptNameOffsetArray       3f8
corestor.bos:// OffsetToPieceNameOffsetArray        408
corestor.bos:// OffsetToScriptCode                  2c
corestor.bos:// OffsetToNameArray                   414
corestor.bos:// OffsetToFirstName                   414
Binary file coresupp.cob matches
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
Binary file corexp.cob matches
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
Binary file corfav.cob matches
corfhp.bos:// OffsetToScriptCodeIndexArray        11e4
corfhp.bos:// OffsetToScriptNameOffsetArray       1230
corfhp.bos:// OffsetToPieceNameOffsetArray        127c
corfhp.bos:// OffsetToScriptCode                  2c
corfhp.bos:// OffsetToNameArray                   12a4
corfhp.bos:// OffsetToFirstName                   12a4
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
Binary file corflak.cob matches
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
Binary file corfrock.cob matches
Binary file corfrt.cob matches
corfus.bos:// OffsetToScriptCodeIndexArray        52c
corfus.bos:// OffsetToScriptNameOffsetArray       53c
corfus.bos:// OffsetToPieceNameOffsetArray        54c
corfus.bos:// OffsetToScriptCode                  2c
corfus.bos:// OffsetToNameArray                   564
corfus.bos:// OffsetToFirstName                   564
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
Binary file corgarp.cob matches
Binary file corgator.cob matches
Binary file corgol.cob matches
Binary file corhal.cob matches
corhp.bos:// OffsetToScriptCodeIndexArray        11e4
corhp.bos:// OffsetToScriptNameOffsetArray       1230
corhp.bos:// OffsetToPieceNameOffsetArray        127c
corhp.bos:// OffsetToScriptCode                  2c
corhp.bos:// OffsetToNameArray                   12a4
corhp.bos:// OffsetToFirstName                   12a4
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
Binary file corhrk.cob matches
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjamt.bos:// OffsetToScriptCodeIndexArray        744
corjamt.bos:// OffsetToScriptNameOffsetArray       76c
corjamt.bos:// OffsetToPieceNameOffsetArray        794
corjamt.bos:// OffsetToScriptCode                  2c
corjamt.bos:// OffsetToNameArray                   7a8
corjamt.bos:// OffsetToFirstName                   7a8
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
Binary file corjugg.cob matches
corjugg.lua_old:        SetSignalMask( SIG_stop )
corjuno.bos:// OffsetToScriptCodeIndexArray        d80
corjuno.bos:// OffsetToScriptNameOffsetArray       dc4
corjuno.bos:// OffsetToPieceNameOffsetArray        e08
corjuno.bos:// OffsetToScriptCode                  2c
corjuno.bos:// OffsetToNameArray                   e4c
corjuno.bos:// OffsetToFirstName                   e4c
Binary file corjuno.cob matches
corkarg.lua_old:        SetSignalMask(SIG_RESTORE)
corkorg.bos:    set ARMORED to 1;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
Binary file corkorg.cob matches
Binary file corlevlr.cob matches
Binary file cormabm.cob matches
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
Binary file cormart.cob matches
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
Binary file cormaw.cob matches
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
Binary file cormexp.cob matches
cormh.bos:      set-signal-mask SIG_RESTORE;
Binary file cormh.cob matches
Binary file cormist.cob matches
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
Binary file cormort.cob matches
Binary file cormship.cob matches
cormstor.bos:// OffsetToScriptCodeIndexArray        2f8
cormstor.bos:// OffsetToScriptNameOffsetArray       308
cormstor.bos:// OffsetToPieceNameOffsetArray        318
cormstor.bos:// OffsetToScriptCode                  2c
cormstor.bos:// OffsetToNameArray                   31c
cormstor.bos:// OffsetToFirstName                   31c
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
Binary file cornanotc.cob matches
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
Binary file cornanotcplat.cob matches
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
Binary file corparrow.cob matches
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
Binary file corpship.cob matches
Binary file corpt.cob matches
Binary file corpyro.cob matches
corrad.bos:// OffsetToScriptCodeIndexArray        54c
corrad.bos:// OffsetToScriptNameOffsetArray       574
corrad.bos:// OffsetToPieceNameOffsetArray        59c
corrad.bos:// OffsetToScriptCode                  2c
corrad.bos:// OffsetToNameArray                   5a4
corrad.bos:// OffsetToFirstName                   5a4
Binary file corraid.cob matches
Binary file correap.cob matches
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
corrl.bos:// OffsetToScriptCodeIndexArray        9cc
corrl.bos:// OffsetToScriptNameOffsetArray       9ec
corrl.bos:// OffsetToPieceNameOffsetArray        a0c
corrl.bos:// OffsetToScriptCode                  2c
corrl.bos:// OffsetToNameArray                   a2c
corrl.bos:// OffsetToFirstName                   a2c
Binary file corrl.cob matches
Binary file corroy.cob matches
Binary file corsb.cob matches
Binary file corscreamer.cob matches
corsd.bos:// OffsetToScriptCodeIndexArray        43c
corsd.bos:// OffsetToScriptNameOffsetArray       44c
corsd.bos:// OffsetToPieceNameOffsetArray        45c
corsd.bos:// OffsetToScriptCode                  2c
corsd.bos:// OffsetToNameArray                   460
corsd.bos:// OffsetToFirstName                   460
Binary file corseal.cob matches
Binary file corsent.cob matches
Binary file corsh.cob matches
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
Binary file corshiva.cob matches
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshroud.bos:// OffsetToScriptCodeIndexArray        898
corshroud.bos:// OffsetToScriptNameOffsetArray       8c4
corshroud.bos:// OffsetToPieceNameOffsetArray        8f0
corshroud.bos:// OffsetToScriptCode                  2c
corshroud.bos:// OffsetToNameArray                   904
corshroud.bos:// OffsetToFirstName                   904
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
corsilo.bos:// OffsetToScriptCodeIndexArray        c08
corsilo.bos:// OffsetToScriptNameOffsetArray       c4c
corsilo.bos:// OffsetToPieceNameOffsetArray        c90
corsilo.bos:// OffsetToScriptCode                  2c
corsilo.bos:// OffsetToNameArray                   ca4
corsilo.bos:// OffsetToFirstName                   ca4
Binary file corsilo.cob matches
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
Binary file corsnap.cob matches
Binary file corsok.cob matches
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corsonar.bos:// OffsetToScriptCodeIndexArray        42c
corsonar.bos:// OffsetToScriptNameOffsetArray       450
corsonar.bos:// OffsetToPieceNameOffsetArray        474
corsonar.bos:// OffsetToScriptCode                  2c
corsonar.bos:// OffsetToNameArray                   47c
corsonar.bos:// OffsetToFirstName                   47c
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
Binary file corspec.cob matches
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
Binary file corstorm.cob matches
Binary file corsumo.cob matches
corsumo.lua_old:    SetSignalMask(SIG_RESTORE)
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:// OffsetToScriptCodeIndexArray        d6c
cortarg.bos:// OffsetToScriptNameOffsetArray       d98
cortarg.bos:// OffsetToPieceNameOffsetArray        dc4
cortarg.bos:// OffsetToScriptCode                  2c
cortarg.bos:// OffsetToNameArray                   dec
cortarg.bos:// OffsetToFirstName                   dec
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
Binary file cortermite.cob matches
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
Binary file corthovr.cob matches
Binary file corthud.cob matches
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
Binary file cortoast.cob matches
Binary file cortrem.cob matches
cortron.bos:// OffsetToScriptCodeIndexArray        c08
cortron.bos:// OffsetToScriptNameOffsetArray       c4c
cortron.bos:// OffsetToPieceNameOffsetArray        c90
cortron.bos:// OffsetToScriptCode                  2c
cortron.bos:// OffsetToNameArray                   ca4
cortron.bos:// OffsetToFirstName                   ca4
Binary file cortron.cob matches
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
Binary file cortship.cob matches
coruwadves.bos:// OffsetToScriptCodeIndexArray        5b0
coruwadves.bos:// OffsetToScriptNameOffsetArray       5c0
coruwadves.bos:// OffsetToPieceNameOffsetArray        5d0
coruwadves.bos:// OffsetToScriptCode                  2c
coruwadves.bos:// OffsetToNameArray                   5e4
coruwadves.bos:// OffsetToFirstName                   5e4
coruwadvms.bos:// OffsetToScriptCodeIndexArray        420
coruwadvms.bos:// OffsetToScriptNameOffsetArray       430
coruwadvms.bos:// OffsetToPieceNameOffsetArray        440
coruwadvms.bos:// OffsetToScriptCode                  2c
coruwadvms.bos:// OffsetToNameArray                   448
coruwadvms.bos:// OffsetToFirstName                   448
coruwes.bos:// OffsetToScriptCodeIndexArray        2f4
coruwes.bos:// OffsetToScriptNameOffsetArray       304
coruwes.bos:// OffsetToPieceNameOffsetArray        314
coruwes.bos:// OffsetToScriptCode                  2c
coruwes.bos:// OffsetToNameArray                   31c
coruwes.bos:// OffsetToFirstName                   31c
coruwfus.bos:// OffsetToScriptCodeIndexArray        1f0
coruwfus.bos:// OffsetToScriptNameOffsetArray       200
coruwfus.bos:// OffsetToPieceNameOffsetArray        210
coruwfus.bos:// OffsetToScriptCode                  2c
coruwfus.bos:// OffsetToNameArray                   218
coruwfus.bos:// OffsetToFirstName                   218
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
coruwms.bos:// OffsetToScriptCodeIndexArray        2ec
coruwms.bos:// OffsetToScriptNameOffsetArray       2fc
coruwms.bos:// OffsetToPieceNameOffsetArray        30c
coruwms.bos:// OffsetToScriptCode                  2c
coruwms.bos:// OffsetToNameArray                   310
coruwms.bos:// OffsetToFirstName                   310
Binary file corvoyr.cob matches
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvroc.bos:    set-signal-mask SIG_RESTORE;
Binary file corvroc.cob matches
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
Binary file corwin.cob matches
Binary file corwolv.cob matches
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.*to.*; *
armaap.bos:     set YARD_OPEN to 1;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 1;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set YARD_OPEN to 0;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 0;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set INBUILDSTANCE to 1;
armaap.bos:     set INBUILDSTANCE to 0;
armaca.bos:     set INBUILDSTANCE to 1;
armaca.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 1;
armacsub.bos:   set INBUILDSTANCE to 0;
armacsub.bos:   set INBUILDSTANCE to 1;
armacv.bos:     set INBUILDSTANCE to 0;
armacv.bos:     set INBUILDSTANCE to 1;
armadvsol.bos:  set ARMORED to 0;
armadvsol.bos:  set ARMORED to 1;
armafus.bos:    set ARMORED to 1;
armafus.bos:    set ARMORED to 0;
armalab.bos:    set YARD_OPEN to 1;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 1;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set YARD_OPEN to 0;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 0;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set INBUILDSTANCE to 1;
armalab.bos:    set INBUILDSTANCE to 0;
armamb.bos:     set ARMORED to 0;
armamb.bos:     set ARMORED to 1;
armamex.bos:    set ARMORED to 0;
armamex.bos:    set ARMORED to 1;
armamex.bos:    set ACTIVATION to 0;
armamex.bos:    set ACTIVATION to 100;
armamsub.bos:   set YARD_OPEN to 1;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 1;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set YARD_OPEN to 0;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 0;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set INBUILDSTANCE to 1;
armamsub.bos:   set INBUILDSTANCE to 0;
armanni.bos:    set ARMORED to 0;
armanni.bos:    set ARMORED to 1;
armap.bos:      set YARD_OPEN to 1;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 1;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set YARD_OPEN to 0;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 0;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set INBUILDSTANCE to 1;
armap.bos:      set INBUILDSTANCE to 0;
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 100;
armasy.bos:     set YARD_OPEN to 1;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 1;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set YARD_OPEN to 0;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 0;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set INBUILDSTANCE to 1;
armasy.bos:     set INBUILDSTANCE to 0;
armavp.bos:     set YARD_OPEN to 1;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 1;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set YARD_OPEN to 0;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 0;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set INBUILDSTANCE to 1;
armavp.bos:     set INBUILDSTANCE to 0;
armbeaver.bos:  set INBUILDSTANCE to 0;
armbeaver.bos:  set INBUILDSTANCE to 1;
armca.bos:      set INBUILDSTANCE to 1;
armca.bos:      set INBUILDSTANCE to 0;
armch.bos:      set INBUILDSTANCE to 0;
armch.bos:      set INBUILDSTANCE to 1;
armck.bos:      set INBUILDSTANCE to 0;
armck.bos:      set INBUILDSTANCE to 1;
armckfus.bos:   set ARMORED to 1;
armckfus.bos:   set ARMORED to 0;
armclaw.bos:    set ARMORED to 0;
armclaw.bos:    set ARMORED to 1;
armcom.bos:     set INBUILDSTANCE to 1;
armcom.bos:     set INBUILDSTANCE to 0;
armcomboss.bos: set INBUILDSTANCE to 1;
armcomboss.bos: set INBUILDSTANCE to 0;
armconsul.bos:  set INBUILDSTANCE to 1;
armconsul.bos:  set INBUILDSTANCE to 0;
armcs.bos:      set INBUILDSTANCE to 0;
armcs.bos:      set INBUILDSTANCE to 1;
armcsa.bos:     set INBUILDSTANCE to 1;
armcsa.bos:     set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 1;
armdf.bos:      set ARMORED to 1;
armdf.bos:      set ARMORED to 0;
armepoch.bos:   set ARMORED to 1;
armfark.bos:    set INBUILDSTANCE to 0;
armfark.bos:    set INBUILDSTANCE to 1;
armferret.bos:  set ARMORED to 0;
armferret.bos:  set ARMORED to 1;
armfhp.bos:     set YARD_OPEN to 1;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 1;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set YARD_OPEN to 0;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 0;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set INBUILDSTANCE to 1;
armfhp.bos:     set INBUILDSTANCE to 0;
armfus.bos:     set ARMORED to 1;
armfus.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 1;
armhp.bos:      set YARD_OPEN to 1;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 1;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set YARD_OPEN to 0;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 0;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set INBUILDSTANCE to 1;
armhp.bos:      set INBUILDSTANCE to 0;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 100;
armlab.bos:     set YARD_OPEN to 1;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 1;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set YARD_OPEN to 0;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 0;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set INBUILDSTANCE to 1;
armlab.bos:     set INBUILDSTANCE to 0;
fgrep: armmar_lus: Is a directory
armmercury.bos: set DELAY_UNIT_VAR to 0;
armmerl.bos:    set ARMORED to 1;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set-signal-mask SIG_RESTORE;
armmh.bos:      set-signal-mask SIG_RESTORE;
armmls.bos:     set INBUILDSTANCE to 1;
armmls.bos:     set INBUILDSTANCE to 0;
armmlv.bos:     set INBUILDSTANCE to 1;
armmlv.bos:     set INBUILDSTANCE to 0;
armmmkr.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armmmkr.bos:    set ARMORED to 1;
armnanotc.bos:  set INBUILDSTANCE to 1;
armnanotc.bos:  set INBUILDSTANCE to 0;
armnanotcplat.bos:      set INBUILDSTANCE to 1;
armnanotcplat.bos:      set INBUILDSTANCE to 0;
armpb.bos:      set ARMORED to 0;
armpb.bos:      set ARMORED to 1;
armpb.bos:      set-signal-mask SIG_RESTORE;
armplat.bos:    set ARMORED to 0;
armplat.bos:    set ARMORED to 1;
armplat.bos:    set YARD_OPEN to 1;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 1;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set YARD_OPEN to 0;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 0;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set INBUILDSTANCE to 1;
armplat.bos:    set INBUILDSTANCE to 0;
armplat.bos:    set ARMORED to 1;
armrecl.bos:    set INBUILDSTANCE to 1;
armrecl.bos:    set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
armshltx.bos:   set YARD_OPEN to 1;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 1;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set YARD_OPEN to 0;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 0;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set INBUILDSTANCE to 1;
armshltx.bos:   set INBUILDSTANCE to 0;
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 100;
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 1;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 0;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:   set ARMORED to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:   set ARMORED to 1;
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 100;
armspy.bos:             set ACTIVATION to 0;
armspy.bos:     set INBUILDSTANCE to 1;
armspy.bos:     set INBUILDSTANCE to 0;
armspy.bos:             set ACTIVATION to 0;
armspy.bos:             set ACTIVATION to 100;
armsy.bos:      set YARD_OPEN to 1;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 1;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set YARD_OPEN to 0;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 0;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set INBUILDSTANCE to 1;
armsy.bos:      set INBUILDSTANCE to 0;
armtarg.bos:    set ARMORED to 1;
armtarg.bos:    set ACTIVATION to 0;
armtarg.bos:    set ACTIVATION to 1;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
armvp.bos:      set ARMORED to 0;
armvp.bos:      set ARMORED to 1;
armvp.bos:      set YARD_OPEN to 1;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 1;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set YARD_OPEN to 0;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 0;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set INBUILDSTANCE to 1;
armvp.bos:      set INBUILDSTANCE to 0;
armvp.bos:      set ARMORED to 1;
armwin.bos:                     set ACTIVATION to 100;
armwin.bos:             set ACTIVATION to 0;
armwin.bos:             set ACTIVATION to 100;
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 1;
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 0;
corcomboss.bos: set INBUILDSTANCE to 1;
corcomboss.bos: set INBUILDSTANCE to 0;
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
corerad.bos:            set CHANGE_TARGET to 1;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
corkorg.bos:    set ARMORED to 1;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
cormh.bos:      set-signal-mask SIG_RESTORE;
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvroc.bos:    set-signal-mask SIG_RESTORE;
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.+to *
Binary file armaak.cob matches
armaap.bos:     set YARD_OPEN to 1;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 1;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set YARD_OPEN to 0;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 0;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set INBUILDSTANCE to 1;
armaap.bos:     set INBUILDSTANCE to 0;
Binary file armaas.cob matches
armaca.bos:     set INBUILDSTANCE to 1;
armaca.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 1;
armacsub.bos:   set INBUILDSTANCE to 0;
armacsub.bos:   set INBUILDSTANCE to 1;
armacv.bos:     set INBUILDSTANCE to 0;
armacv.bos:     set INBUILDSTANCE to 1;
Binary file armacv.cob matches
armadvsol.bos:  set ARMORED to 0;
armadvsol.bos:  set ARMORED to 1;
armafus.bos:    set ARMORED to 1;
armafus.bos:    set ARMORED to 0;
Binary file armah.cob matches
armalab.bos:    set YARD_OPEN to 1;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 1;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set YARD_OPEN to 0;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 0;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set INBUILDSTANCE to 1;
armalab.bos:    set INBUILDSTANCE to 0;
armamb.bos:     set ARMORED to 0;
armamb.bos:     set ARMORED to 1;
Binary file armamb.cob matches
armamex.bos:    set ARMORED to 0;
armamex.bos:    set ARMORED to 1;
armamex.bos:    set ACTIVATION to 0;
armamex.bos:    set ACTIVATION to 100;
Binary file armamph.cob matches
armamsub.bos:   set YARD_OPEN to 1;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 1;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set YARD_OPEN to 0;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 0;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set INBUILDSTANCE to 1;
armamsub.bos:   set INBUILDSTANCE to 0;
Binary file armanac.cob matches
armanni.bos:    set ARMORED to 0;
armanni.bos:    set ARMORED to 1;
armap.bos:      set YARD_OPEN to 1;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 1;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set YARD_OPEN to 0;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 0;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set INBUILDSTANCE to 1;
armap.bos:      set INBUILDSTANCE to 0;
Binary file armart.cob matches
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 100;
Binary file armaser.cob matches
armasy.bos:     set YARD_OPEN to 1;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 1;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set YARD_OPEN to 0;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 0;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set INBUILDSTANCE to 1;
armasy.bos:     set INBUILDSTANCE to 0;
Binary file armatl.cob matches
armavp.bos:     set YARD_OPEN to 1;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 1;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set YARD_OPEN to 0;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 0;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set INBUILDSTANCE to 1;
armavp.bos:     set INBUILDSTANCE to 0;
Binary file armbanth.cob matches
Binary file armbats.cob matches
armbeaver.bos:  set INBUILDSTANCE to 0;
armbeaver.bos:  set INBUILDSTANCE to 1;
Binary file armbrawl.cob matches
Binary file armbull.cob matches
armca.bos:      set INBUILDSTANCE to 1;
armca.bos:      set INBUILDSTANCE to 0;
Binary file armcarry.cob matches
armch.bos:      set INBUILDSTANCE to 0;
armch.bos:      set INBUILDSTANCE to 1;
Binary file armch.cob matches
Binary file armcir.cob matches
armck.bos:      set INBUILDSTANCE to 0;
armck.bos:      set INBUILDSTANCE to 1;
armckfus.bos:   set ARMORED to 1;
armckfus.bos:   set ARMORED to 0;
armclaw.bos:    set ARMORED to 0;
armclaw.bos:    set ARMORED to 1;
Binary file armclaw.cob matches
armcom.bos:     set INBUILDSTANCE to 1;
armcom.bos:     set INBUILDSTANCE to 0;
armcomboss.bos: set INBUILDSTANCE to 1;
armcomboss.bos: set INBUILDSTANCE to 0;
armconsul.bos:  set INBUILDSTANCE to 1;
armconsul.bos:  set INBUILDSTANCE to 0;
Binary file armcroc.cob matches
Binary file armcrus.cob matches
armcs.bos:      set INBUILDSTANCE to 0;
armcs.bos:      set INBUILDSTANCE to 1;
Binary file armcs.cob matches
armcsa.bos:     set INBUILDSTANCE to 1;
armcsa.bos:     set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 1;
Binary file armdecade.cob matches
armdf.bos:      set ARMORED to 1;
armdf.bos:      set ARMORED to 0;
Binary file armemp.cob matches
armepoch.bos:   set ARMORED to 1;
Binary file armepoch.cob matches
armfark.bos:    set INBUILDSTANCE to 0;
armfark.bos:    set INBUILDSTANCE to 1;
Binary file armfast.cob matches
Binary file armfav.cob matches
Binary file armfboy.cob matches
armferret.bos:  set ARMORED to 0;
armferret.bos:  set ARMORED to 1;
Binary file armferret.cob matches
Binary file armfflak.cob matches
armfhp.bos:     set YARD_OPEN to 1;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 1;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set YARD_OPEN to 0;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 0;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set INBUILDSTANCE to 1;
armfhp.bos:     set INBUILDSTANCE to 0;
Binary file armfido.cob matches
Binary file armflak.cob matches
Binary file armflash.cob matches
Binary file armflea.cob matches
Binary file armfrt.cob matches
armfus.bos:     set ARMORED to 1;
armfus.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 1;
Binary file armgplat.cob matches
Binary file armgremlin.cob matches
Binary file armham.cob matches
armhp.bos:      set YARD_OPEN to 1;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 1;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set YARD_OPEN to 0;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 0;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set INBUILDSTANCE to 1;
armhp.bos:      set INBUILDSTANCE to 0;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 100;
Binary file armjanus.cob matches
Binary file armjeth.cob matches
Binary file armjuno.cob matches
Binary file armkam.cob matches
armlab.bos:     set YARD_OPEN to 1;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 1;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set YARD_OPEN to 0;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 0;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set INBUILDSTANCE to 1;
armlab.bos:     set INBUILDSTANCE to 0;
Binary file armlatnk.cob matches
Binary file armlun.cob matches
Binary file armmanni.cob matches
Binary file armmar.cob matches
fgrep: armmar_lus: Is a directory
Binary file armmark.cob matches
Binary file armmart.cob matches
Binary file armmav.cob matches
armmercury.bos: set DELAY_UNIT_VAR to 0;
Binary file armmercury.cob matches
armmerl.bos:    set ARMORED to 1;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set-signal-mask SIG_RESTORE;
Binary file armmerl.cob matches
armmh.bos:      set-signal-mask SIG_RESTORE;
Binary file armmh.cob matches
armmls.bos:     set INBUILDSTANCE to 1;
armmls.bos:     set INBUILDSTANCE to 0;
Binary file armmls.cob matches
armmlv.bos:     set INBUILDSTANCE to 1;
armmlv.bos:     set INBUILDSTANCE to 0;
armmmkr.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armmmkr.bos:    set ARMORED to 1;
Binary file armmship.cob matches
armnanotc.bos:  set INBUILDSTANCE to 1;
armnanotc.bos:  set INBUILDSTANCE to 0;
Binary file armnanotc.cob matches
armnanotcplat.bos:      set INBUILDSTANCE to 1;
armnanotcplat.bos:      set INBUILDSTANCE to 0;
Binary file armnanotcplat.cob matches
armpb.bos:      set ARMORED to 0;
armpb.bos:      set ARMORED to 1;
armpb.bos:      set-signal-mask SIG_RESTORE;
Binary file armpb.cob matches
Binary file armpincer.cob matches
armplat.bos:    set ARMORED to 0;
armplat.bos:    set ARMORED to 1;
armplat.bos:    set YARD_OPEN to 1;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 1;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set YARD_OPEN to 0;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 0;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set INBUILDSTANCE to 1;
armplat.bos:    set INBUILDSTANCE to 0;
armplat.bos:    set ARMORED to 1;
Binary file armpship.cob matches
Binary file armpt.cob matches
Binary file armptl.cob matches
armpw.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
Binary file armpw.cob matches
armrecl.bos:    set INBUILDSTANCE to 1;
armrecl.bos:    set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
Binary file armrl.cob matches
Binary file armrock.cob matches
Binary file armroy.cob matches
Binary file armsaber.cob matches
Binary file armsam.cob matches
Binary file armsb.cob matches
Binary file armscab.cob matches
Binary file armserp.cob matches
Binary file armsh.cob matches
armshltx.bos:   set YARD_OPEN to 1;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 1;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set YARD_OPEN to 0;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 0;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set INBUILDSTANCE to 1;
armshltx.bos:   set INBUILDSTANCE to 0;
Binary file armsilo.cob matches
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 100;
Binary file armsjam.cob matches
Binary file armsnipe.cob matches
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 1;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 0;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:   set ARMORED to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:   set ARMORED to 1;
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 100;
Binary file armspid.cob matches
Binary file armsptk.cob matches
armspy.bos:             set ACTIVATION to 0;
armspy.bos:     set INBUILDSTANCE to 1;
armspy.bos:     set INBUILDSTANCE to 0;
armspy.bos:             set ACTIVATION to 0;
armspy.bos:             set ACTIVATION to 100;
Binary file armstump.cob matches
Binary file armsub.cob matches
armsy.bos:      set YARD_OPEN to 1;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 1;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set YARD_OPEN to 0;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 0;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set INBUILDSTANCE to 1;
armsy.bos:      set INBUILDSTANCE to 0;
armtarg.bos:    set ARMORED to 1;
armtarg.bos:    set ACTIVATION to 0;
armtarg.bos:    set ACTIVATION to 1;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
Binary file armthovr.cob matches
Binary file armtl.cob matches
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
Binary file armtship.cob matches
Binary file armvang.cob matches
armvp.bos:      set ARMORED to 0;
armvp.bos:      set ARMORED to 1;
armvp.bos:      set YARD_OPEN to 1;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 1;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set YARD_OPEN to 0;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 0;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set INBUILDSTANCE to 1;
armvp.bos:      set INBUILDSTANCE to 0;
armvp.bos:      set ARMORED to 1;
Binary file armwar.cob matches
armwin.bos:                     set ACTIVATION to 100;
armwin.bos:             set ACTIVATION to 0;
armwin.bos:             set ACTIVATION to 100;
Binary file armwin.cob matches
Binary file armyork.cob matches
Binary file armzeus.cob matches
Binary file cob_file.pyc matches
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
Binary file coracv.cob matches
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
Binary file corah.cob matches
Binary file corak.cob matches
Binary file coramph.cob matches
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
Binary file corarch.cob matches
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
Binary file corban.cob matches
Binary file corbats.cob matches
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
Binary file corblackhy.cob matches
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
Binary file corcan.cob matches
Binary file corcarry.cob matches
Binary file corcat.cob matches
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 1;
Binary file corch.cob matches
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 0;
corcomboss.bos: set INBUILDSTANCE to 1;
corcomboss.bos: set INBUILDSTANCE to 0;
Binary file corcrash.cob matches
Binary file corcrus.cob matches
Binary file corcrw.cob matches
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
Binary file corcut.cob matches
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
Binary file corenaa.cob matches
corerad.bos:            set CHANGE_TARGET to 1;
Binary file corerad.cob matches
Binary file coresupp.cob matches
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
Binary file corexp.cob matches
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
Binary file corfav.cob matches
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
Binary file corflak.cob matches
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
Binary file corfrock.cob matches
Binary file corfrt.cob matches
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
Binary file corgarp.cob matches
Binary file corgator.cob matches
Binary file corgol.cob matches
Binary file corhal.cob matches
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
Binary file corhrk.cob matches
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
Binary file corjugg.cob matches
corjugg.lua_old:        SetSignalMask( SIG_stop )
Binary file corjuno.cob matches
corkarg.lua_old:        SetSignalMask(SIG_RESTORE)
corkorg.bos:    set ARMORED to 1;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
Binary file corkorg.cob matches
Binary file corlevlr.cob matches
Binary file cormabm.cob matches
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
Binary file cormart.cob matches
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
Binary file cormaw.cob matches
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
Binary file cormexp.cob matches
cormh.bos:      set-signal-mask SIG_RESTORE;
Binary file cormh.cob matches
Binary file cormist.cob matches
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
Binary file cormort.cob matches
Binary file cormship.cob matches
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
Binary file cornanotc.cob matches
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
Binary file cornanotcplat.cob matches
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
Binary file corparrow.cob matches
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
Binary file corpship.cob matches
Binary file corpt.cob matches
Binary file corpyro.cob matches
Binary file corraid.cob matches
Binary file correap.cob matches
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
Binary file corrl.cob matches
Binary file corroy.cob matches
Binary file corsb.cob matches
Binary file corscreamer.cob matches
Binary file corseal.cob matches
Binary file corsent.cob matches
Binary file corsh.cob matches
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
Binary file corshiva.cob matches
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
Binary file corsilo.cob matches
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
Binary file corsnap.cob matches
Binary file corsok.cob matches
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
Binary file corspec.cob matches
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
Binary file corstorm.cob matches
Binary file corsumo.cob matches
corsumo.lua_old:    SetSignalMask(SIG_RESTORE)
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
Binary file cortermite.cob matches
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
Binary file corthovr.cob matches
Binary file corthud.cob matches
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
Binary file cortoast.cob matches
Binary file cortrem.cob matches
Binary file cortron.cob matches
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
Binary file cortship.cob matches
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
Binary file corvoyr.cob matches
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvroc.bos:    set-signal-mask SIG_RESTORE;
Binary file corvroc.cob matches
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
Binary file corwin.cob matches
Binary file corwolv.cob matches
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.+to * > COB_SET.txt
fgrep: armmar_lus: Is a directory
^C
C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep --help
Usage: fgrep [OPTION]... PATTERN [FILE] ...
Search for PATTERN in each FILE or standard input.

Regexp selection and interpretation:
  -E, --extended-regexp     PATTERN is an extended regular expression
  -F, --fixed-regexp        PATTERN is a fixed string separated by newlines
  -G, --basic-regexp        PATTERN is a basic regular expression
  -e, --regexp=PATTERN      use PATTERN as a regular expression
  -f, --file=FILE           obtain PATTERN from FILE
  -i, --ignore-case         ignore case distinctions
  -w, --word-regexp         force PATTERN to match only whole words
  -x, --line-regexp         force PATTERN to match only whole lines

Miscellaneous:
  -s, --no-messages         suppress error messages
  -v, --revert-match        select non-matching lines
  -V, --version             print version information and exit
      --help                display this help and exit

Output control:
  -b, --byte-offset         print the byte offset with output lines
  -n, --line-number         print line number with output lines
  -H, --with-filename       print the filename for each match
  -h, --no-filename         suppress the prefixing filename on output
  -q, --quiet, --silent     suppress all normal output
  -a, --text                do not suppress binary output
  -d, --directories=ACTION  how to handle directories
                            ACTION is 'read', 'recurse', or 'skip'.
  -r, --recursive           equivalent to --directories=recurse.
  -L, --files-without-match only print FILE names containing no match
  -l, --files-with-matches  only print FILE names containing matches
  -c, --count               only print a count of matching lines per FILE

Context control:
  -B, --before-context=NUM  print NUM lines of leading context
  -A, --after-context=NUM   print NUM lines of trailing context
  -C, --context[=NUM]       print NUM (default 2) lines of output context
                            unless overriden by -A or -B
  -NUM                      same as --context=NUM
  -U, --binary              do not strip CR characters at EOL (MSDOS)
  -u, --unix-byte-offsets   report offsets as if CRs were not there (MSDOS)

If no -[GEF], then `egrep' assumes -E, `fgrep' -F, else -G.
With no FILE, or when FILE is -, read standard input. If less than
two FILEs given, assume -h. Exit with 0 if matches, with 1 if none.
Exit with 2 if syntax errors or system errors.

Report bugs to <bug-gnu-utils@gnu.org>.

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>fgrep -i -E set.+to *
Binary file armaak.cob matches
armaap.bos:     set YARD_OPEN to 1;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 1;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set YARD_OPEN to 0;
armaap.bos:             set BUGGER_OFF to 1;
armaap.bos:             set YARD_OPEN to 0;
armaap.bos:     set BUGGER_OFF to 0;
armaap.bos:     set INBUILDSTANCE to 1;
armaap.bos:     set INBUILDSTANCE to 0;
Binary file armaas.cob matches
armaca.bos:     set INBUILDSTANCE to 1;
armaca.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 0;
armack.bos:     set INBUILDSTANCE to 1;
armacsub.bos:   set INBUILDSTANCE to 0;
armacsub.bos:   set INBUILDSTANCE to 1;
armacv.bos:     set INBUILDSTANCE to 0;
armacv.bos:     set INBUILDSTANCE to 1;
Binary file armacv.cob matches
armadvsol.bos:  set ARMORED to 0;
armadvsol.bos:  set ARMORED to 1;
armafus.bos:    set ARMORED to 1;
armafus.bos:    set ARMORED to 0;
Binary file armah.cob matches
armalab.bos:    set YARD_OPEN to 1;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 1;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set YARD_OPEN to 0;
armalab.bos:            set BUGGER_OFF to 1;
armalab.bos:            set YARD_OPEN to 0;
armalab.bos:    set BUGGER_OFF to 0;
armalab.bos:    set INBUILDSTANCE to 1;
armalab.bos:    set INBUILDSTANCE to 0;
armamb.bos:     set ARMORED to 0;
armamb.bos:     set ARMORED to 1;
Binary file armamb.cob matches
armamex.bos:    set ARMORED to 0;
armamex.bos:    set ARMORED to 1;
armamex.bos:    set ACTIVATION to 0;
armamex.bos:    set ACTIVATION to 100;
Binary file armamph.cob matches
armamsub.bos:   set YARD_OPEN to 1;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 1;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set YARD_OPEN to 0;
armamsub.bos:           set BUGGER_OFF to 1;
armamsub.bos:           set YARD_OPEN to 0;
armamsub.bos:   set BUGGER_OFF to 0;
armamsub.bos:   set INBUILDSTANCE to 1;
armamsub.bos:   set INBUILDSTANCE to 0;
Binary file armanac.cob matches
armanni.bos:    set ARMORED to 0;
armanni.bos:    set ARMORED to 1;
armap.bos:      set YARD_OPEN to 1;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 1;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set YARD_OPEN to 0;
armap.bos:              set BUGGER_OFF to 1;
armap.bos:              set YARD_OPEN to 0;
armap.bos:      set BUGGER_OFF to 0;
armap.bos:      set INBUILDSTANCE to 1;
armap.bos:      set INBUILDSTANCE to 0;
Binary file armart.cob matches
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 0;
armaser.bos:            set ACTIVATION to 100;
Binary file armaser.cob matches
armasy.bos:     set YARD_OPEN to 1;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 1;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set YARD_OPEN to 0;
armasy.bos:             set BUGGER_OFF to 1;
armasy.bos:             set YARD_OPEN to 0;
armasy.bos:     set BUGGER_OFF to 0;
armasy.bos:     set INBUILDSTANCE to 1;
armasy.bos:     set INBUILDSTANCE to 0;
Binary file armatl.cob matches
armavp.bos:     set YARD_OPEN to 1;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 1;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set YARD_OPEN to 0;
armavp.bos:             set BUGGER_OFF to 1;
armavp.bos:             set YARD_OPEN to 0;
armavp.bos:     set BUGGER_OFF to 0;
armavp.bos:     set INBUILDSTANCE to 1;
armavp.bos:     set INBUILDSTANCE to 0;
Binary file armbanth.cob matches
Binary file armbats.cob matches
armbeaver.bos:  set INBUILDSTANCE to 0;
armbeaver.bos:  set INBUILDSTANCE to 1;
Binary file armbrawl.cob matches
Binary file armbull.cob matches
armca.bos:      set INBUILDSTANCE to 1;
armca.bos:      set INBUILDSTANCE to 0;
Binary file armcarry.cob matches
armch.bos:      set INBUILDSTANCE to 0;
armch.bos:      set INBUILDSTANCE to 1;
Binary file armch.cob matches
Binary file armcir.cob matches
armck.bos:      set INBUILDSTANCE to 0;
armck.bos:      set INBUILDSTANCE to 1;
armckfus.bos:   set ARMORED to 1;
armckfus.bos:   set ARMORED to 0;
armclaw.bos:    set ARMORED to 0;
armclaw.bos:    set ARMORED to 1;
Binary file armclaw.cob matches
armcom.bos:     set INBUILDSTANCE to 1;
armcom.bos:     set INBUILDSTANCE to 0;
armcomboss.bos: set INBUILDSTANCE to 1;
armcomboss.bos: set INBUILDSTANCE to 0;
armconsul.bos:  set INBUILDSTANCE to 1;
armconsul.bos:  set INBUILDSTANCE to 0;
Binary file armcroc.cob matches
Binary file armcrus.cob matches
armcs.bos:      set INBUILDSTANCE to 0;
armcs.bos:      set INBUILDSTANCE to 1;
Binary file armcs.cob matches
armcsa.bos:     set INBUILDSTANCE to 1;
armcsa.bos:     set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 0;
armcv.bos:      set INBUILDSTANCE to 1;
Binary file armdecade.cob matches
armdf.bos:      set ARMORED to 1;
armdf.bos:      set ARMORED to 0;
Binary file armemp.cob matches
armepoch.bos:   set ARMORED to 1;
Binary file armepoch.cob matches
armfark.bos:    set INBUILDSTANCE to 0;
armfark.bos:    set INBUILDSTANCE to 1;
Binary file armfast.cob matches
Binary file armfav.cob matches
Binary file armfboy.cob matches
armferret.bos:  set ARMORED to 0;
armferret.bos:  set ARMORED to 1;
Binary file armferret.cob matches
Binary file armfflak.cob matches
armfhp.bos:     set YARD_OPEN to 1;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 1;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set YARD_OPEN to 0;
armfhp.bos:             set BUGGER_OFF to 1;
armfhp.bos:             set YARD_OPEN to 0;
armfhp.bos:     set BUGGER_OFF to 0;
armfhp.bos:     set INBUILDSTANCE to 1;
armfhp.bos:     set INBUILDSTANCE to 0;
Binary file armfido.cob matches
Binary file armflak.cob matches
Binary file armflash.cob matches
Binary file armflea.cob matches
Binary file armfrt.cob matches
armfus.bos:     set ARMORED to 1;
armfus.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 0;
armgmm.bos:     set ARMORED to 1;
Binary file armgplat.cob matches
Binary file armgremlin.cob matches
Binary file armham.cob matches
armhp.bos:      set YARD_OPEN to 1;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 1;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set YARD_OPEN to 0;
armhp.bos:              set BUGGER_OFF to 1;
armhp.bos:              set YARD_OPEN to 0;
armhp.bos:      set BUGGER_OFF to 0;
armhp.bos:      set INBUILDSTANCE to 1;
armhp.bos:      set INBUILDSTANCE to 0;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 0;
armjam.bos:             set ACTIVATION to 100;
Binary file armjanus.cob matches
Binary file armjeth.cob matches
Binary file armjuno.cob matches
Binary file armkam.cob matches
armlab.bos:     set YARD_OPEN to 1;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 1;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set YARD_OPEN to 0;
armlab.bos:             set BUGGER_OFF to 1;
armlab.bos:             set YARD_OPEN to 0;
armlab.bos:     set BUGGER_OFF to 0;
armlab.bos:     set INBUILDSTANCE to 1;
armlab.bos:     set INBUILDSTANCE to 0;
Binary file armlatnk.cob matches
Binary file armlun.cob matches
Binary file armmanni.cob matches
Binary file armmar.cob matches
fgrep: armmar_lus: Is a directory
Binary file armmark.cob matches
Binary file armmart.cob matches
Binary file armmav.cob matches
armmercury.bos: set DELAY_UNIT_VAR to 0;
Binary file armmercury.cob matches
armmerl.bos:    set ARMORED to 1;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set ARMORED to 0;
armmerl.bos:    set-signal-mask SIG_RESTORE;
Binary file armmerl.cob matches
armmh.bos:      set-signal-mask SIG_RESTORE;
Binary file armmh.cob matches
armmls.bos:     set INBUILDSTANCE to 1;
armmls.bos:     set INBUILDSTANCE to 0;
Binary file armmls.cob matches
armmlv.bos:     set INBUILDSTANCE to 1;
armmlv.bos:     set INBUILDSTANCE to 0;
armmmkr.bos:    set ARMORED to 0; //Not needed as MM in BAR have no damage modif
yer tag set
armmmkr.bos:    set ARMORED to 1;
Binary file armmship.cob matches
armnanotc.bos:  set INBUILDSTANCE to 1;
armnanotc.bos:  set INBUILDSTANCE to 0;
Binary file armnanotc.cob matches
armnanotcplat.bos:      set INBUILDSTANCE to 1;
armnanotcplat.bos:      set INBUILDSTANCE to 0;
Binary file armnanotcplat.cob matches
armpb.bos:      set ARMORED to 0;
armpb.bos:      set ARMORED to 1;
armpb.bos:      set-signal-mask SIG_RESTORE;
Binary file armpb.cob matches
Binary file armpincer.cob matches
armplat.bos:    set ARMORED to 0;
armplat.bos:    set ARMORED to 1;
armplat.bos:    set YARD_OPEN to 1;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 1;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set YARD_OPEN to 0;
armplat.bos:            set BUGGER_OFF to 1;
armplat.bos:            set YARD_OPEN to 0;
armplat.bos:    set BUGGER_OFF to 0;
armplat.bos:    set INBUILDSTANCE to 1;
armplat.bos:    set INBUILDSTANCE to 0;
armplat.bos:    set ARMORED to 1;
Binary file armpship.cob matches
Binary file armpt.cob matches
Binary file armptl.cob matches
armpw.bos:              bAnimate = TRUE; // this sets animation started, so that
 StopAnimate knows that it should restore state quickly
Binary file armpw.cob matches
armrecl.bos:    set INBUILDSTANCE to 1;
armrecl.bos:    set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 0;
armrectr.bos:   set INBUILDSTANCE to 1;
armrectrt4.bos: set INBUILDSTANCE to 0;
armrectrt4.bos: set INBUILDSTANCE to 1;
Binary file armrl.cob matches
Binary file armrock.cob matches
Binary file armroy.cob matches
Binary file armsaber.cob matches
Binary file armsam.cob matches
Binary file armsb.cob matches
Binary file armscab.cob matches
Binary file armserp.cob matches
Binary file armsh.cob matches
armshltx.bos:   set YARD_OPEN to 1;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 1;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set YARD_OPEN to 0;
armshltx.bos:           set BUGGER_OFF to 1;
armshltx.bos:           set YARD_OPEN to 0;
armshltx.bos:   set BUGGER_OFF to 0;
armshltx.bos:   set INBUILDSTANCE to 1;
armshltx.bos:   set INBUILDSTANCE to 0;
Binary file armsilo.cob matches
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 0;
armsjam.bos:            set ACTIVATION to 100;
Binary file armsjam.cob matches
Binary file armsnipe.cob matches
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 1;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:           set BUGGER_OFF to 1;
armsolar.bos:           set YARD_OPEN to 0;
armsolar.bos:   set BUGGER_OFF to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:   set ARMORED to 0;
armsolar.bos:   set YARD_OPEN to 0;
armsolar.bos:   set ARMORED to 1;
armsolar.bos:   set YARD_OPEN to 1;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 0;
armsolar.bos:           set ACTIVATION to 100;
Binary file armspid.cob matches
Binary file armsptk.cob matches
armspy.bos:             set ACTIVATION to 0;
armspy.bos:     set INBUILDSTANCE to 1;
armspy.bos:     set INBUILDSTANCE to 0;
armspy.bos:             set ACTIVATION to 0;
armspy.bos:             set ACTIVATION to 100;
Binary file armstump.cob matches
Binary file armsub.cob matches
armsy.bos:      set YARD_OPEN to 1;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 1;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set YARD_OPEN to 0;
armsy.bos:              set BUGGER_OFF to 1;
armsy.bos:              set YARD_OPEN to 0;
armsy.bos:      set BUGGER_OFF to 0;
armsy.bos:      set INBUILDSTANCE to 1;
armsy.bos:      set INBUILDSTANCE to 0;
armtarg.bos:    set ARMORED to 1;
armtarg.bos:    set ACTIVATION to 0;
armtarg.bos:    set ACTIVATION to 1;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
armthovr.bos:           set BUSY to 1;
armthovr.bos:           set BUSY to 0;
Binary file armthovr.cob matches
Binary file armtl.cob matches
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
armtship.bos:           set BUSY to 1;
armtship.bos:           set BUSY to 0;
Binary file armtship.cob matches
Binary file armvang.cob matches
armvp.bos:      set ARMORED to 0;
armvp.bos:      set ARMORED to 1;
armvp.bos:      set YARD_OPEN to 1;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 1;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set YARD_OPEN to 0;
armvp.bos:              set BUGGER_OFF to 1;
armvp.bos:              set YARD_OPEN to 0;
armvp.bos:      set BUGGER_OFF to 0;
armvp.bos:      set INBUILDSTANCE to 1;
armvp.bos:      set INBUILDSTANCE to 0;
armvp.bos:      set ARMORED to 1;
Binary file armwar.cob matches
armwin.bos:                     set ACTIVATION to 100;
armwin.bos:             set ACTIVATION to 0;
armwin.bos:             set ACTIVATION to 100;
Binary file armwin.cob matches
Binary file armyork.cob matches
Binary file armzeus.cob matches
Binary file cob_file.pyc matches
constants.h:#define BUGGER_OFF          19  // set or get (ask other units to cl
ear the area)
constants.h:#define CHANGE_TARGET             98 // set, the value it's set to d
etermines the affected weapon
coraap.bos:     set YARD_OPEN to 1;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 1;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set YARD_OPEN to 0;
coraap.bos:             set BUGGER_OFF to 1;
coraap.bos:             set YARD_OPEN to 0;
coraap.bos:     set BUGGER_OFF to 0;
coraap.bos:     set INBUILDSTANCE to 1;
coraap.bos:     set INBUILDSTANCE to 0;
coraca.bos:     set INBUILDSTANCE to 1;
coraca.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 0;
corack.bos:     set INBUILDSTANCE to 1;
coracsub.bos:   set INBUILDSTANCE to 0;
coracsub.bos:   set INBUILDSTANCE to 1;
coracv.bos:     set INBUILDSTANCE to 0;
coracv.bos:     set INBUILDSTANCE to 1;
Binary file coracv.cob matches
coradvsol.bos:/*    57:*/       set ARMORED to 0;
coradvsol.bos:/*    5f:*/       set ARMORED to 1;
coradvsol.bos:/*    7d:*/       set ACTIVATION to 0;
coradvsol.bos:/*    85:*/       set ACTIVATION to 100;
corafus.bos:/*    b0:*/ set ARMORED to 1;
corafus.bos:/*    ba:*/ set ARMORED to 0;
Binary file corah.cob matches
Binary file corak.cob matches
Binary file coramph.cob matches
coramsub.bos:/*    87:*/        set YARD_OPEN to 1;
coramsub.bos:/*    92:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    9a:*/                set YARD_OPEN to 1;
coramsub.bos:/*    a1:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    a9:*/        set YARD_OPEN to 0;
coramsub.bos:/*    b3:*/                set BUGGER_OFF to 1;
coramsub.bos:/*    bb:*/                set YARD_OPEN to 0;
coramsub.bos:/*    c2:*/        set BUGGER_OFF to 0;
coramsub.bos:/*    d0:*/        set INBUILDSTANCE to 1;
coramsub.bos:/*    d8:*/        set INBUILDSTANCE to 0;
corap.bos:/*   17e:*/   set YARD_OPEN to 1;
corap.bos:/*   189:*/           set BUGGER_OFF to 1;
corap.bos:/*   191:*/           set YARD_OPEN to 1;
corap.bos:/*   198:*/   set BUGGER_OFF to 0;
corap.bos:/*   1a0:*/   set YARD_OPEN to 0;
corap.bos:/*   1aa:*/           set BUGGER_OFF to 1;
corap.bos:/*   1b2:*/           set YARD_OPEN to 0;
corap.bos:/*   1b9:*/   set BUGGER_OFF to 0;
corap.bos:/*   1d5:*/   set INBUILDSTANCE to 1;
corap.bos:/*   1dd:*/   set INBUILDSTANCE to 0;
Binary file corarch.cob matches
corasy.bos:     set YARD_OPEN to 1;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 1;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set YARD_OPEN to 0;
corasy.bos:             set BUGGER_OFF to 1;
corasy.bos:             set YARD_OPEN to 0;
corasy.bos:     set BUGGER_OFF to 0;
corasy.bos:     set INBUILDSTANCE to 1;
corasy.bos:     set INBUILDSTANCE to 0;
corasye.bos:    set YARD_OPEN to 1;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 1;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set YARD_OPEN to 0;
corasye.bos:            set BUGGER_OFF to 1;
corasye.bos:            set YARD_OPEN to 0;
corasye.bos:    set BUGGER_OFF to 0;
corasye.bos:    set INBUILDSTANCE to 1;
corasye.bos:    set INBUILDSTANCE to 0;
coravp.bos:     set YARD_OPEN to 1;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 1;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set YARD_OPEN to 0;
coravp.bos:             set BUGGER_OFF to 1;
coravp.bos:             set YARD_OPEN to 0;
coravp.bos:     set BUGGER_OFF to 0;
coravp.bos:     set INBUILDSTANCE to 1;
coravp.bos:     set INBUILDSTANCE to 0;
Binary file corban.cob matches
Binary file corbats.cob matches
corbhmth.bos:   set ACTIVATION to 100;
corbhmth.bos:   set ACTIVATION to 0;
corblackhy.bos: set ARMORED to 1;
Binary file corblackhy.cob matches
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 0 - 1500 + get UNK
NOWN_UNIT_VALUE(82);
corbw.bos:                      set UNKNOWN_UNIT_VALUE(82) to 1500 + get UNKNOWN
_UNIT_VALUE(82);
corca.bos:      set INBUILDSTANCE to 1;
corca.bos:      set INBUILDSTANCE to 0;
Binary file corcan.cob matches
Binary file corcarry.cob matches
Binary file corcat.cob matches
corch.bos:      set INBUILDSTANCE to 0;
corch.bos:      set INBUILDSTANCE to 1;
Binary file corch.cob matches
corck.bos:      set INBUILDSTANCE to 0;
corck.bos:      set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 1;
corcom.bos:     set INBUILDSTANCE to 0;
corcomboss.bos: set INBUILDSTANCE to 1;
corcomboss.bos: set INBUILDSTANCE to 0;
Binary file corcrash.cob matches
Binary file corcrus.cob matches
Binary file corcrw.cob matches
corcs.bos:      set INBUILDSTANCE to 1;
corcs.bos:      set INBUILDSTANCE to 0;
corcsa.bos:     set INBUILDSTANCE to 1;
corcsa.bos:     set INBUILDSTANCE to 0;
Binary file corcut.cob matches
corcv.bos:      set INBUILDSTANCE to 0;
corcv.bos:      set INBUILDSTANCE to 1;
cordoom.bos:    set ARMORED to 0;
cordoom.bos:    set ARMORED to 1;
Binary file corenaa.cob matches
corerad.bos:            set CHANGE_TARGET to 1;
Binary file corerad.cob matches
Binary file coresupp.cob matches
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 0;
coreter.bos:            set ACTIVATION to 100;
Binary file corexp.cob matches
corfast.bos:    set INBUILDSTANCE to 1;
corfast.bos:    set INBUILDSTANCE to 0;
Binary file corfav.cob matches
corfhp.bos:/*   162:*/  set YARD_OPEN to 1;
corfhp.bos:/*   16d:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   175:*/          set YARD_OPEN to 1;
corfhp.bos:/*   17c:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   184:*/  set YARD_OPEN to 0;
corfhp.bos:/*   18e:*/          set BUGGER_OFF to 1;
corfhp.bos:/*   196:*/          set YARD_OPEN to 0;
corfhp.bos:/*   19d:*/  set BUGGER_OFF to 0;
corfhp.bos:/*   1bb:*/  set INBUILDSTANCE to 1;
corfhp.bos:/*   1c3:*/  set INBUILDSTANCE to 0;
Binary file corflak.cob matches
corfmkr.bos:                    set ACTIVATION to 1;
corfmkr.bos:                    set ACTIVATION to 0;
Binary file corfrock.cob matches
Binary file corfrt.cob matches
corgant.bos:    set YARD_OPEN to 1;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 1;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set YARD_OPEN to 0;
corgant.bos:            set BUGGER_OFF to 1;
corgant.bos:            set YARD_OPEN to 0;
corgant.bos:    set BUGGER_OFF to 0;
corgant.bos:    set INBUILDSTANCE to 1;
corgant.bos:    set INBUILDSTANCE to 0;
Binary file corgarp.cob matches
Binary file corgator.cob matches
Binary file corgol.cob matches
Binary file corhal.cob matches
corhp.bos:/*   162:*/   set YARD_OPEN to 1;
corhp.bos:/*   16d:*/           set BUGGER_OFF to 1;
corhp.bos:/*   175:*/           set YARD_OPEN to 1;
corhp.bos:/*   17c:*/   set BUGGER_OFF to 0;
corhp.bos:/*   184:*/   set YARD_OPEN to 0;
corhp.bos:/*   18e:*/           set BUGGER_OFF to 1;
corhp.bos:/*   196:*/           set YARD_OPEN to 0;
corhp.bos:/*   19d:*/   set BUGGER_OFF to 0;
corhp.bos:/*   1bb:*/   set INBUILDSTANCE to 1;
corhp.bos:/*   1c3:*/   set INBUILDSTANCE to 0;
Binary file corhrk.cob matches
corintr.bos:    set ARMORED to 1;
corintr.bos:            set BUSY to 1;
corintr.bos:            set BUSY to 0;
corintr.bos:    set BUSY to 1;
corintr.bos:    set BUSY to 0;
corjugg.bos:    set CHANGE_TARGET to 2;
corjugg.bos:    set CHANGE_TARGET to 3;
corjugg.bos:    set CHANGE_TARGET to 4;
Binary file corjugg.cob matches
corjugg.lua_old:        SetSignalMask( SIG_stop )
Binary file corjuno.cob matches
corkarg.lua_old:        SetSignalMask(SIG_RESTORE)
corkorg.bos:    set ARMORED to 1;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_L;
corkorg.bos:    set-signal-mask SIG_FOOTSTOMP_R;
Binary file corkorg.cob matches
Binary file corlevlr.cob matches
Binary file cormabm.cob matches
cormakr.bos:                            set ACTIVATION to 1;
cormakr.bos:                            set ACTIVATION to 0;
cormando.bos:   set INBUILDSTANCE to 0;
cormando.bos:   set INBUILDSTANCE to 1;
Binary file cormart.cob matches
cormaw.bos:     set ARMORED to 0;
cormaw.bos:     set ARMORED to 1;
Binary file cormaw.cob matches
cormex.bos:     set ARMORED to 0;
cormex.bos:     set ARMORED to 1;
cormexp.bos:    set ARMORED to 0;
cormexp.bos:    set ARMORED to 1;
cormexp.bos:    set ACTIVATION to 100;
cormexp.bos:            set ACTIVATION to 0;
cormexp.bos:    set ARMORED to 0;
Binary file cormexp.cob matches
cormh.bos:      set-signal-mask SIG_RESTORE;
Binary file cormh.cob matches
Binary file cormist.cob matches
cormls.bos:     set INBUILDSTANCE to 1;
cormls.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 0;
cormlv.bos:     set INBUILDSTANCE to 1;
cormmkr.bos:    set ARMORED to 0;  //Not needed as MM in BAR have no damage modi
fyer tag set
cormmkr.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 0;
cormoho.bos:    set ARMORED to 1;
cormoho.bos:    set ARMORED to 1;
Binary file cormort.cob matches
Binary file cormship.cob matches
cormuskrat.bos: set INBUILDSTANCE to 1;
cormuskrat.bos: set INBUILDSTANCE to 0;
cormuskrat.bos: set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 1;
cornanotc.bos:  set INBUILDSTANCE to 0;
Binary file cornanotc.cob matches
cornanotcplat.bos:      set INBUILDSTANCE to 1;
cornanotcplat.bos:      set INBUILDSTANCE to 0;
Binary file cornanotcplat.cob matches
cornecro.bos:   set INBUILDSTANCE to 0;
cornecro.bos:   set INBUILDSTANCE to 1;
Binary file corparrow.cob matches
corplat.bos:    set ARMORED to 0;
corplat.bos:    set ARMORED to 1;
corplat.bos:    set YARD_OPEN to 1;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 1;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set YARD_OPEN to 0;
corplat.bos:            set BUGGER_OFF to 1;
corplat.bos:            set YARD_OPEN to 0;
corplat.bos:    set BUGGER_OFF to 0;
corplat.bos:    set INBUILDSTANCE to 1;
corplat.bos:    set INBUILDSTANCE to 0;
corplat.bos:    set ARMORED to 1;
Binary file corpship.cob matches
Binary file corpt.cob matches
Binary file corpyro.cob matches
Binary file corraid.cob matches
Binary file correap.cob matches
correcl.bos:    set INBUILDSTANCE to 1;
correcl.bos:    set INBUILDSTANCE to 0;
Binary file corrl.cob matches
Binary file corroy.cob matches
Binary file corsb.cob matches
Binary file corscreamer.cob matches
Binary file corseal.cob matches
Binary file corsent.cob matches
Binary file corsh.cob matches
corshiva.bos:   set ARMORED to 1;
corshiva.bos:   set ARMORED to 0;
corshiva.bos:   set ARMORED to 1;
Binary file corshiva.cob matches
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshiva.lua_old:       SetSignalMask( SIG_stop )
corshroud.bos:/*    80:*/               set ACTIVATION to 0;
corshroud.bos:/*   138:*/               set ACTIVATION to 0;
corshroud.bos:/*   144:*/               set ACTIVATION to 100;
Binary file corsilo.cob matches
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 0;
corsjam.bos:            set ACTIVATION to 100;
Binary file corsnap.cob matches
Binary file corsok.cob matches
corsolar.bos:   set YARD_OPEN to 1;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 1;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set YARD_OPEN to 0;
corsolar.bos:           set BUGGER_OFF to 1;
corsolar.bos:           set YARD_OPEN to 0;
corsolar.bos:   set BUGGER_OFF to 0;
corsolar.bos:   set ACTIVATION to 100;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:   set ARMORED to 0;
corsolar.bos:   set ARMORED to 1;
corsolar.bos:           set ACTIVATION to 0;
corsolar.bos:           set ACTIVATION to 100;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 0;
corspec.bos:            set ACTIVATION to 100;
Binary file corspec.cob matches
corspy.bos:     set INBUILDSTANCE to 1;
corspy.bos:     set INBUILDSTANCE to 0;
Binary file corstorm.cob matches
Binary file corsumo.cob matches
corsumo.lua_old:    SetSignalMask(SIG_RESTORE)
corsy.bos:      set YARD_OPEN to 1;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 1;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set YARD_OPEN to 0;
corsy.bos:              set BUGGER_OFF to 1;
corsy.bos:              set YARD_OPEN to 0;
corsy.bos:      set BUGGER_OFF to 0;
corsy.bos:      set INBUILDSTANCE to 1;
corsy.bos:      set INBUILDSTANCE to 0;
cortarg.bos:/*   1a6:*/ set ACTIVATION to 0;
cortarg.bos:/*   1ae:*/ set ACTIVATION to 1;
Binary file cortermite.cob matches
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
corthovr.bos:           set BUSY to 1;
corthovr.bos:           set BUSY to 0;
Binary file corthovr.cob matches
Binary file corthud.cob matches
cortoast.bos:   set ARMORED to 0;
cortoast.bos:   set ARMORED to 1;
Binary file cortoast.cob matches
Binary file cortrem.cob matches
Binary file cortron.cob matches
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
cortship.bos:           set BUSY to 1;
cortship.bos:           set BUSY to 0;
Binary file cortship.cob matches
coruwmme.bos:   set ARMORED to 0;
coruwmme.bos:   set ARMORED to 1;
coruwmme.bos:   set ARMORED to 1;
Binary file corvoyr.cob matches
corvp.bos:      set YARD_OPEN to 1;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 1;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set YARD_OPEN to 0;
corvp.bos:              set BUGGER_OFF to 1;
corvp.bos:              set YARD_OPEN to 0;
corvp.bos:      set BUGGER_OFF to 0;
corvp.bos:      set INBUILDSTANCE to 1;
corvp.bos:      set INBUILDSTANCE to 0;
corvroc.bos:    set-signal-mask SIG_RESTORE;
Binary file corvroc.cob matches
corwin.bos:                     set ACTIVATION to 100;
corwin.bos:             set ACTIVATION to 0;
corwin.bos:             set ACTIVATION to 100;
Binary file corwin.cob matches
Binary file corwolv.cob matches
exptype.h:#define BUGGER_OFF          19  // set or get (ask other units to clea
r the area)
exptype.h:#define CHANGE_TARGET             98 // set, the value it's set to det
ermines the affected weapon
Binary file fgrep.exe matches
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 1;
meteor.bos:     set ARMORED to 0;
meteor.bos:     //set UNKNOWN_UNIT_VALUE(76) to 0;
fgrep: New folder: Is a directory
roost.bos:      set ARMORED to 0;
fgrep: scavboss: Is a directory
fgrep: scavbuildings: Is a directory
standard_commands_gpl.h:#define BUGGER_OFF              19      // set or get (a
sk other units to clear the area)
yard.h: set YARD_OPEN to TRUE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to TRUE;
yard.h: set BUGGER_OFF to FALSE;
yard.h: set YARD_OPEN to FALSE;
yard.h:         set BUGGER_OFF to TRUE;
yard.h:         set YARD_OPEN to FALSE;
yard.h: set BUGGER_OFF to FALSE;

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>

C:\Users\Peti\Documents\my games\Spring\games\Beyond-All-Reason.sdd\scripts\Unit
s>