#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  head, torso, hips, rgunflare, lgunflare, eyeflare, rmispoint,
       lmispoint, rleg, rthigh, lthigh, lleg, ltoes, lheel, rtoes,
       rheel, lshoulder, rshoulder, luparm, ruparm, rarm, larm, rmissle2, lmissle2, rfoot, lfoot, aimy1, aimx1, aimy2;

static-var  ShootingArm, WhichShoulderRocket, bMoving, InMotion, Aim_while_moving, WhichFootStompsBool, NotReadytoStomp,
            restore_delay, SmokeEffectFeet, HandsUp, statechg_DesiredState, statechg_StateChanging, wpn1_lasthead, wpn2_lasthead;

#define SIG_FOOTSTOMP_L 8
#define SIG_FOOTSTOMP_R 16
#define SIG_HEAD 2
#define SIG_BODY 4

//LICENSED CC BY NC ND to Beherith mysterme@gmail.com

static-var animSpeed, maxSpeed, animFramesPerKeyframe;
#define SIG_WALK 32
Walk() {//Created by https://github.com/Beherith/Skeletor_S3O from N:\animations\corkorg_anim_walk_noik_v4.blend 
	set-signal-mask SIG_WALK;
	if (bMoving) { //Frame:8
			turn head to x-axis <0.788000> speed <23.640006> / animSpeed; //delta=-0.79 
			turn head to z-axis <-1.596296> speed <47.888890> / animSpeed; //delta=1.60 
			turn head to y-axis <1.996297> speed <59.888896> / animSpeed; //delta=2.00 
			move hips to y-axis [-0.387490] speed [11.624712] / animSpeed; //delta=-0.39 
			move lfoot to y-axis [-1.300000] speed [38.999999] / animSpeed; //delta=-1.30 
			turn lleg to x-axis <-22.905410> speed <687.162298> / animSpeed; //delta=22.91 
			turn lleg to y-axis <0.000000> speed <95.999993> / animSpeed; //delta=-3.20 
			turn lmissle2 to z-axis <10.070595> speed <122.117853> / animSpeed; //delta=-4.07 
			turn lthigh to x-axis <23.819402> speed <714.582058> / animSpeed; //delta=-23.82 
			move rfoot to y-axis [4.125926] speed [82.752918] / animSpeed; //delta=2.76 
			turn rfoot to x-axis <-0.000000> speed <173.714267> / animSpeed; //delta=-5.79 
			turn rheel to x-axis <7.811363> speed <554.659069> / animSpeed; //delta=18.49 
			turn rleg to x-axis <13.496208> speed <404.886237> / animSpeed; //delta=-13.50 
			turn rleg to y-axis <0.000000> speed <74.999991> / animSpeed; //delta=2.50 
			turn rmissle2 to z-axis <-2.174765> speed <119.184628> / animSpeed; //delta=-3.97 
			turn rthigh to x-axis <-22.070578> speed <662.117343> / animSpeed; //delta=22.07 
			turn rtoes to x-axis <8.366666> speed <250.999975> / animSpeed; //delta=-8.37 
			turn torso to x-axis <0.788000> speed <23.640006> / animSpeed; //delta=-0.79 
			turn torso to z-axis <1.596296> speed <47.888890> / animSpeed; //delta=-1.60 
			turn torso to y-axis <-1.996297> speed <59.888896> / animSpeed; //delta=-2.00 
	

			if (!HandsUp){
				turn larm to x-axis <-29.484520> speed <777.464280> / animSpeed; //delta=-25.92 
				turn lshoulder to x-axis <-1.949999> speed <58.499956> / animSpeed; //delta=1.95 
				turn luparm to x-axis <-0.000000> speed <314.999983> / animSpeed; //delta=10.50 
				turn luparm to z-axis <0.000000> speed <339.000021> / animSpeed; //delta=-11.30 
				turn rshoulder to x-axis <-0.299996> speed <8.999867> / animSpeed; //delta=0.30 
				turn rarm to x-axis <-43.404578> speed <446.862497> / animSpeed; //delta=-14.90 
				turn ruparm to x-axis <-0.000000> speed <299.999991> / animSpeed; //delta=10.00 
				turn ruparm to z-axis <0.000000> speed <299.999991> / animSpeed; //delta=10.00 
			}
		sleep ((33*animSpeed) -1);
	}
	while(bMoving) {
		if (bMoving) { //Frame:16
			turn head to x-axis <-0.356000> speed <34.320004> / animSpeed; //delta=1.14 
			turn head to z-axis <-1.191082> speed <12.156442> / animSpeed; //delta=-0.41 
			turn head to y-axis <3.734954> speed <52.159713> / animSpeed; //delta=1.74 
			move hips to y-axis [-0.028619] speed [10.766155] / animSpeed; //delta=0.36 
			turn lheel to x-axis <-6.000000> speed <179.999992> / animSpeed; //delta=6.00 
			turn lleg to x-axis <-49.258361> speed <790.588540> / animSpeed; //delta=26.35 
			turn lmissle2 to x-axis <-5.039181> speed <28.824568> / animSpeed; //delta=-0.96 
			turn lmissle2 to z-axis <9.399770> speed <20.124760> / animSpeed; //delta=0.67 
			turn lthigh to x-axis <51.604559> speed <833.554698> / animSpeed; //delta=-27.79 
			turn ltoes to x-axis <-3.000000> speed <89.999996> / animSpeed; //delta=3.00 
			move rfoot to y-axis [3.847963] speed [8.338888] / animSpeed; //delta=-0.28 
			turn rheel to x-axis <15.622726> speed <234.340888> / animSpeed; //delta=-7.81 
			turn rleg to x-axis <22.493679> speed <269.924141> / animSpeed; //delta=-9.00 
			turn rmissle2 to x-axis <-5.039181> speed <28.824568> / animSpeed; //delta=-0.96 
			turn rmissle2 to z-axis <-2.886253> speed <21.344653> / animSpeed; //delta=0.71 
			turn rthigh to x-axis <-36.784295> speed <441.411494> / animSpeed; //delta=14.71 
			turn rtoes to x-axis <-17.066665> speed <762.999937> / animSpeed; //delta=25.43 
			turn torso to x-axis <-0.356000> speed <34.320004> / animSpeed; //delta=1.14 
			turn torso to z-axis <1.191082> speed <12.156442> / animSpeed; //delta=0.41 
			turn torso to y-axis <-3.734954> speed <52.159713> / animSpeed; //delta=-1.74 
			move lfoot to y-axis [-7.490000] speed [185.699995] / animSpeed; //delta=-6.19 
			if (!HandsUp){
				turn larm to x-axis <-45.683222> speed <485.961061> / animSpeed; //delta=16.20 
				turn larm to z-axis <1.447210> speed <43.416304> / animSpeed; //delta=-1.45 
				turn larm to y-axis <-1.429561> speed <42.886841> / animSpeed; //delta=-1.43 
				turn lshoulder to x-axis <-13.575297> speed <348.758962> / animSpeed; //delta=11.63 
				turn rshoulder to x-axis <8.406555> speed <261.196517> / animSpeed; //delta=-8.71 
				turn rarm to x-axis <-36.764559> speed <199.200589> / animSpeed; //delta=-6.64 
				
			}
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:24
			turn head to x-axis <-1.500000> speed <34.320004> / animSpeed; //delta=1.14 
			turn head to z-axis <-0.224800> speed <28.988439> / animSpeed; //delta=-0.97 
			turn head to y-axis <4.200000> speed <13.951387> / animSpeed; //delta=0.47 
			move hips to y-axis [-2.221496] speed [65.786312] / animSpeed; //delta=-2.19 
			turn lheel to x-axis <15.037498> speed <631.124937> / animSpeed; //delta=-21.04 
			turn lleg to x-axis <-20.958364> speed <848.999925> / animSpeed; //delta=-28.30 
			turn lmissle2 to x-axis <-3.254803> speed <53.531339> / animSpeed; //delta=-1.78 
			turn lmissle2 to z-axis <7.915656> speed <44.523416> / animSpeed; //delta=1.48 
			turn lthigh to x-axis <43.541346> speed <241.896375> / animSpeed; //delta=8.06 
			turn ltoes to x-axis <-18.100000> speed <452.999992> / animSpeed; //delta=15.10 
			move rfoot to y-axis [-1.250000] speed [152.938886] / animSpeed; //delta=-5.10 
			turn rheel to x-axis <23.434090> speed <234.340939> / animSpeed; //delta=-7.81 
			turn rleg to x-axis <28.920445> speed <192.802973> / animSpeed; //delta=-6.43 
			turn rmissle2 to x-axis <-3.254803> speed <53.531339> / animSpeed; //delta=-1.78 
			turn rmissle2 to z-axis <-4.227144> speed <40.226724> / animSpeed; //delta=1.34 
			turn rthigh to x-axis <-47.294094> speed <315.293997> / animSpeed; //delta=10.51 
			turn rtoes to x-axis <-24.500000> speed <223.000024> / animSpeed; //delta=7.43 
			turn torso to x-axis <-1.500000> speed <34.320004> / animSpeed; //delta=1.14 
			turn torso to z-axis <0.224800> speed <28.988439> / animSpeed; //delta=0.97 
			turn torso to y-axis <-4.200000> speed <13.951387> / animSpeed; //delta=-0.47 
			move lfoot to y-axis [0.470000] speed [238.800001] / animSpeed; //delta=7.96 
			if (!HandsUp){
				turn larm to x-axis <-49.247716> speed <106.934842> / animSpeed; //delta=3.56 
				turn larm to z-axis <4.469734> speed <90.675711> / animSpeed; //delta=-3.02 
				turn larm to y-axis <-4.415225> speed <89.569899> / animSpeed; //delta=-2.99 
				turn lshoulder to x-axis <-28.108313> speed <435.990483> / animSpeed; //delta=14.53 
				turn rshoulder to x-axis <23.524147> speed <453.527745> / animSpeed; //delta=-15.12 
				turn rarm to x-axis <-31.017071> speed <172.424642> / animSpeed; //delta=-5.75 
			}
			NotReadytoStomp = 0;
			WhichFootStompsBool=FALSE;
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:32
			turn head to x-axis <5.400000> speed <206.999990> / animSpeed; //delta=-6.90 
			turn head to z-axis <0.928503> speed <34.599113> / animSpeed; //delta=-1.15 
			turn head to y-axis <3.570370> speed <18.888890> / animSpeed; //delta=-0.63 
			move hips to y-axis [-5.000000] speed [83.355131] / animSpeed; //delta=-2.78 
			move lfoot to y-axis [5.156667] speed [140.599995] / animSpeed; //delta=4.69 
			turn lheel to x-axis <-3.375000> speed <552.374935> / animSpeed; //delta=18.41 
			turn lleg to x-axis <-16.300950> speed <139.722414> / animSpeed; //delta=-4.66 
			turn lmissle2 to x-axis <-2.293984> speed <28.824574> / animSpeed; //delta=-0.96 
			turn lmissle2 to z-axis <6.000000> speed <57.469677> / animSpeed; //delta=1.92 
			turn lthigh to x-axis <33.865492> speed <290.275629> / animSpeed; //delta=9.68 
			turn ltoes to x-axis <-33.366663> speed <457.999889> / animSpeed; //delta=15.27 
			move rfoot to y-axis [-3.562592] speed [69.377775] / animSpeed; //delta=-2.31 
			turn rheel to x-axis <-0.000000> speed <703.022714> / animSpeed; //delta=23.43 
			turn rleg to x-axis <54.719009> speed <773.956909> / animSpeed; //delta=-25.80 
			turn rmissle2 to x-axis <-2.293984> speed <28.824574> / animSpeed; //delta=-0.96 
			turn rmissle2 to z-axis <-6.147586> speed <57.613252> / animSpeed; //delta=1.92 
			turn rthigh to x-axis <-54.317141> speed <210.691392> / animSpeed; //delta=7.02 
			turn rtoes to x-axis <-0.000000> speed <734.999986> / animSpeed; //delta=-24.50 
			turn torso to x-axis <5.400000> speed <206.999990> / animSpeed; //delta=-6.90 
			turn torso to z-axis <-0.928503> speed <34.599113> / animSpeed; //delta=1.15 
			turn torso to y-axis <-3.570370> speed <18.888890> / animSpeed; //delta=0.63 
			if (!HandsUp){
				turn larm to x-axis <-50.429199> speed <35.444481> / animSpeed; //delta=1.18 
				turn larm to z-axis <7.138633> speed <80.066969> / animSpeed; //delta=-2.67 
				turn larm to y-axis <-7.051577> speed <79.090555> / animSpeed; //delta=-2.64 
				turn lshoulder to x-axis <-33.599995> speed <164.750464> / animSpeed; //delta=5.49 
				turn rshoulder to x-axis <29.699998> speed <185.275558> / animSpeed; //delta=-6.18 
				turn rarm to x-axis <-24.761012> speed <187.681765> / animSpeed; //delta=-6.26 
				
			}
			NotReadytoStomp = 1;
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:40
			turn head to x-axis <4.682400> speed <21.527992> / animSpeed; //delta=0.72 
			turn head to z-axis <1.894785> speed <28.988457> / animSpeed; //delta=-0.97 
			turn head to y-axis <1.996296> speed <47.222223> / animSpeed; //delta=-1.57 
			move hips to y-axis [-3.118622] speed [56.441352] / animSpeed; //delta=1.88 
			turn lheel to x-axis <-1.687500> speed <50.625001> / animSpeed; //delta=-1.69 
			turn lleg to x-axis <-9.780570> speed <195.611384> / animSpeed; //delta=-6.52 
			turn lmissle2 to x-axis <-2.753370> speed <13.781572> / animSpeed; //delta=0.46 
			turn lmissle2 to z-axis <4.103708> speed <56.888744> / animSpeed; //delta=1.90 
			turn lthigh to x-axis <20.319297> speed <406.385840> / animSpeed; //delta=13.55 
			turn ltoes to x-axis <-16.683331> speed <500.499938> / animSpeed; //delta=-16.68 
			move rfoot to y-axis [1.505926] speed [152.055548] / animSpeed; //delta=5.07 
			turn rleg to x-axis <26.443310> speed <848.270973> / animSpeed; //delta=28.28 
			turn rmissle2 to x-axis <-2.753370> speed <13.781572> / animSpeed; //delta=0.46 
			turn rmissle2 to z-axis <-8.084645> speed <58.111775> / animSpeed; //delta=1.94 
			turn rthigh to x-axis <-26.008244> speed <849.266917> / animSpeed; //delta=-28.31 
			turn torso to x-axis <4.682400> speed <21.527992> / animSpeed; //delta=0.72 
			turn torso to z-axis <-1.894785> speed <28.988457> / animSpeed; //delta=0.97 
			turn torso to y-axis <-1.996296> speed <47.222223> / animSpeed; //delta=1.57 
			if (!HandsUp){
				turn larm to x-axis <-50.899997> speed <14.123943> / animSpeed; //delta=0.47 
				turn larm to z-axis <8.199999> speed <31.840984> / animSpeed; //delta=-1.06 
				turn larm to y-axis <-8.099999> speed <31.452675> / animSpeed; //delta=-1.05 
				turn lshoulder to x-axis <-30.528698> speed <92.138910> / animSpeed; //delta=-3.07 
				turn rarm to x-axis <-21.989101> speed <83.157331> / animSpeed; //delta=-2.77 
				turn rshoulder to x-axis <26.921501> speed <83.354911> / animSpeed; //delta=2.78 
			}
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:48
			turn head to x-axis <2.971200> speed <51.335998> / animSpeed; //delta=1.71 
			turn head to z-axis <2.300000> speed <12.156433> / animSpeed; //delta=-0.41 
			turn head to y-axis <-0.050000> speed <61.388883> / animSpeed; //delta=-2.05 
			move hips to y-axis [-1.159777] speed [58.765333] / animSpeed; //delta=1.96 
			move lfoot to y-axis [4.630000] speed [18.400011] / animSpeed; //delta=-0.61 
			turn lheel to x-axis <14.999999> speed <500.624950> / animSpeed; //delta=-16.69 
			turn lleg to x-axis <-0.000000> speed <293.417115> / animSpeed; //delta=-9.78 
			turn lmissle2 to x-axis <-4.036315> speed <38.488349> / animSpeed; //delta=1.28 
			turn lmissle2 to z-axis <2.655556> speed <43.444575> / animSpeed; //delta=1.45 
			turn lthigh to x-axis <-0.000000> speed <609.578913> / animSpeed; //delta=20.32 
			turn ltoes to x-axis <-0.000000> speed <500.499938> / animSpeed; //delta=-16.68 
			turn rleg to x-axis <-0.000000> speed <793.299288> / animSpeed; //delta=26.44 
			turn rmissle2 to x-axis <-4.036315> speed <38.488349> / animSpeed; //delta=1.28 
			turn rmissle2 to z-axis <-9.319406> speed <37.042848> / animSpeed; //delta=1.23 
			turn rthigh to x-axis <-0.000000> speed <780.247309> / animSpeed; //delta=-26.01 
			turn torso to x-axis <2.971200> speed <51.335998> / animSpeed; //delta=1.71 
			turn torso to z-axis <-2.300000> speed <12.156433> / animSpeed; //delta=0.41 
			turn torso to y-axis <0.050000> speed <61.388883> / animSpeed; //delta=2.05 
			if (!HandsUp){
				turn larm to x-axis <-49.533809> speed <40.985643> / animSpeed; //delta=-1.37 
				turn larm to z-axis <5.363884> speed <85.083445> / animSpeed; //delta=2.84 
				turn larm to y-axis <-5.298471> speed <84.045841> / animSpeed; //delta=2.80 
				turn lshoulder to x-axis <-18.862466> speed <349.986987> / animSpeed; //delta=-11.67 
				turn rarm to x-axis <-23.355287> speed <40.985592> / animSpeed; //delta=1.37 
				turn rshoulder to x-axis <16.001229> speed <327.608162> / animSpeed; //delta=10.92 			
			}
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:56
			turn head to x-axis <0.928800> speed <61.271996> / animSpeed; //delta=2.04 
			turn head to z-axis <1.988889> speed <9.333332> / animSpeed; //delta=0.31 
			turn head to y-axis <-2.096296> speed <61.388882> / animSpeed; //delta=-2.05 
			move hips to y-axis [-0.387490] speed [23.168603] / animSpeed; //delta=0.77 
			move lfoot to y-axis [4.125926] speed [15.122223] / animSpeed; //delta=-0.50 
			turn lheel to x-axis <7.811363> speed <215.659074> / animSpeed; //delta=7.19 
			turn lleg to x-axis <13.496208> speed <404.886237> / animSpeed; //delta=-13.50 
			turn lmissle2 to x-axis <-6.000000> speed <58.910561> / animSpeed; //delta=1.96 
			turn lmissle2 to z-axis <2.078785> speed <17.303138> / animSpeed; //delta=0.58 
			turn lthigh to x-axis <-22.070578> speed <662.117343> / animSpeed; //delta=22.07 
			turn ltoes to x-axis <8.366666> speed <250.999975> / animSpeed; //delta=-8.37 
			move rfoot to y-axis [-1.300000] speed [84.599998] / animSpeed; //delta=-2.82 
			turn rleg to x-axis <-22.905410> speed <687.162298> / animSpeed; //delta=22.91 
			turn rmissle2 to x-axis <-6.000000> speed <58.910561> / animSpeed; //delta=1.96 
			turn rmissle2 to z-axis <-9.974616> speed <19.656294> / animSpeed; //delta=0.66 
			turn rthigh to x-axis <23.819402> speed <714.582058> / animSpeed; //delta=-23.82 
			turn torso to x-axis <0.928800> speed <61.271996> / animSpeed; //delta=2.04 
			turn torso to z-axis <-1.988889> speed <9.333332> / animSpeed; //delta=-0.31 
			turn torso to y-axis <2.096296> speed <61.388882> / animSpeed; //delta=2.05 
			if (!HandsUp){
				turn larm to x-axis <-43.404578> speed <183.876923> / animSpeed; //delta=-6.13 
				turn larm to z-axis <-0.000000> speed <160.916525> / animSpeed; //delta=5.36 
				turn larm to y-axis <0.000000> speed <158.954130> / animSpeed; //delta=5.30 
				turn lshoulder to x-axis <-0.299996> speed <556.874100> / animSpeed; //delta=-18.56 
				turn rarm to x-axis <-29.484520> speed <183.876974> / animSpeed; //delta=6.13 
				turn rshoulder to x-axis <-1.949999> speed <538.536835> / animSpeed; //delta=17.95 			
			}
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:64
			turn head to x-axis <-0.782400> speed <51.336008> / animSpeed; //delta=1.71 
			turn head to z-axis <1.211111> speed <23.333336> / animSpeed; //delta=0.78 
			turn head to y-axis <-3.670371> speed <47.222242> / animSpeed; //delta=-1.57 
			move hips to y-axis [-0.028619] speed [10.766155] / animSpeed; //delta=0.36 
			move lfoot to y-axis [3.847963] speed [8.338888] / animSpeed; //delta=-0.28 
			turn lheel to x-axis <15.622726> speed <234.340888> / animSpeed; //delta=-7.81 
			turn lleg to x-axis <22.493679> speed <269.924141> / animSpeed; //delta=-9.00 
			turn lmissle2 to x-axis <-8.382070> speed <71.462084> / animSpeed; //delta=2.38 
			turn lmissle2 to z-axis <2.651407> speed <17.178664> / animSpeed; //delta=-0.57 
			turn lthigh to x-axis <-36.784295> speed <441.411494> / animSpeed; //delta=14.71 
			turn ltoes to x-axis <-17.066665> speed <762.999937> / animSpeed; //delta=25.43 
			move rfoot to y-axis [-7.490000] speed [185.699995] / animSpeed; //delta=-6.19 
			turn rheel to x-axis <-6.000000> speed <179.999992> / animSpeed; //delta=6.00 
			turn rleg to x-axis <-49.258361> speed <790.588540> / animSpeed; //delta=26.35 
			turn rmissle2 to x-axis <-8.382070> speed <71.462084> / animSpeed; //delta=2.38 
			turn rmissle2 to z-axis <-9.360958> speed <18.409750> / animSpeed; //delta=-0.61 
			turn rthigh to x-axis <51.604559> speed <833.554698> / animSpeed; //delta=-27.79 
			turn rtoes to x-axis <-3.000000> speed <89.999996> / animSpeed; //delta=3.00 
			turn torso to x-axis <-0.782400> speed <51.336008> / animSpeed; //delta=1.71 
			turn torso to z-axis <-1.211111> speed <23.333336> / animSpeed; //delta=-0.78 
			turn torso to y-axis <3.670371> speed <47.222242> / animSpeed; //delta=1.57 
			if (!HandsUp){
				turn larm to x-axis <-35.075610> speed <249.869049> / animSpeed; //delta=-8.33 
				turn lshoulder to x-axis <16.877290> speed <515.318563> / animSpeed; //delta=-17.18 
				turn rarm to x-axis <-37.813488> speed <249.869049> / animSpeed; //delta=8.33 
				turn rarm to z-axis <-1.447210> speed <43.416314> / animSpeed; //delta=1.45 
				turn rarm to y-axis <1.429562> speed <42.886847> / animSpeed; //delta=1.43 
				turn rshoulder to x-axis <-19.464383> speed <525.431529> / animSpeed; //delta=17.51 
			
			}
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:72
			turn head to x-axis <-1.500000> speed <21.527995> / animSpeed; //delta=0.72 
			turn head to z-axis <0.200000> speed <30.333339> / animSpeed; //delta=1.01 
			turn head to y-axis <-4.300000> speed <18.888871> / animSpeed; //delta=-0.63 
			move hips to y-axis [-2.221496] speed [65.786312] / animSpeed; //delta=-2.19 
			move lfoot to y-axis [-1.250000] speed [152.938886] / animSpeed; //delta=-5.10 
			turn lheel to x-axis <23.434090> speed <234.340939> / animSpeed; //delta=-7.81 
			turn lleg to x-axis <28.920445> speed <192.802973> / animSpeed; //delta=-6.43 
			turn lmissle2 to x-axis <-10.442014> speed <61.798322> / animSpeed; //delta=2.06 
			turn lmissle2 to z-axis <4.095410> speed <43.320088> / animSpeed; //delta=-1.44 
			turn lthigh to x-axis <-47.294094> speed <315.293997> / animSpeed; //delta=10.51 
			turn ltoes to x-axis <-24.500000> speed <223.000024> / animSpeed; //delta=7.43 
			move rfoot to y-axis [0.470000] speed [238.800001] / animSpeed; //delta=7.96 
			turn rheel to x-axis <15.037498> speed <631.124937> / animSpeed; //delta=-21.04 
			turn rleg to x-axis <-20.958364> speed <848.999925> / animSpeed; //delta=-28.30 
			turn rmissle2 to x-axis <-10.442014> speed <61.798322> / animSpeed; //delta=2.06 
			turn rmissle2 to z-axis <-8.068419> speed <38.776171> / animSpeed; //delta=-1.29 
			turn rthigh to x-axis <43.541346> speed <241.896375> / animSpeed; //delta=8.06 
			turn rtoes to x-axis <-18.100000> speed <452.999992> / animSpeed; //delta=15.10 
			turn torso to x-axis <-1.500000> speed <21.527995> / animSpeed; //delta=0.72 
			turn torso to z-axis <-0.200000> speed <30.333339> / animSpeed; //delta=-1.01 
			turn torso to y-axis <4.300000> speed <18.888871> / animSpeed; //delta=0.63 
			if (!HandsUp){
				turn larm to x-axis <-27.436272> speed <229.180133> / animSpeed; //delta=-7.64 
				turn lshoulder to x-axis <27.679685> speed <324.071849> / animSpeed; //delta=-10.80 
				turn rarm to x-axis <-45.452826> speed <229.180133> / animSpeed; //delta=7.64 
				turn rarm to z-axis <-4.469733> speed <90.675676> / animSpeed; //delta=3.02 
				turn rarm to y-axis <4.415225> speed <89.569893> / animSpeed; //delta=2.99 
				turn rshoulder to x-axis <-31.124407> speed <349.800728> / animSpeed; //delta=11.66 
			}
			
			NotReadytoStomp = 0;
			WhichFootStompsBool=TRUE;
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:80
			turn head to x-axis <5.000000> speed <194.999997> / animSpeed; //delta=-6.50 
			turn head to z-axis <-0.811111> speed <30.333332> / animSpeed; //delta=1.01 
			turn head to y-axis <-3.670370> speed <18.888884> / animSpeed; //delta=0.63 
			move hips to y-axis [-5.000000] speed [83.355131] / animSpeed; //delta=-2.78 
			move lfoot to y-axis [-3.562592] speed [69.377775] / animSpeed; //delta=-2.31 
			turn lheel to x-axis <-0.000000> speed <703.022714> / animSpeed; //delta=23.43 
			turn lleg to x-axis <54.719009> speed <773.956909> / animSpeed; //delta=-25.80 
			turn lmissle2 to x-axis <-11.319784> speed <26.333120> / animSpeed; //delta=0.88 
			turn lmissle2 to z-axis <6.000000> speed <57.137704> / animSpeed; //delta=-1.90 
			turn lthigh to x-axis <-54.317141> speed <210.691392> / animSpeed; //delta=7.02 
			turn ltoes to x-axis <-0.000000> speed <734.999986> / animSpeed; //delta=-24.50 
			move rfoot to y-axis [5.156667] speed [140.599995] / animSpeed; //delta=4.69 
			turn rheel to x-axis <-3.375000> speed <552.374935> / animSpeed; //delta=18.41 
			turn rleg to x-axis <-16.300950> speed <139.722414> / animSpeed; //delta=-4.66 
			turn rmissle2 to x-axis <-11.319784> speed <26.333120> / animSpeed; //delta=0.88 
			turn rmissle2 to z-axis <-6.147586> speed <57.624995> / animSpeed; //delta=-1.92 
			turn rthigh to x-axis <33.865492> speed <290.275629> / animSpeed; //delta=9.68 
			turn rtoes to x-axis <-33.366663> speed <457.999889> / animSpeed; //delta=15.27 
			turn torso to x-axis <5.000000> speed <194.999997> / animSpeed; //delta=-6.50 
			turn torso to z-axis <0.811111> speed <30.333332> / animSpeed; //delta=-1.01 
			turn torso to y-axis <3.670370> speed <18.888884> / animSpeed; //delta=-0.63
			if (!HandsUp){
				turn larm to x-axis <-23.058621> speed <131.329528> / animSpeed; //delta=-4.38 
				turn lshoulder to x-axis <29.699998> speed <60.609408> / animSpeed; //delta=-2.02 
				turn rarm to x-axis <-49.830478> speed <131.329580> / animSpeed; //delta=4.38 
				turn rarm to z-axis <-7.138634> speed <80.067021> / animSpeed; //delta=2.67 
				turn rarm to y-axis <7.051577> speed <79.090555> / animSpeed; //delta=2.64 
				turn rshoulder to x-axis <-33.599995> speed <74.267652> / animSpeed; //delta=2.48 
			}
			NotReadytoStomp = 1;
			
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:88
			turn head to x-axis <4.324000> speed <20.280001> / animSpeed; //delta=0.68 
			turn head to z-axis <-1.588889> speed <23.333328> / animSpeed; //delta=0.78 
			turn head to y-axis <-2.096296> speed <47.222216> / animSpeed; //delta=1.57 
			move hips to y-axis [-3.118622] speed [56.441352] / animSpeed; //delta=1.88 
			move lfoot to y-axis [1.505926] speed [152.055548] / animSpeed; //delta=5.07 
			turn lleg to x-axis <26.443310> speed <848.270973> / animSpeed; //delta=28.28 
			turn lmissle2 to x-axis <-9.940581> speed <41.376091> / animSpeed; //delta=-1.38 
			turn lmissle2 to z-axis <7.943318> speed <58.299545> / animSpeed; //delta=-1.94 
			turn lthigh to x-axis <-26.008244> speed <849.266917> / animSpeed; //delta=-28.31 
			turn rheel to x-axis <-1.687500> speed <50.625001> / animSpeed; //delta=-1.69 
			turn rleg to x-axis <-9.780570> speed <195.611384> / animSpeed; //delta=-6.52 
			turn rmissle2 to x-axis <-9.940581> speed <41.376091> / animSpeed; //delta=-1.38 
			turn rmissle2 to z-axis <-4.161293> speed <59.588773> / animSpeed; //delta=-1.99 
			turn rthigh to x-axis <20.319297> speed <406.385840> / animSpeed; //delta=13.55 
			turn rtoes to x-axis <-16.683331> speed <500.499938> / animSpeed; //delta=-16.68 
			turn torso to x-axis <4.324000> speed <20.280001> / animSpeed; //delta=0.68 
			turn torso to z-axis <1.588889> speed <23.333328> / animSpeed; //delta=-0.78 
			turn torso to y-axis <2.096296> speed <47.222216> / animSpeed; //delta=-1.57 
			if (!HandsUp){
				turn larm to x-axis <-21.989101> speed <32.085616> / animSpeed; //delta=-1.07 
				turn lshoulder to x-axis <26.018149> speed <110.455480> / animSpeed; //delta=3.68 
				turn rarm to x-axis <-50.899997> speed <32.085565> / animSpeed; //delta=1.07 
				turn rarm to z-axis <-8.199999> speed <31.840959> / animSpeed; //delta=1.06 
				turn rarm to y-axis <8.099999> speed <31.452675> / animSpeed; //delta=1.05 
				turn rshoulder to x-axis <-29.726199> speed <116.213893> / animSpeed; //delta=-3.87 
			}
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:96
			turn head to x-axis <2.712000> speed <48.359987> / animSpeed; //delta=1.61 
			turn head to z-axis <-1.900000> speed <9.333329> / animSpeed; //delta=0.31 
			turn head to y-axis <-0.050000> speed <61.388891> / animSpeed; //delta=2.05 
			move hips to y-axis [-1.159777] speed [58.765333] / animSpeed; //delta=1.96 
			turn lleg to x-axis <-0.000000> speed <793.299288> / animSpeed; //delta=26.44 
			turn lmissle2 to x-axis <-7.379204> speed <76.841319> / animSpeed; //delta=-2.56 
			turn lmissle2 to z-axis <9.459245> speed <45.477816> / animSpeed; //delta=-1.52 
			turn lthigh to x-axis <-0.000000> speed <780.247309> / animSpeed; //delta=-26.01 
			move rfoot to y-axis [4.630000] speed [18.400011] / animSpeed; //delta=-0.61 
			turn rheel to x-axis <14.999999> speed <500.624950> / animSpeed; //delta=-16.69 
			turn rleg to x-axis <-0.000000> speed <293.417115> / animSpeed; //delta=-9.78 
			turn rmissle2 to x-axis <-7.379204> speed <76.841319> / animSpeed; //delta=-2.56 
			turn rmissle2 to z-axis <-2.853883> speed <39.222314> / animSpeed; //delta=-1.31 
			turn rthigh to x-axis <-0.000000> speed <609.578913> / animSpeed; //delta=20.32 
			turn rtoes to x-axis <-0.000000> speed <500.499938> / animSpeed; //delta=-16.68 
			turn torso to x-axis <2.712000> speed <48.359987> / animSpeed; //delta=1.61 
			turn torso to z-axis <1.900000> speed <9.333329> / animSpeed; //delta=-0.31 
			turn torso to y-axis <0.050000> speed <61.388891> / animSpeed; //delta=-2.05 
			if (!HandsUp){
				turn larm to x-axis <-23.755485> speed <52.991527> / animSpeed; //delta=1.77 
				turn lshoulder to x-axis <14.632224> speed <341.577760> / animSpeed; //delta=11.39 
				turn rarm to x-axis <-49.133611> speed <52.991579> / animSpeed; //delta=-1.77 
				turn rarm to z-axis <-4.768445> speed <102.946622> / animSpeed; //delta=-3.43 
				turn rarm to y-axis <4.710293> speed <101.691178> / animSpeed; //delta=-3.39 
				turn rshoulder to x-axis <-17.746693> speed <359.385191> / animSpeed; //delta=-11.98 
			}
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:104
			turn head to x-axis <0.788000> speed <57.720001> / animSpeed; //delta=1.92 
			turn head to z-axis <-1.596296> speed <9.111112> / animSpeed; //delta=-0.30 
			turn head to y-axis <1.996297> speed <61.388899> / animSpeed; //delta=2.05 
			move hips to y-axis [-0.387490] speed [23.168603] / animSpeed; //delta=0.77 
			move lfoot to y-axis [-1.300000] speed [84.599998] / animSpeed; //delta=-2.82 
			turn lleg to x-axis <-22.905410> speed <687.162298> / animSpeed; //delta=22.91 
			turn lmissle2 to x-axis <-6.000000> speed <41.376116> / animSpeed; //delta=-1.38 
			turn lmissle2 to z-axis <10.070595> speed <18.340492> / animSpeed; //delta=-0.61 
			turn lthigh to x-axis <23.819402> speed <714.582058> / animSpeed; //delta=-23.82 
			move rfoot to y-axis [4.125926] speed [15.122223] / animSpeed; //delta=-0.50 
			turn rheel to x-axis <7.811363> speed <215.659074> / animSpeed; //delta=7.19 
			turn rleg to x-axis <13.496208> speed <404.886237> / animSpeed; //delta=-13.50 
			turn rmissle2 to x-axis <-6.000000> speed <41.376116> / animSpeed; //delta=-1.38 
			turn rmissle2 to z-axis <-2.174765> speed <20.373541> / animSpeed; //delta=-0.68 
			turn rthigh to x-axis <-22.070578> speed <662.117343> / animSpeed; //delta=22.07 
			turn rtoes to x-axis <8.366666> speed <250.999975> / animSpeed; //delta=-8.37 
			turn torso to x-axis <0.788000> speed <57.720001> / animSpeed; //delta=1.92 
			turn torso to z-axis <1.596296> speed <9.111112> / animSpeed; //delta=0.30 
			turn torso to y-axis <-1.996297> speed <61.388899> / animSpeed; //delta=-2.05 
			if (!HandsUp){
				turn larm to x-axis <-29.484520> speed <171.871038> / animSpeed; //delta=5.73 
				turn lshoulder to x-axis <-1.949999> speed <497.466668> / animSpeed; //delta=16.58
				turn rarm to x-axis <-43.404578> speed <171.870987> / animSpeed; //delta=-5.73 
				turn rarm to z-axis <-0.000000> speed <143.053347> / animSpeed; //delta=-4.77 
				turn rarm to y-axis <0.000000> speed <141.308793> / animSpeed; //delta=-4.71 
				turn rshoulder to x-axis <-0.299996> speed <523.400914> / animSpeed; //delta=-17.45
			}
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from MotionControl()!
StopWalking() {
	move hips to y-axis [0.000000] speed [10.419391];
	move lfoot to y-axis [0.000000] speed [29.850000];
	move rfoot to y-axis [1.367495] speed [29.850000];
	turn head to x-axis <0.000000> speed <25.874999>;
	turn head to y-axis <0.000000> speed <7.673612>;
	turn head to z-axis <0.000000> speed <5.986111>;
	turn lheel to x-axis <0.000000> speed <87.877839>;
	turn lleg to x-axis <0.000000> speed <106.124991>;
	turn lleg to y-axis <3.200000> speed <11.999999>;
	turn lmissle2 to x-axis <-6.000000> speed <9.605165>;
	turn lmissle2 to z-axis <6.000000> speed <15.264732>;
	turn lthigh to x-axis <0.000000> speed <106.158365>;
	turn ltoes to x-axis <0.000000> speed <95.374992>;
	turn rfoot to x-axis <-5.790476> speed <21.714283>;
	turn rheel to x-axis <26.299999> speed <87.877839>;
	turn rleg to x-axis <0.000000> speed <106.124991>;
	turn rleg to y-axis <-2.500000> speed <9.374999>;
	turn rmissle2 to x-axis <-6.000000> speed <9.605165>;
	turn rmissle2 to z-axis <-6.147586> speed <14.898079>;
	turn rthigh to x-axis <0.000000> speed <106.158365>;
	turn rtoes to x-axis <0.000000> speed <95.374992>;
	turn torso to x-axis <0.000000> speed <25.874999>;
	turn torso to y-axis <0.000000> speed <7.673612>;
	turn torso to z-axis <0.000000> speed <5.986111>;

	if (!HandsUp){
		turn larm to x-axis <-55.399996> speed <97.183035>;
		turn larm to y-axis <0.000000> speed <19.869266>;
		turn larm to z-axis <0.000000> speed <20.114566>;
		turn lshoulder to x-axis <0.000000> speed <69.609262>;
		turn luparm to x-axis <10.499999> speed <39.374998>;
		turn luparm to z-axis <-11.300001> speed <42.375003>;
		turn rarm to x-axis <-58.299995> speed <55.857812>;
		turn rarm to y-axis <0.000000> speed <17.663599>;
		turn rarm to z-axis <0.000000> speed <17.881668>;
		turn ruparm to x-axis <10.000000> speed <37.499999>;
		turn ruparm to z-axis <10.000000> speed <37.499999>;
		turn rshoulder to x-axis <0.000000> speed <67.317104>;

	}
}
// REMEMBER TO animspeed = 8 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 8; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 8) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<4) animSpeed=4;
		if (animspeed>16) animSpeed = 16;
		sleep 263;
	}
}
StartMoving(){
	signal SIG_WALK;
  set-signal-mask SIG_WALK;
	bMoving=TRUE;
	start-script Walk();
	start-script UnitSpeed();
}
StopMoving(){
	signal SIG_WALK;
	bMoving=FALSE;
	call-script StopWalking();
}

#define BASEPIECE hips
#define HITSPEED <25.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 20
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"

Go()
{
	InMotion = 1;
	if( !HandsUp )
	{
		//while( !Aim_while_moving )
		//{
		//	sleep 100;
		//}
		HandsUp = 1;
		//move rmissle2 to y-axis [6.000000] speed [10.000000];
		//move lmissle2 to y-axis [6.000000] speed [10.000000];
		//turn luparm to x-axis <0.000000> speed <120.000000>;
		//turn ruparm to x-axis <0.000000> speed <120.000000>;
		wait-for-turn luparm around x-axis;
		wait-for-turn ruparm around x-axis;
		//turn rmissle2 to z-axis <-15.000000> speed <60.000000>;
		//turn lmissle2 to z-axis <15.000000> speed <60.000000>;
		turn lshoulder to z-axis <-45.000000> speed <80.000000>;
		turn rshoulder to z-axis <45.000000> speed <80.000000>;
		turn rarm to x-axis <-90.000000> speed <120.000000>;
		turn larm to x-axis <-90.000000> speed <120.000000>;
		wait-for-turn luparm around z-axis;
		wait-for-turn ruparm around z-axis;
		wait-for-turn rarm around x-axis;
		wait-for-turn larm around x-axis;

	}
}

Stop()
{
	if( HandsUp )
	{
		HandsUp = 0;
		turn larm to x-axis <-55.399996> speed <97.183035>;
		turn larm to y-axis <0.000000> speed <19.869266>;
		turn larm to z-axis <0.000000> speed <20.114566>;
		turn lshoulder to x-axis <0.000000> speed <69.609262>;
		turn luparm to x-axis <10.499999> speed <39.374998>;
		turn luparm to z-axis <-11.300001> speed <42.375003>;
		turn rarm to x-axis <-58.299995> speed <55.857812>;
		turn rarm to y-axis <0.000000> speed <17.663599>;
		turn rarm to z-axis <0.000000> speed <17.881668>;
		turn ruparm to x-axis <10.000000> speed <37.499999>;
		turn ruparm to z-axis <10.000000> speed <37.499999>;
		turn rshoulder to x-axis <0.000000> speed <67.317104>;
		
		turn lshoulder to z-axis <0.000000> speed <50.000000>;
		turn rshoulder to z-axis <0.000000> speed <50.000000>;
		turn lshoulder to x-axis <0.000000> speed <50.000000>;
		turn rshoulder to x-axis <0.000000> speed <50.000000>;
		//turn rmissle2 to z-axis <0.000000> speed <60.000000>;
		//turn lmissle2 to z-axis <0.000000> speed <60.000000>;
		//move rmissle2 to y-axis [0.000000] speed [10.000000];
		//move lmissle2 to y-axis [0.000000] speed [10.000000];
	/*	wait-for-turn luparm around x-axis;
		wait-for-turn ruparm around x-axis;
		wait-for-turn ruparm around z-axis;
		wait-for-turn luparm around z-axis;
		wait-for-turn rarm around x-axis;
		wait-for-turn larm around x-axis;*/
	}
	InMotion = 0;
}

RequestState(requestedstate, currentstate)
{
	//get  PRINT(999, requestedstate,currentstate,statechg_StateChanging);
	
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			currentstate = 1;
		}
		else
		{
			call-script Go();
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}


Create()
{
	hide eyeflare;
	hide aimy2;
	hide lgunflare;
	hide lshoulder;
	hide rgunflare;
	hide rshoulder;
	hide aimx1;
	hide rmispoint;
	hide lmispoint;
	hide aimy1;
	set ARMORED to 1;
	hide eyeflare;
	hide lgunflare;
	hide rgunflare;
	animSpeed = 8;
	bMoving = FALSE;
	InMotion = 0;
	Aim_while_moving = 1;
	HandsUp = 0;
	ShootingArm = 1;
	WhichShoulderRocket = 0;
	NotReadytoStomp=1;
	restore_delay = 2000;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1;
}

setSFXoccupy(Func_Var_1)
{
	SmokeEffectFeet = Func_Var_1;
}


RestoreHead()
{
	signal SIG_HEAD; //kills all sleeping threads that overlap the bitmask. 
	set-signal-mask SIG_HEAD; //sets what signals kill the current thread
	sleep 3000;
	turn aimy2 to y-axis <0.000000> speed <110.000000>;
	turn aimy2 to x-axis <0.000000> speed <110.000000>;
	wpn2_lasthead = 0;
}

AimWeapon3(heading, pitch)
{
	return (1);
}

FireWeapon3()
{
	WhichShoulderRocket = !WhichShoulderRocket;
}

AimFromWeapon3(piecenum)
{
	piecenum = 3;
}

QueryWeapon3(piecenum)
{
	piecenum = rmispoint + WhichShoulderRocket;
}
/*
AimWeapon1(heading, pitch)
{

	start-script RequestState(0);
	signal SIG_BODY;
	
	//get PRINT(HandsUp, heading,wpn1_lasthead,wpn2_lasthead);
	if( !HandsUp )
	{
		return (0);
	}
	signal SIG_HEAD;
	turn aimy1 to y-axis heading speed <50.000000>;
	turn lshoulder to x-axis <0.0> - pitch speed <150>;
	turn rshoulder to x-axis <0.0> - pitch speed <150>;
	//if (((get ABS(wpn1_lasthead - heading)) > 65536) OR(((get ABS(wpn1_lasthead - heading)) > <1500>) AND ((get ABS(wpn1_lasthead - heading)) < 65536 - <1500>)))
	if (((get ABS(wpn1_lasthead - heading)) > <3>))
	
	{
		//wpn1_lasthead = heading;
		
		//get PRINT(100, heading,wpn1_lasthead,wpn2_lasthead);
		wait-for-turn aimy1 around y-axis;
		
		//get PRINT(1000, heading,wpn1_lasthead,wpn2_lasthead);
	}
	//get PRINT(10, heading,wpn1_lasthead,wpn2_lasthead);
	
	wpn1_lasthead = heading;
	start-script RestoreBody();
	return (1);
}
*/

static-var aimy1delta, timetozero, deceleratethreshold;
static-var aimy1velocity, aimy1target, aimy1position, gameFrame;
//-------------------------------CONSTANT ACCELERATION TURRET TURNING---------------------------
// MaxVelocity and acceleration are in degrees per frame (not second!)
// Jerk is the minimum velocity of the turret
// A high precision requirement can result in overshoots if desired 
// (c) CC BY NC ND Beherith mysterme@gmail.com

#define MAX_AIMY1_VELOCITY <3.00>
#define AIMY1_ACCELERATION <0.15>
#define AIMY1_JERK <0.5>
#define AIMY1_PRECISION <1.2>
#define AIMY1_RESTORE_SPEED <1.0>

RestoreBody() // no need to signal, as threads inherit parents signal masks
{

	sleep 3000;
	
	start-script RequestState(1);
	//turn aimy1 to y-axis <0.000000> speed <60.000000>;
	turn lshoulder to x-axis <0.0> speed <150>;
	turn rshoulder to x-axis <0.0> speed <150>;
	while ( get ABS(aimy1position) > AIMY1_RESTORE_SPEED){
		if (aimy1position > 0 ) {
			aimy1position = aimy1position - AIMY1_RESTORE_SPEED;
			aimy1velocity = (-1) * AIMY1_RESTORE_SPEED;
		}
		else
		{
			aimy1position = aimy1position + AIMY1_RESTORE_SPEED;
			aimy1velocity = AIMY1_RESTORE_SPEED;
		}
		turn aimy1 to y-axis aimy1position speed 30 * AIMY1_RESTORE_SPEED;
		sleep 30;
	}
	aimy1velocity = 0;
}


AimWeapon1(heading, pitch)
{

	start-script RequestState(0);
	signal SIG_BODY;
	set-signal-mask SIG_BODY;
	
	if( !HandsUp )
	{
		return (0);
	}
	//signal SIG_HEAD;
	//We can do this any time
	turn lshoulder to x-axis <0.0> - pitch speed <150>;
	turn rshoulder to x-axis <0.0> - pitch speed <150>;
	
	aimy1target = heading;
	aimy1delta = aimy1target - aimy1position;

	
	while( ( get ABS(aimy1delta) > AIMY1_PRECISION ) OR (get ABS(aimy1velocity) > AIMY1_JERK)){
		if (gameFrame != get(GAME_FRAME)){ //this is to make sure we dont get double-called, as previous aimweapon thread runs before new aimweaponthread can signal-kill previous one 
			gameFrame = get(GAME_FRAME);
	
			//Clamp aimy1position and aimy1delta between <-180>;<180>
			while (aimy1position >  <180>) aimy1position = aimy1position - <360>;
			while (aimy1position < <-180>) aimy1position = aimy1position + <360>;
			while (aimy1delta >  <180>) aimy1delta = aimy1delta - <360>;
			while (aimy1delta < <-180>) aimy1delta = aimy1delta + <360>;
		
			//number of frames required to decelerate to 0
			timetozero = get ABS(aimy1velocity) / AIMY1_ACCELERATION;
			
			//distance from target where we should start decelerating, always 'positive'
			//pos = t * v - (t*(t-1)*a/2)
			deceleratethreshold = timetozero * (get ABS(aimy1velocity)) - (timetozero * (timetozero - 1) * AIMY1_ACCELERATION / 2); 
			
			//get PRINT ( aimy1delta , deceleratethreshold, aimy1velocity, timetozero );
			
			if (get ABS(aimy1delta) <= deceleratethreshold){ //we need to decelerate
				if (aimy1velocity > 0) aimy1velocity = aimy1velocity - AIMY1_ACCELERATION;
				else 				   aimy1velocity = aimy1velocity + AIMY1_ACCELERATION;
			}	
			else //we need to accelerate
			{
				if (aimy1delta > 0) aimy1velocity = get MIN(       MAX_AIMY1_VELOCITY, aimy1velocity + AIMY1_ACCELERATION); 
				else                aimy1velocity = get MAX((-1) * MAX_AIMY1_VELOCITY, aimy1velocity - AIMY1_ACCELERATION);
			}
			
			//Apply jerk at very low velocities
			if (get ABS(aimy1velocity) < AIMY1_JERK){
				if ((aimy1delta >        AIMY1_JERK)) aimy1velocity =        AIMY1_JERK;
				if ((aimy1delta < (-1) * AIMY1_JERK)) aimy1velocity = (-1) * AIMY1_JERK;
			}
			
			aimy1position = aimy1position + aimy1velocity; 
			turn aimy1 to y-axis aimy1position now;
			aimy1delta = aimy1target - aimy1position ; 	
		}
		sleep 30;		
	}
	aimy1velocity = 0;
	start-script RestoreBody();
	return (1);
}
/*
static-var tryme;
AccelTurn(piecenum, axis, startpos, target,startspeed, accel){ // this wont ever work cause piecenum cant be variable
	//this is BLOCKING until we go past target
	//axis can be 0,1,2 for X, Y , Z
	//startpos is current known position
	//target is target position
	//startspeed is the speed we start from
	//accel is positive for increasing, and negative for decreasing from startspeed
	//also, you better do your math right to prevent massive overshoots and undershoots!
	if (startpos > target){
		while (startpos > target){
			startpos = startpos - startspeed;
			startspeed = startspeed + accel;
			if (axis == 0) turn tryme to x-axis startpos now;
			if (axis == 1) turn piecenum to y-axis startpos now;
			if (axis == 2) turn piecenum to z-axis startpos now;
			sleep 30;
		}
	
	}else{
		while (startpos < target){
			startpos = startpos + startspeed;
			startspeed = startspeed + accel;
			if (axis == 0) turn piecenum to x-axis startpos now;
			if (axis == 1) turn piecenum to y-axis startpos now;
			if (axis == 2) turn piecenum to z-axis startpos now;
			sleep 30;
		}
	
	}	
}*/

FireWeapon1()
{	
	turn aimy1 to x-axis <-1.2> now;
	turn aimy1 to x-axis <0> speed <1.5>;
	if( ShootingArm )
	{
		turn luparm to x-axis <15.000000> speed <180.000000>;
		turn larm to x-axis <-105.000000> speed <180.000000>;
		//show lgunflare;
		sleep 300;
		//hide lgunflare;
		turn larm to x-axis <-86.000000> speed <56.000000>;
		turn luparm to x-axis <0.000000> speed <40.000000>;
	}
	else
	{
		turn ruparm to x-axis <15.000000> speed <180.000000>;
		turn rarm to x-axis <-105.000000> speed <180.000000>;
		//show rgunflare;
		sleep 350;
		//hide rgunflare;
		turn rarm to x-axis <-86.000000> speed <56.000000>;
		turn ruparm to x-axis <0.000000> speed <40.000000>;
	}
	ShootingArm = !ShootingArm;
}

AimFromWeapon1(piecenum)
{
	piecenum = torso;
}

QueryWeapon1(piecenum)
{
	piecenum = rgunflare + ShootingArm;
}

AimWeapon2(heading, pitch) //headlazor
{
	signal SIG_HEAD;
	//get PRINT(2, heading,wpn1_lasthead,wpn2_lasthead);
	turn aimy2 to x-axis <0> - (get MAX(<-12>,pitch)) speed <50>;
	turn aimy2 to y-axis heading - aimy1position speed <100.000000>;
	if (((get ABS(wpn2_lasthead - heading)) > 65536) OR(((get ABS(wpn2_lasthead - heading)) > 5000) AND ((get ABS(wpn2_lasthead - heading)) < 65536 - 5000)))
	{
		wait-for-turn aimy2 around y-axis;
	}
	wpn2_lasthead = heading;
	start-script RestoreHead();
	return (1);
}

FireWeapon2()
{
	show eyeflare;
	sleep 150;
	hide eyeflare;
}

AimFromWeapon2(piecenum)
{
	piecenum = eyeflare;
}

QueryWeapon2(piecenum)
{
	piecenum = eyeflare;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimWeapon4(heading, pitch)
{
	signal SIG_FOOTSTOMP_L;
	set-signal-mask SIG_FOOTSTOMP_L;
	while(NotReadytoStomp OR !WhichFootStompsBool) sleep 65;
	return (0);
}

AimFromWeapon4(piecenum)
{
	piecenum = ltoes;
}

QueryWeapon4(piecenum)
{
	piecenum = ltoes;
}

AimWeapon5(heading, pitch)
{
	signal SIG_FOOTSTOMP_R;
	set-signal-mask SIG_FOOTSTOMP_R;
	while(NotReadytoStomp OR WhichFootStompsBool) sleep 65;
	return (0);
}

AimFromWeapon5(piecenum)
{
	piecenum = rtoes;
}

QueryWeapon5(piecenum)
{
	piecenum = rtoes;
}


Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode hips type BITMAPONLY | NOHEATCLOUD;
		explode lthigh type BITMAPONLY | NOHEATCLOUD;
		explode lleg type BITMAPONLY | NOHEATCLOUD;
		explode lheel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode ltoes type BITMAPONLY | NOHEATCLOUD;
		explode rthigh type BITMAPONLY | NOHEATCLOUD;
		explode rleg type BITMAPONLY | NOHEATCLOUD;
		explode rheel type BITMAPONLY | NOHEATCLOUD;
		explode rtoes type BITMAPONLY | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		//explode lmissle2 type BITMAPONLY | NOHEATCLOUD;
		//explode lmispoint type BITMAPONLY | NOHEATCLOUD;
		//explode rmissle2 type BITMAPONLY | NOHEATCLOUD;
		//explode rmispoint type BITMAPONLY | NOHEATCLOUD;
		//explode luparm type BITMAPONLY | NOHEATCLOUD;
		//explode larm type BITMAPONLY | NOHEATCLOUD;
		//explode lgunflare type BITMAPONLY | NOHEATCLOUD;
		//explode ruparm type BITMAPONLY | NOHEATCLOUD;
		//explode rarm type BITMAPONLY | NOHEATCLOUD;
		//explode rgunflare type BITMAPONLY | NOHEATCLOUD;
		explode head type BITMAPONLY | NOHEATCLOUD;
		//explode eyeflare type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode hips type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type FALL | NOHEATCLOUD;
		explode lheel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode ltoes type FALL | NOHEATCLOUD;
		explode rthigh type FALL | NOHEATCLOUD;
		explode rheel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rtoes type FALL | NOHEATCLOUD;
		explode lmissle2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lmispoint type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rmissle2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rmispoint type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lgunflare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rgunflare type FALL | NOHEATCLOUD;
		explode head type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode eyeflare type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode hips type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lleg type BITMAPONLY | NOHEATCLOUD;
		explode lheel type SMOKE | FALL | NOHEATCLOUD;
		explode ltoes type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type BITMAPONLY | NOHEATCLOUD;
		explode rheel type SMOKE | FALL | NOHEATCLOUD;
		explode rtoes type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type BITMAPONLY | NOHEATCLOUD;
		//explode lmissle2 type SMOKE | FALL | NOHEATCLOUD;
		//explode lmispoint type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode rmissle2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode rmispoint type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode luparm type BITMAPONLY | NOHEATCLOUD;
		//explode larm type BITMAPONLY | NOHEATCLOUD;
		//explode lgunflare type SMOKE | FALL | NOHEATCLOUD;
		//explode ruparm type BITMAPONLY | NOHEATCLOUD;
		//explode rarm type BITMAPONLY | NOHEATCLOUD;
		//explode rgunflare type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode head type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode eyeflare type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode hips type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lthigh type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lheel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode ltoes type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rleg type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rheel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rtoes type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode torso type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lmissle2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lmispoint type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rmissle2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode rmispoint type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode luparm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode larm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lgunflare type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode ruparm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rarm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rgunflare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode eyeflare type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
