#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, link, thrust1, thrust2, thrust3, thrust4;

static-var  Static_Var_1, unitviewer, statechg_DesiredState, statechg_StateChanging;


pickupscr()
{

	sleep 11;
	return (0);
}

dropoffscr()
{

	sleep 15;
	return (0);
}

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"



InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	return (0);
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script pickupscr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script dropoffscr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
	return (0);
}

#define IDLEHOVERSCALE 32
#define IDLEHOVERSPEED 60
#define IDLEBASEPIECE base
#include "idlehover.h"

Create()
{
	hide thrust4;
	hide thrust2;
	hide thrust1;
	hide link;
	hide thrust3;
	turn thrust1 to x-axis <-90> now; 
	turn thrust2 to x-axis <-90> now; 
	turn thrust3 to x-axis <-90> now; 
	turn thrust4 to x-axis <-90> now; 
	
	unitviewer = FALSE;
	Static_Var_1 = 0;
	call-script InitState();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script IdleHover();
	return (0);
}


SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

QueryTransport(Func_Var_1, Func_Var_2)
{
	Func_Var_1 = 1;
	return (0);
}

BeginTransport(Func_Var_1)
{
	move link to y-axis [0.000000] - Func_Var_1 now;
	start-script RequestState(0);
	return (0);
}

EndTransport()
{
	start-script RequestState(1);
	return (0);
}

Activate()
{
	show thrust4;
	show thrust2;
	show thrust1;
	show thrust3;
	return (0);
}

Deactivate()
{
	hide thrust4;
	hide thrust2;
	hide thrust1;
	hide thrust3;
	return (0);
}



StopMoving()
{
	signal 8;
	Static_Var_1 = 0;
	return (0);
}

MoveRate1()
{
	signal 8;
	set-signal-mask 8;
	Static_Var_1 = 1;
	return (0);
}

MoveRate2()
{
	signal 8;
	set-signal-mask 8;
	Static_Var_1 = 2;
	return (0);
}

MoveRate3()
{
	signal 8;
	set-signal-mask 8;
	Static_Var_1 = 3;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode link type BITMAPONLY | NOHEATCLOUD;
		explode thrust1 type BITMAPONLY | NOHEATCLOUD;
		explode thrust2 type BITMAPONLY | NOHEATCLOUD;
		explode thrust3 type BITMAPONLY | NOHEATCLOUD;
		explode thrust4 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode link type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrust1 type BITMAPONLY | NOHEATCLOUD;
		explode thrust2 type BITMAPONLY | NOHEATCLOUD;
		explode thrust3 type BITMAPONLY | NOHEATCLOUD;
		explode thrust4 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode link type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode thrust1 type BITMAPONLY | NOHEATCLOUD;
		explode thrust2 type BITMAPONLY | NOHEATCLOUD;
		explode thrust3 type BITMAPONLY | NOHEATCLOUD;
		explode thrust4 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
    explode base type BITMAPONLY | NOHEATCLOUD;
    explode link type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
    explode thrust1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
    explode thrust2 type BITMAPONLY | NOHEATCLOUD;
    explode thrust3 type BITMAPONLY | NOHEATCLOUD;
    explode thrust4 type BITMAPONLY | NOHEATCLOUD;
	return corpsetype;
}
