#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, base, turret, lwheel,rwheel, mlauncher;

static-var  restore_delay, gun_1;

// Signal definitions
#define SIG_AIM				4

#define BASEPIECE base
#define HITSPEED <75.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"

Create()
{
	hide flare1;
	hide flare2;
	hide flare1;
	hide flare2;
	gun_1 = flare1;
	restore_delay = 3000;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	turn turret to y-axis <0.000000> speed <90.021978>;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <250.060440>;
	wait-for-turn turret around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		show flare1;
		sleep 150;
		hide flare1;
	}
	if( gun_1 == 1 )
	{
		show flare2;
		sleep 150;
		hide flare2;
	}
	gun_1 = !gun_1;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = mlauncher;
}

QueryPrimary(piecenum)
{
	piecenum = gun_1;
}

SweetSpot(piecenum)
{
	piecenum = base;
}
StartMoving()
{
	spin lwheel around x-axis speed <150> accelerate <15>;
	spin rwheel around x-axis speed <150> accelerate <15>;

}
StopMoving()
{
	stop-spin rwheel around x-axis;
	stop-spin lwheel around x-axis;
	
}
Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare1 type BITMAPONLY | NOHEATCLOUD;
		//explode flare2 type BITMAPONLY | NOHEATCLOUD;
		explode rwheel type BITMAPONLY | NOHEATCLOUD;
		explode lwheel type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode turret type FALL | NOHEATCLOUD;
		//explode flare1 type FALL | NOHEATCLOUD;
		//explode flare2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rwheel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lwheel type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rwheel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lwheel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rwheel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode lwheel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
