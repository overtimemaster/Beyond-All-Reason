#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, door1, door2, flare, thrusta, thrustb ;

static-var  Static_Var_1, bMoving, statechg_DesiredState, statechg_StateChanging;

Go()
{
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Stop()
{
}


InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

#define BASEPIECE base
#define HITSPEED <105.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 1
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}


Create()
{
	hide thrustb;
	hide thrusta;
	hide flare;
	Static_Var_1 = 0;
	bMoving = FALSE;
	call-script InitState();
}

Activate()
{
	show thrustb;
	show thrusta;
	start-script RequestState(0);
}

Deactivate()
{
	hide thrustb;
	hide thrusta;
	start-script RequestState(1);
}

setSFXoccupy(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode door2 type BITMAPONLY | NOHEATCLOUD;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		explode thrusta type BITMAPONLY | NOHEATCLOUD;
		explode thrustb type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type FALL | NOHEATCLOUD;
		explode door2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		explode thrusta type FALL | NOHEATCLOUD;
		explode thrustb type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type BITMAPONLY | NOHEATCLOUD;
		explode door2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		explode thrusta type SMOKE | FALL | NOHEATCLOUD;
		explode thrustb type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode door1 type BITMAPONLY | NOHEATCLOUD;
		explode door2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode flare type BITMAPONLY | NOHEATCLOUD;
		explode thrusta type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode thrustb type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
