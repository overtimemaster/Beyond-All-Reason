#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, turret, arm, beam, lpump, rpump, nano1, nano2, wake;

#define SIG_BUILD		2
#define SIG_MOVE		4

static-var  Static_Var_1, statechg_DesiredState, statechg_StateChanging, notBuilding, nano, pump;




RockOnWaves()
{
	var rockDir, rockAng, rockSpeed;
	rockDir = <-0.1>;
	rockAng = <-0.1>;
	while( TRUE )
	{
		while( get ABS(rockAng) < <1.31> )
		{
			rockSpeed = <1.45> - get ABS(rockAng);
			turn base to x-axis rockAng speed rockSpeed*5;
			turn base to z-axis rockAng speed rockSpeed*5;
			wait-for-turn base around x-axis;
			wait-for-turn base around z-axis;
			rockAng = rockAng + rockDir;
		}
		rockDir = 0 - rockDir;
		rockAng = rockAng + rockDir + rockDir;
	}
}

#define BASEPIECE base
#define HITSPEED <20.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 3
#define MAXTILT 200

#include "unit_hitbyweaponid_and_smoke.h"

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	var waketime;
	while( TRUE )
	{
		emit-sfx 1024 + 0 from wake;
		waketime = (get CURRENT_SPEED) * 100 / get MAX_SPEED;
		if( waketime < 50 ) waketime = 50;
		sleep 10000 / waketime;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}

MovementControl()
{
	while (pump)
	{ 
			move lpump to y-axis [1] speed [1];
			move lpump to x-axis [1] speed [1];
			sleep 2000;
			move lpump to y-axis [0] speed [1];
			move lpump to x-axis [0] speed [1];
			sleep 2000;
	}

}


Go()
{
	set INBUILDSTANCE to 1;
	pump = 1;
	
	turn arm to x-axis <45> speed <90>;
	turn beam to x-axis <-45> speed <180>;
	wait-for-turn beam around x-axis;
	sleep 500;
	start-script MovementControl();
}

Stop()
{	
	set INBUILDSTANCE to 0;
	pump = 0;
	
	turn arm to x-axis <-90> speed <90>;
	turn beam to x-axis <-180> speed <180>;
	turn turret to y-axis <0> speed <180>;
	wait-for-turn beam around x-axis;
	move lpump to y-axis [0] speed [1];
	move lpump to x-axis [0] speed [1];
	sleep 200;	
}


RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}


Create()
{
	hide wake;
	hide nano2;
	hide nano1;
	Static_Var_1 = 0;
	notBuilding = 1;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	hide nano1;
	hide nano2;
	hide wake;
	turn arm to x-axis <-90> now;
	turn beam to x-axis <-180> now;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script RockOnWaves();
	
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(heading,pitch)
{
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	turn turret to y-axis heading speed <360.000000>;
	turn beam to x-axis <-45> -pitch speed <90>;
	set INBUILDSTANCE to 1;
	
}

StopBuilding()
{
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	sleep 3000;
	set-signal-mask 0;
	signal SIG_BUILD;
	start-script RequestState(1);
}

QueryNanoPiece(piecenum)
{
	if(nano==1)
	{
		piecenum = nano1;
	}
	else
	{
		piecenum = nano2;
	}
	nano = !nano;
}

TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arm type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type BITMAPONLY | NOHEATCLOUD;
		explode nano2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arm type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type FALL | NOHEATCLOUD;
		explode nano1 type FALL | NOHEATCLOUD;
		explode nano2 type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode arm type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode beam type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode nano2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
	return corpsetype;
}
