#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  pelvis, lleg, lfoot, rleg, rfoot, rthigh, lthigh,head,dish,rotator;

static-var  bMoving, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5;

// Signal definitions
#define SIG_ACTIVATE			2

// For N:\animations\corspec_anim_walk.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 2, 8))
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
static-var animSpeed, maxSpeed, animFramesPerKeyframe;
#define SIG_WALK 4
Walk() {// For N:\animations\corspec_anim_walk.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 2, 8)) 
	//CC BY NC ND (c) Beherith
	set-signal-mask SIG_WALK;
	if (bMoving) { //Frame:5
			turn lfoot to x-axis <26.466910> speed <49.000477> / animSpeed; //delta=-1.63 
			turn lleg to x-axis <-9.730538> speed <130.748442> / animSpeed; //delta=4.36 
			turn lthigh to x-axis <-39.987742> speed <70.213388> / animSpeed; //delta=2.34 
			turn lthigh to z-axis <-3.971332> speed <122.904832> / animSpeed; //delta=4.10 
			turn lthigh to y-axis <-0.268346> speed <6.294698> / animSpeed; //delta=-0.21 
			turn pelvis to z-axis <-2.000000> speed <60.000000> / animSpeed; //delta=2.00 
			turn pelvis to y-axis <-4.999999> speed <149.999983> / animSpeed; //delta=-5.00 
			turn rfoot to x-axis <-14.434193> speed <433.025866> / animSpeed; //delta=14.43 
			turn rfoot to z-axis <-1.616138> speed <48.484150> / animSpeed; //delta=1.62 
			turn rfoot to y-axis <0.260668> speed <7.820050> / animSpeed; //delta=0.26 
			turn rleg to x-axis <-1.909390> speed <57.281645> / animSpeed; //delta=1.91 
			turn rthigh to x-axis <17.803639> speed <534.109138> / animSpeed; //delta=-17.80 
			turn rthigh to z-axis <1.629898> speed <48.896936> / animSpeed; //delta=-1.63 
			turn rthigh to y-axis <-0.628582> speed <18.857449> / animSpeed; //delta=-0.63 
		sleep ((33*animSpeed) -1);
	}
	while(bMoving) {
		if (bMoving) { //Frame:10
			turn lfoot to x-axis <70.181935> speed <1311.450774> / animSpeed; //delta=-43.72 
			turn lfoot to z-axis <2.375184> speed <28.664216> / animSpeed; //delta=-0.96 
			turn lfoot to y-axis <-3.729687> speed <126.793378> / animSpeed; //delta=-4.23 
			turn lleg to x-axis <-71.901961> speed <1865.142715> / animSpeed; //delta=62.17 
			turn lthigh to x-axis <-18.848920> speed <634.164674> / animSpeed; //delta=-21.14 
			turn lthigh to z-axis <-6.312246> speed <70.227424> / animSpeed; //delta=2.34 
			turn lthigh to y-axis <2.831168> speed <92.985423> / animSpeed; //delta=3.10 
			turn pelvis to x-axis <6.000000> speed <180.000005> / animSpeed; //delta=-6.00 
			turn pelvis to z-axis <-0.000000> speed <60.000000> / animSpeed; //delta=-2.00 
			turn pelvis to y-axis <-7.000000> speed <60.000019> / animSpeed; //delta=-2.00 
			turn rfoot to x-axis <-27.878513> speed <403.329620> / animSpeed; //delta=13.44 
			turn rfoot to z-axis <-1.255349> speed <10.823688> / animSpeed; //delta=-0.36 
			turn rfoot to y-axis <0.700846> speed <13.205318> / animSpeed; //delta=0.44 
			turn rleg to x-axis <-28.773114> speed <805.911719> / animSpeed; //delta=26.86 
			turn rthigh to x-axis <51.626825> speed <1014.695567> / animSpeed; //delta=-33.82 
			turn rthigh to z-axis <4.806150> speed <95.287568> / animSpeed; //delta=-3.18 
			turn rthigh to y-axis <-2.740744> speed <63.364872> / animSpeed; //delta=-2.11 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:15
			turn lfoot to x-axis <46.418147> speed <712.913665> / animSpeed; //delta=23.76 
			turn lfoot to z-axis <-0.001699> speed <71.306494> / animSpeed; //delta=2.38 
			turn lfoot to y-axis <0.002671> speed <111.970736> / animSpeed; //delta=3.73 
			turn lleg to x-axis <-23.275261> speed <1458.801007> / animSpeed; //delta=-48.63 
			turn lthigh to x-axis <-26.629176> speed <233.407696> / animSpeed; //delta=7.78 
			turn lthigh to z-axis <-5.205854> speed <33.191774> / animSpeed; //delta=-1.11 
			turn lthigh to y-axis <0.463729> speed <71.023150> / animSpeed; //delta=-2.37 
			turn pelvis to x-axis <3.000000> speed <90.000003> / animSpeed; //delta=3.00 
			turn pelvis to z-axis <2.000000> speed <60.000000> / animSpeed; //delta=-2.00 
			turn pelvis to y-axis <-5.000000> speed <60.000006> / animSpeed; //delta=2.00 
			turn rfoot to x-axis <-24.655513> speed <96.690019> / animSpeed; //delta=-3.22 
			turn rfoot to z-axis <-1.850861> speed <17.865364> / animSpeed; //delta=0.60 
			turn rfoot to y-axis <-0.528248> speed <36.872802> / animSpeed; //delta=-1.23 
			turn rleg to x-axis <20.092798> speed <1465.977367> / animSpeed; //delta=-48.87 
			turn rthigh to x-axis <6.048936> speed <1367.336671> / animSpeed; //delta=45.58 
			turn rthigh to z-axis <-2.768880> speed <227.250902> / animSpeed; //delta=7.58 
			turn rthigh to y-axis <1.439518> speed <125.407860> / animSpeed; //delta=4.18 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:20
			turn lfoot to x-axis <13.179870> speed <997.148290> / animSpeed; //delta=33.24 
			turn lfoot to z-axis <1.629828> speed <48.945820> / animSpeed; //delta=-1.63 
			turn lfoot to y-axis <0.238299> speed <7.068858> / animSpeed; //delta=0.24 
			turn lleg to x-axis <-0.309187> speed <688.982231> / animSpeed; //delta=-22.97 
			turn lthigh to x-axis <-13.714644> speed <387.435958> / animSpeed; //delta=-12.91 
			turn lthigh to z-axis <-2.233255> speed <89.177959> / animSpeed; //delta=-2.97 
			turn pelvis to x-axis <1.000000> speed <60.000003> / animSpeed; //delta=2.00 
			turn pelvis to z-axis <3.000000> speed <30.000003> / animSpeed; //delta=-1.00 
			turn pelvis to y-axis <0.000000> speed <149.999996> / animSpeed; //delta=5.00 
			turn rfoot to x-axis <-0.452667> speed <726.085379> / animSpeed; //delta=-24.20 
			turn rfoot to z-axis <-1.544635> speed <9.186789> / animSpeed; //delta=-0.31 
			turn rfoot to y-axis <-0.721502> speed <5.797635> / animSpeed; //delta=-0.19 
			turn rleg to x-axis <13.142299> speed <208.514961> / animSpeed; //delta=6.95 
			turn rthigh to x-axis <-28.231926> speed <1028.425861> / animSpeed; //delta=34.28 
			turn rthigh to z-axis <-2.664118> speed <3.142856> / animSpeed; //delta=-0.10 
			turn rthigh to y-axis <-0.204136> speed <49.309610> / animSpeed; //delta=-1.64 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:25
			turn lfoot to x-axis <-10.804440> speed <719.529300> / animSpeed; //delta=23.98 
			turn lfoot to y-axis <-0.162885> speed <12.035521> / animSpeed; //delta=-0.40 
			turn lleg to x-axis <1.993515> speed <69.081041> / animSpeed; //delta=-2.30 
			turn lthigh to x-axis <17.063926> speed <923.357120> / animSpeed; //delta=-30.78 
			turn lthigh to z-axis <-1.680530> speed <16.581764> / animSpeed; //delta=-0.55 
			turn lthigh to y-axis <0.991576> speed <13.256465> / animSpeed; //delta=0.44 
			turn pelvis to x-axis <-0.000000> speed <30.000000> / animSpeed; //delta=1.00 
			turn pelvis to z-axis <2.000000> speed <30.000003> / animSpeed; //delta=1.00 
			turn pelvis to y-axis <5.000000> speed <149.999996> / animSpeed; //delta=5.00 
			turn rfoot to x-axis <25.803908> speed <787.697250> / animSpeed; //delta=-26.26 
			turn rfoot to z-axis <-1.411584> speed <3.991531> / animSpeed; //delta=-0.13 
			turn rfoot to y-axis <-0.515103> speed <6.191977> / animSpeed; //delta=0.21 
			turn rleg to x-axis <-9.028270> speed <665.117085> / animSpeed; //delta=22.17 
			turn rthigh to x-axis <-40.090465> speed <355.756157> / animSpeed; //delta=11.86 
			turn rthigh to z-axis <3.371667> speed <181.073544> / animSpeed; //delta=-6.04 
			turn rthigh to y-axis <-0.375551> speed <5.142446> / animSpeed; //delta=-0.17 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:30
			turn lfoot to x-axis <-28.122044> speed <519.528120> / animSpeed; //delta=17.32 
			turn lfoot to z-axis <1.259065> speed <12.084914> / animSpeed; //delta=0.40 
			turn lfoot to y-axis <-0.693546> speed <15.919843> / animSpeed; //delta=-0.53 
			turn lleg to x-axis <-29.159696> speed <934.596325> / animSpeed; //delta=31.15 
			turn lthigh to x-axis <51.840559> speed <1043.298965> / animSpeed; //delta=-34.78 
			turn lthigh to z-axis <-5.526871> speed <115.390252> / animSpeed; //delta=3.85 
			turn lthigh to y-axis <4.437991> speed <103.392442> / animSpeed; //delta=3.45 
			turn pelvis to x-axis <6.000000> speed <180.000005> / animSpeed; //delta=-6.00 
			turn pelvis to z-axis <-0.000000> speed <60.000000> / animSpeed; //delta=2.00 
			turn pelvis to y-axis <7.000000> speed <60.000006> / animSpeed; //delta=2.00 
			turn rfoot to x-axis <68.089186> speed <1268.558330> / animSpeed; //delta=-42.29 
			turn rfoot to z-axis <-2.157722> speed <22.384155> / animSpeed; //delta=0.75 
			turn rfoot to y-axis <3.499864> speed <120.449000> / animSpeed; //delta=4.01 
			turn rleg to x-axis <-71.085972> speed <1861.731061> / animSpeed; //delta=62.06 
			turn rthigh to x-axis <-18.688926> speed <642.046166> / animSpeed; //delta=-21.40 
			turn rthigh to z-axis <5.834459> speed <73.883768> / animSpeed; //delta=-2.46 
			turn rthigh to y-axis <-3.234256> speed <85.761148> / animSpeed; //delta=-2.86 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:35
			turn lfoot to x-axis <-24.880019> speed <97.260733> / animSpeed; //delta=-3.24 
			turn lfoot to z-axis <1.854115> speed <17.851494> / animSpeed; //delta=-0.60 
			turn lfoot to y-axis <0.535930> speed <36.884280> / animSpeed; //delta=1.23 
			turn lleg to x-axis <20.493749> speed <1489.603350> / animSpeed; //delta=-49.65 
			turn lthigh to x-axis <6.570095> speed <1358.113905> / animSpeed; //delta=45.27 
			turn lthigh to z-axis <2.723643> speed <247.515432> / animSpeed; //delta=-8.25 
			turn lthigh to y-axis <-1.313192> speed <172.535480> / animSpeed; //delta=-5.75 
			turn pelvis to x-axis <3.000000> speed <90.000003> / animSpeed; //delta=3.00 
			turn pelvis to z-axis <-2.000000> speed <60.000000> / animSpeed; //delta=2.00 
			turn pelvis to y-axis <5.000000> speed <60.000006> / animSpeed; //delta=-2.00 
			turn rfoot to x-axis <45.741719> speed <670.424014> / animSpeed; //delta=22.35 
			turn rfoot to z-axis <0.001567> speed <64.778665> / animSpeed; //delta=-2.16 
			turn rfoot to y-axis <-0.002470> speed <105.069999> / animSpeed; //delta=-3.50 
			turn rleg to x-axis <-22.360216> speed <1461.772702> / animSpeed; //delta=-48.73 
			turn rthigh to x-axis <-26.904201> speed <246.458241> / animSpeed; //delta=8.22 
			turn rthigh to z-axis <4.971771> speed <25.880650> / animSpeed; //delta=0.86 
			turn rthigh to y-axis <-0.770711> speed <73.906346> / animSpeed; //delta=2.46 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:40
			turn lfoot to x-axis <-0.295343> speed <737.540290> / animSpeed; //delta=-24.58 
			turn lfoot to z-axis <1.544707> speed <9.282230> / animSpeed; //delta=0.31 
			turn lfoot to y-axis <0.716862> speed <5.427956> / animSpeed; //delta=0.18 
			turn lleg to x-axis <13.198688> speed <218.851811> / animSpeed; //delta=7.30 
			turn lthigh to x-axis <-28.319983> speed <1046.702333> / animSpeed; //delta=34.89 
			turn lthigh to z-axis <2.277032> speed <13.398340> / animSpeed; //delta=0.45 
			turn lthigh to y-axis <-0.293105> speed <30.602611> / animSpeed; //delta=1.02 
			turn pelvis to x-axis <1.000000> speed <60.000003> / animSpeed; //delta=2.00 
			turn pelvis to z-axis <-3.000000> speed <30.000003> / animSpeed; //delta=1.00 
			turn pelvis to y-axis <0.000000> speed <149.999996> / animSpeed; //delta=-5.00 
			turn rfoot to x-axis <12.831917> speed <987.294069> / animSpeed; //delta=32.91 
			turn rfoot to z-axis <-1.627522> speed <48.872677> / animSpeed; //delta=1.63 
			turn rfoot to y-axis <-0.248528> speed <7.381765> / animSpeed; //delta=-0.25 
			turn rleg to x-axis <-0.036673> speed <669.706286> / animSpeed; //delta=-22.32 
			turn rthigh to x-axis <-13.839819> speed <391.931435> / animSpeed; //delta=-13.06 
			turn rthigh to z-axis <2.131224> speed <85.216390> / animSpeed; //delta=2.84 
		sleep ((33*animSpeed) -1);
		}
		if (bMoving) { //Frame:45
			turn lfoot to x-axis <26.466910> speed <802.867578> / animSpeed; //delta=-26.76 
			turn lfoot to z-axis <1.419711> speed <3.749902> / animSpeed; //delta=0.12 
			turn lfoot to y-axis <0.496760> speed <6.603061> / animSpeed; //delta=-0.22 
			turn lleg to x-axis <-9.730538> speed <687.876778> / animSpeed; //delta=22.93 
			turn lthigh to x-axis <-39.987742> speed <350.032783> / animSpeed; //delta=11.67 
			turn lthigh to z-axis <-3.971332> speed <187.450913> / animSpeed; //delta=6.25 
			turn pelvis to x-axis <-0.000000> speed <30.000000> / animSpeed; //delta=1.00 
			turn pelvis to z-axis <-2.000000> speed <30.000003> / animSpeed; //delta=-1.00 
			turn pelvis to y-axis <-5.000000> speed <149.999996> / animSpeed; //delta=-5.00 
			turn rfoot to x-axis <-10.748712> speed <707.418863> / animSpeed; //delta=23.58 
			turn rfoot to y-axis <0.164666> speed <12.395835> / animSpeed; //delta=0.41 
			turn rleg to x-axis <1.958833> speed <59.865166> / animSpeed; //delta=-2.00 
			turn rthigh to x-axis <16.780489> speed <918.609251> / animSpeed; //delta=-30.62 
			turn rthigh to z-axis <1.654575> speed <14.299490> / animSpeed; //delta=0.48 
		sleep ((33*animSpeed) -1);
		}
	}
}
// Call this from MotionControl()!
StopWalking() {
	turn lfoot to x-axis <24.833560> speed <262.290155>;
	turn lfoot to y-axis <0.539711> speed <25.358676>;
	turn lfoot to z-axis <1.401140> speed <14.261299>;
	turn lleg to x-axis <-5.372256> speed <373.028543>;
	turn lthigh to x-axis <-37.647296> speed <271.622781>;
	turn lthigh to y-axis <0.000000> speed <34.507096>;
	turn lthigh to z-axis <0.125496> speed <49.503086>;
	turn pelvis to x-axis <0.000000> speed <36.000001>;
	turn pelvis to y-axis <0.000000> speed <29.999999>;
	turn pelvis to z-axis <0.000000> speed <12.000000>;
	turn rfoot to x-axis <0.000000> speed <253.711666>;
	turn rfoot to y-axis <0.000000> speed <24.089800>;
	turn rfoot to z-axis <0.000000> speed <12.955733>;
	turn rleg to x-axis <0.000000> speed <372.346212>;
	turn rthigh to x-axis <0.000000> speed <273.467334>;
	turn rthigh to y-axis <0.000000> speed <25.081572>;
	turn rthigh to z-axis <0.000000> speed <45.450180>;
}
// REMEMBER TO animspeed = 5 in Create() !!
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = 5; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		animSpeed = (get CURRENT_SPEED);
		if (animSpeed<1) animSpeed=1;
		animSpeed = (maxSpeed * 5) / animSpeed; 
		//get PRINT(maxSpeed, animFramesPerKeyframe, animSpeed); //how to print debug info from bos
		if (animSpeed<2) animSpeed=2;
		if (animspeed>10) animSpeed = 10;
		sleep 164;
	}
}
StartMoving(){
	signal SIG_WALK;
  set-signal-mask SIG_WALK;
	bMoving=TRUE;
	start-script Walk();
	start-script UnitSpeed();
}
StopMoving(){
	signal SIG_WALK;
	bMoving=FALSE;
	call-script StopWalking();
}


open()
{
	sleep 8;
	return (0);
}

close()
{
	sleep 8;
	return (0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from pelvis;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}


Create()
{
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 3000;
	start-script SmokeUnit();
	animSpeed = 5;
	Static_Var_5 = 0;
	return (0);
}

Activate()
{
	if( Static_Var_5 )
	{
		set ACTIVATION to 0;
		return (0);
	}
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	call-script open();
	spin dish around x-axis speed <100.021978>;
	return (0);
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
	turn dish to x-axis <0.000000> speed <-100.000000>;
	wait-for-turn dish around x-axis;
	call-script close();
	return (0);
}

HitByWeapon(anglex, anglez)
{
	if( get ACTIVATION )
	{
		Static_Var_5 = 1;
	}
	if( Static_Var_5 )
	{
		signal 4;
		set-signal-mask 4;
		set ACTIVATION to 0;
		sleep 8000;
		Static_Var_5 = 0;
		set ACTIVATION to 100;
	}
	return (0);
}


static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	Static_Var_2 = 0;
}
SetStunned(State)
{
    Stunned = State;
	if (Stunned) {
	    turn dish to x-axis <0.000000> speed <-100.000000>;
	} else {
	    start-script ExecuteRestoreAfterDelay();
	    spin dish around x-axis speed <100.021978>;
	}
}
RestoreAfterDelay()
{
	sleep Static_Var_4;
	start-script ExecuteRestoreAfterDelay();
}

SweetSpot(piecenum)
{
	piecenum = head;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		//explode lthigh type BITMAPONLY | NOHEATCLOUD;
		//explode lleg type BITMAPONLY | NOHEATCLOUD;
		//explode lfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rthigh type BITMAPONLY | NOHEATCLOUD;
		//explode rleg type BITMAPONLY | NOHEATCLOUD;
		//explode rfoot type BITMAPONLY | NOHEATCLOUD;
		explode head type BITMAPONLY | NOHEATCLOUD;
		explode rotator type BITMAPONLY | NOHEATCLOUD;
		explode dish type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode pelvis type BITMAPONLY | NOHEATCLOUD;
		explode lthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lfoot type FALL | NOHEATCLOUD;
		//explode rthigh type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode head type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rotator type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode dish type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode pelvis type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lleg type SMOKE | FALL | NOHEATCLOUD;
		//explode lfoot type SMOKE | FALL | NOHEATCLOUD;
		//explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rleg type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rfoot type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode head type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rotator type SMOKE | FALL | NOHEATCLOUD;
		explode dish type FIRE | SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode pelvis type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode lthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode lleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode lfoot type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rthigh type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode rleg type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode rfoot type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode head type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode rotator type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode dish type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
