#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, flare3, flare4, turret, base, fwheel, brwheel,
       blwheel,sleeve1,sleeve2, barrel1,barrel2,barrel3,barrel4;

static-var  restore_delay, gun_3;

// Signal definitions
#define SIG_AIM_3			2




#define BASEPIECE base
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 5
#define MAXTILT 100

#include "unit_hitbyweaponid_and_smoke.h"


StartMoving()
{
	spin fwheel around x-axis speed <150.032967>;
	spin blwheel around x-axis speed <150.032967>;
	spin brwheel around x-axis speed <150.032967>;
}

StopMoving()
{
	stop-spin fwheel around x-axis;
	stop-spin blwheel around x-axis;
	stop-spin brwheel around x-axis;
}

Create()
{
	hide flare2;
	hide flare1;
	hide flare4;
	hide flare3;
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	gun_3 = 0;
	restore_delay = 5000;
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = 5000;
}

static-var  Stunned;
ExecuteRestoreAfterDelay()
{
    if (Stunned) {
        return (1);
    }
	set-signal-mask 0;
	turn turret to y-axis <0.000000> speed <600.000000>;
	turn sleeve1 to x-axis <0.000000> speed <600.000000>;
	turn sleeve2 to x-axis <0.000000> speed <600.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve1 around x-axis;
}
SetStunned(State)
{
    Stunned = State;
	if (!Stunned) {
	    start-script ExecuteRestoreAfterDelay();
	}
}
RestoreAfterDelay()
{
	sleep restore_delay;
	start-script ExecuteRestoreAfterDelay();
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret to y-axis heading speed <650.000000>;
	turn sleeve1 to x-axis <0.000000> - pitch speed <600.000000>;
	turn sleeve2 to x-axis <0.000000> - pitch speed <600.000000>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
	if( gun_3 == 0 )
	{
	    emit-sfx 1024 + 0 from flare1;
		move barrel1 to z-axis [-10.000000] now;
		sleep 100;
		move barrel1 to z-axis [0.000000] speed [37.500000];
	}
	if( gun_3 == 1 )
	{
	    emit-sfx 1024 + 0 from flare2;
		move barrel2 to z-axis [-10.000000] now;
		sleep 100;
		move barrel2 to z-axis [0.000000] speed [37.500000];
	}
	if( gun_3 == 2 )
	{
	    emit-sfx 1024 + 0 from flare3;
		move barrel3 to z-axis [-10.000000] now;
		sleep 100;
		move barrel3 to z-axis [0.000000] speed [37.500000];
	}
	if( gun_3 == 3 )
	{
	    emit-sfx 1024 + 0 from flare4;
		move barrel4 to z-axis [-10.000000] now;
		sleep 100;
		move barrel4 to z-axis [0.000000] speed [37.500000];
	}
	sleep 50;
	++gun_3;
	if( gun_3 == 4 )
	{
		gun_3 = 0;
	}
}

AimFromPrimary(piecenum)
{
	piecenum = turret;
}

QueryPrimary(piecenum)
{
	piecenum = turret;
}

AimFromSecondary(piecenum)
{
	piecenum = turret;
}

QuerySecondary(piecenum)
{
	if (gun_3 == 0) piecenum = flare1;
	if (gun_3 == 1) piecenum = flare2;
	if (gun_3 == 2) piecenum = flare3;
	if (gun_3 == 3) piecenum = flare4;
	
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode brwheel type BITMAPONLY | NOHEATCLOUD;
		//explode blwheel type BITMAPONLY | NOHEATCLOUD;
		explode fwheel type BITMAPONLY | NOHEATCLOUD;
		explode turret type BITMAPONLY | NOHEATCLOUD;
		//explode sleeve1 type BITMAPONLY | NOHEATCLOUD;
		//explode barrel3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare3 type BITMAPONLY | NOHEATCLOUD;
		//explode barrel4 type BITMAPONLY | NOHEATCLOUD;
		//explode flare4 type BITMAPONLY | NOHEATCLOUD;
		//explode sleeve2 type BITMAPONLY | NOHEATCLOUD;
		//explode barrel1 type BITMAPONLY | NOHEATCLOUD;
		//explode flare1 type BITMAPONLY | NOHEATCLOUD;
		//explode barrel2 type BITMAPONLY | NOHEATCLOUD;
		//explode flare2 type BITMAPONLY | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2 ;
		explode base type BITMAPONLY | NOHEATCLOUD;
		explode brwheel type FALL | NOHEATCLOUD;
		//explode blwheel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode fwheel type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode barrel3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode barrel4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare4 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode sleeve2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode barrel1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare1 type FALL | NOHEATCLOUD;
		//explode barrel2 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare2 type FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3 ;
		explode base type FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode brwheel type SMOKE | FALL | NOHEATCLOUD;
		explode blwheel type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode fwheel type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode barrel3 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode flare3 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode barrel4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare4 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode sleeve2 type EXPLODE_ON_HIT | SMOKE | FALL | NOHEATCLOUD;
		//explode barrel1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare1 type FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode barrel2 type SMOKE | FALL | NOHEATCLOUD;
		//explode flare2 type SMOKE | FALL | NOHEATCLOUD;
		return(corpsetype);
	}
	corpsetype = 3 ;
		explode base type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode brwheel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode blwheel type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		explode fwheel type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode turret type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		explode sleeve1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode barrel3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode flare3 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode barrel4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare4 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode sleeve2 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode barrel1 type EXPLODE_ON_HIT | FIRE | SMOKE | FALL | NOHEATCLOUD;
		//explode flare1 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode barrel2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
		//explode flare2 type EXPLODE_ON_HIT | FIRE | FALL | NOHEATCLOUD;
	return corpsetype;
}
